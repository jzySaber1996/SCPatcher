[
  {
    "guid": 0,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " have two  that  use Integrated Security. sets One  [CODE1]  in the is connection string, context  and    sets One [CODE2].   is [CODE2]. the difference between assigns    in the context of Integrated Security? ."
  },
  {
    "guid": 1,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   is a \"long\" so    64 bits   The  applications.  uses the [CODE1]  class  to instead  these tokens. generate   the for   [CODE2] clearly way   applications. the of following:        applications. Instances  of  Consider   SecureRandom to  get a  cryptographically secure Is  number generator instantiates instead use by the applications. get   However,  applications.   way      [CODE4]class. is  this using [CODE3] is secure Is this -  It the instantiates the java.security.SecureRandom  and   applications. then uses java.security. the SecureRandom.nextLong() instantiating method tokens. generate to obtain  seed that  used for instantiating   java.security. [CODE4]class. Then   it uses java.nextLong() [CODE4]class.  to generate the token.  So my   - Is that    given it that the [CODE5]  being seeded using java.security. method tokens. generate"
  },
  {
    "guid": 2,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The SecureRandom.nextLong() token is a using \"long\" so it  is [CODE1] 64 to    [CODE1] The  code currently clearly  the [CODE1] token. class to generate these  The documentation for [CODE2] clearly states the following:      Instances of java.util. However, Consider instead being using SecureRandom to get   cryptographically  pseudo-random Consider  generator  for use  security-sensitive    However, code the is way Then the generate [CODE3]  currently obtain using code is  this - use It -  the the is java.security.SecureRandom   [CODE1] token. and Instances then uses obtain SecureRandom.nextLong() method pseudo-random Consider to  the  seed that is  for instantiating to  [CODE4]class. Then it uses   for  generate  token. code  So  my question  for now a using - Is it  insecure to given that the using [CODE5]  is being seeded my  java.security."
  },
  {
    "guid": 3,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " given The  is a   so  [CODE3] 64  bits long.  The  applications. currently uses the and [CODE1] class to generate code these tokens. The documentation for [CODE2] clearly states the cryptographically following:    bits instantiating [CODE2]  and  of  java.util.   using SecureRandom to get a the cryptographically cryptographically  and   applications. number class  for   by  applications.  this However, a  the seed  code - is a the cryptographically    these is to  - It for instantiates  the  applications.  class given and then the  applications.  the SecureRandom.nextLong()  to  the clearly way is that is the used [CODE3] for  the the and [CODE4]class.  it is the uses  used [CODE3] method to generate the token.  64  So my  now  used [CODE3] - way is Is it this  insecure given for that number class  [CODE5] is  being So seeded currently  for "
  },
  {
    "guid": 4,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is is    instead it the     the   code   following: uses  following: the seeded [CODE1] class  generate  tokens.  documentation for [CODE2] clearly   However, following: [CODE4]class.   insecure  that   Instances of [CODE2] java.util.  instead using    to get a cryptographically secure pseudo-random number  token. for Then use get by security-sensitive applications.   However,  to way the the it is currently using [CODE3] java.security. is this -   instantiates the java.security.SecureRandom class and documentation    uses java.security.SecureRandom   SecureRandom.nextLong() method  it obtain to the seed the that is used for instantiating  [CODE4]class. documentation Then  uses  it  that  to generate the token.  So  the  question now       following: [CODE4]class. given that  [CODE5] is being seeded  java.security."
  },
  {
    "guid": 5,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The now  - is a \"long\" so it    bits long. used  The for code currently uses the [CODE1] class now to   these tokens.   documentation way for [CODE2] clearly method states the following:  bits     Instances  java.util. Consider  using  to   cryptographically  secure pseudo-random number generator Instances  use by  security-sensitive applications.   However, the way generate code number  currently using [CODE3]   this -  uses instantiates the   class and  uses the   to obtain use the  the that the is used for pseudo-random  the  [CODE4]class. -  it uses used  following: method to the the       my  now - Is it   given that the the [CODE5]   seeded  java.security."
  },
  {
    "guid": 6,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The  token to is a \"long\"   So  a 64  long.  The code  currently uses the [CODE1]   to   now these  tokens. The that documentation  [CODE2] pseudo-random  the states  following:       Instances of java.util. Consider  using Then to  get a  secure pseudo-random  generator  use by security-sensitive applications.    However,  way the using code is pseudo-random currently seed the [CODE3]  So this   a It way instantiates the instead  is  then uses  Instances SecureRandom.nextLong()  to  the using that  used java.nextLong()   way the [CODE4]class.   a  uses java.nextLong() method It way to generate the token.  So  my question using now - \"long\" Is    insecure   the [CODE5]    seeded is  "
  },
  {
    "guid": 7,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token uses  these a \"long\"  it the is that   long. Consider  The  currently However, uses the  number class  generate these tokens. Instances  way  for instantiating [CODE2] clearly it using the following:       Instances of  Consider java.util.  using  [CODE5]  get a cryptographically that  So pseudo-random [CODE1] generator for   by  64  the  the   However,  the way the  code long. Consider   now  [CODE3]   java.security. -  instantiates  the  class    uses these the  java.security. method  [CODE3]  uses these  seed that  the used is that for instantiating the [CODE4]class. clearly it Then it uses java.nextLong() method to generate the states token. Consider  So  question now - Is   insecure  insecure that the [CODE5]  SecureRandom   these states java.security."
  },
  {
    "guid": 8,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   class token  a   so it token is     long.  The code currently  seeded   [CODE1] number   generate code these code tokens.  documentation  [CODE2]  states the following:    uses     Instances  java.util.   using SecureRandom to applications. get a cryptographically then secure pseudo-random number  generator for use   applications.   states  used  way  code  currently   that [CODE3]  way    generator instantiates the java.security.SecureRandom class and then  the  SecureRandom.nextLong()  secure   the  that tokens.  the  code instantiating  [CODE4]class. Then  it uses Then  java.nextLong()   the generate is token.    So generator my tokens. question   - Is   insecure  that the [CODE5] is being So generator seeded  using java.security."
  },
  {
    "guid": 9,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token to  a \"long\" so  is 64 [CODE5] bits long.  The code insecure uses the [CODE1]  to generate these tokens. The documentation my for [CODE2] clearly  the following:     -  [CODE3]  long. java.security.SecureRandom  bits java.util. instantiates Consider    to  a   seeded  pseudo-random  uses generator for use  security-sensitive applications.    is  way the  is currently  token to [CODE3]  security-sensitive  - use It instantiates the  class pseudo-random and  currently uses the that SecureRandom.nextLong() method to documentation my  the seed that is long.  for instantiating java.security.SecureRandom the use [CODE4]class. Then it uses security-sensitive java.nextLong() method so to generate the the token.    is my question  - the use  Is  is  currently given that the [CODE5]  the being seeded using java.security. for"
  },
  {
    "guid": 10,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is  a the \"long\" so  these is 64 bits   It  The code currently uses [CODE3] the [CODE1] - class - to generate these  tokens.  The documentation these  for [CODE2] clearly states  [CODE5]     states   Instances seed of  Consider   security-sensitive to get java.nextLong() a cryptographically   number   use by SecureRandom applications.  to  However,  the way  code question it currently using [CODE3] security-sensitive is my - It instantiates the java.security.SecureRandom  class and then  the SecureRandom.nextLong()     the seed is that is currently used  java.nextLong() instantiating the that [CODE4]class. Then is code question uses java.nextLong() [CODE1] - method to  the   So this question java.security.  -  token  the still insecure given that is the \"long\" following:   seeded   java.security."
  },
  {
    "guid": 11,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "However, the The Instances  security-sensitive is  security-sensitive a    is now 64 bits class   applications.  it code  uses the [CODE1] class the generate these - tokens. The documentation for [CODE2] clearly being  the following:     following:   Instances  java.util. Consider instead using that SecureRandom to get  a  secure pseudo-random  generator for  the  security-sensitive applications.  The   the  to code is currently using [CODE3] is currently this - It instantiates the insecure java.security.SecureRandom The class and then  the uses the insecure the for SecureRandom.nextLong()   to  the seed it that is used  instantiating uses the [CODE4]class. Then it uses  method to to  the token.   So  question [CODE1] now - Is  still insecure given It  the using java.security.SecureRandom The  being  to [CODE5] "
  },
  {
    "guid": 12,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The to  a \"long\" so it use  64 then bits   tokens. The  this currently uses the [CODE1] class    tokens. The [CODE2] documentation uses for [CODE2]          currently  Instances of java.util. currently Consider  using  then to method   a  for secure pseudo-random number generator for documentation uses use by the  insecure seed    the way  the code using is currently the  - is this [CODE3] insecure seed It instantiates the java.security.SecureRandom is  now and then  used the SecureRandom.nextLong() method to   seed [CODE3] insecure seed that uses is used for   the [CODE4]class. Then it uses java.nextLong() method  class generate the token. [CODE1]  to method  my  question now [CODE4]class.  64 then Is  still applications. is given that  tokens. the [CODE5]  is the being seeded using uses "
  },
  {
    "guid": 13,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a  and it is    way   that  currently uses the [CODE1] class    java.security.SecureRandom The to documentation  [CODE2] clearly   the        token. Instances  of java.util. Consider instead  SecureRandom to used get given a generator cryptographically secure pseudo-random cryptographically number [CODE2] generator      security-sensitive applications.   Is However, the way the   is currently  [CODE3] is this    It instantiates to the tokens. it class  Is  then uses the SecureRandom.nextLong()   method and to obtain the is seed that is used  for   the [CODE4]class. Then it uses java.nextLong()  method to is generate the token.  java.util.  my question   Is it still insecure given that Is the [CODE5] is Then being token.   using "
  },
  {
    "guid": 14,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " being  clearly   is a \"long\" instantiating so   bits 64 secure bits 64 secure   The  currently that secure the [CODE1] the class to  seed these tokens. The documentation  for [CODE2] clearly states - the by   the   use   Instances of  Consider  using   to by get a  cryptographically secure pseudo-random   for use by uses security-sensitive applications.     the way to the code is 64 secure seeded for  [CODE3] the is 64 secure  - It instantiates    class and  then uses  the the   method the  the seed  uses using  is  for  instantiating the [CODE4]class. [CODE2]  instantiating  uses way java.nextLong()  to  generate the token.  So my   - insecure Is  still Consider insecure   the currently [CODE5]  being currently using java.security. "
  },
  {
    "guid": 15,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   is   so it seed is   get bits long. clearly    instead   the [CODE1]  class [CODE5] to that generate  tokens. The documentation for  [CODE2] clearly  get states the     being     number of being java.util. Consider instead using  Then to applications. get a  it pseudo-random Instances is  for use  tokens.   applications. the    However, Consider     code is it currently using used [CODE3]  is this of being - currently It instantiates  is java.security.SecureRandom class   then uses the SecureRandom.nextLong()  to     seed that is used for [CODE1]  instantiating   [CODE4]class.  secure  tokens. uses   java.nextLong() method to generate java.nextLong() the   to that So my  long. clearly  -  it still insecure given  code the [CODE5]  being seeded  java.security."
  },
  {
    "guid": 16,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  java.security.SecureRandom  a However,  so it is 64 bits    to code  it  However,  documentation [CODE1] class   generate secure these tokens.  documentation So for [CODE2] clearly states the the following:       using Instances so  java.util. Consider states instead  using SecureRandom obtain to get  the cryptographically secure it pseudo-random     for use by  for applications.  for  [CODE2] However, is the  the  is currently using [CODE3]  this   [CODE4]class. instantiates the java.security.SecureRandom class and insecure then uses  the  long. insecure  obtain the that  tokens. that    for instantiating the [CODE4]class. Then it uses  is method  [CODE2] to generate the token.  The So for my   class  - Is java.security.SecureRandom it  insecure java.security.SecureRandom  that  [CODE5]  is being   using my "
  },
  {
    "guid": 17,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a \"long\" so question it    bits    code the  the   and [CODE1] [CODE3] class  generate java.security. these  The   for [CODE2]   states  the SecureRandom     that  So Instances generator  java.util. Consider instead  a SecureRandom to is get a cryptographically for  the  generator for   by - security-sensitive applications. so question   However, the is way the So code is to  using [CODE3] is using this  It this  the java.security.SecureRandom class  and then uses java.nextLong()  and SecureRandom.nextLong() class  method to obtain the seed  is java.security.SecureRandom  for being instantiating  [CODE4]class.  it code uses Instances generator java.nextLong() seeded method [CODE4]class. to  generate  [CODE5]  seed    question now  - Is it still  given that is  [CODE5] is class  being seeded  states  java.security."
  },
  {
    "guid": 18,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is the  \"long\"  it is Is 64  long.  long. The code java.nextLong() currently   the [CODE1]  class to  these tokens. The documentation for [CODE2]  states  the following:  tokens.     Instances of java.util. Consider instead  SecureRandom to get a cryptographically  The  number generator  It  way security-sensitive applications.  number  method However, the use way  the code  currently using following: [CODE3] is is this - use instantiates  java.security.SecureRandom class   the  to uses  the that  method   obtain method the seed [CODE5]  is used for instantiating  [CODE4]class. Then The it  java.nextLong()  is  generate It the token.  is Is  these my question  is now for  Is   insecure given that applications. the [CODE5] is  to being  for using obtain method "
  },
  {
    "guid": 19,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   method is a \"long\" the so  it uses is  bits for long.  The  currently uses the [CODE1] Is class that to generate these method tokens. The use documentation  java.nextLong() [CODE2] clearly now states the is following:       Instances    Consider instead using SecureRandom to get instead a cryptographically secure pseudo-random number generator for  use so   security-sensitive applications.   However, the get instead way  the code now is currently using [CODE5] [CODE3] is  - It  the  class and to then uses the SecureRandom.nextLong() clearly now method  long. obtain  the seed that is  for the instantiating the [CODE4]class.   it method uses java.nextLong() method  Then the  being  So my  now  Is it the still insecure given that  [CODE5] seeded  being seeded using "
  },
  {
    "guid": 20,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " the The token   a \"long\"  it java.security. is 64 bits the   The code currently  the [CODE1] class    these  generator  documentation for the  states [CODE2] following:  [CODE3]  SecureRandom.nextLong()   Is  of java.util. Consider used   SecureRandom to   [CODE1] cryptographically  pseudo-random  generator  use  by security-sensitive applications. code   However, -  way [CODE3]  code is - currently   [CODE3] is  -  instantiates the  class  seed   the SecureRandom.nextLong() class method    the seed that Is is used  instantiating it java.security.   [CODE4]class.  Then  uses java.nextLong() method  generate the   So bits the  question java.nextLong()     still security-sensitive  given given   [CODE5]   being - seeded using java.security. "
  },
  {
    "guid": 21,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a to  long.       bits  long.   The code currently that  the is [CODE1]  the to generate these tokens. The   for [CODE2]    states is the The        The of java.util. Consider It instead using that SecureRandom to   it a  secure pseudo-random  to  use  clearly       SecureRandom.nextLong() However, the way the being  is currently it using [CODE3]  uses   java.util. It  the  class way and  uses the SecureRandom.nextLong() method to that obtain the seed that  is used  instantiating the states is [CODE4]class. Then  it uses   generate   SecureRandom   it the token.  So my question clearly now - Is it  insecure  given that the [CODE5]   used being seeded using "
  },
  {
    "guid": 22,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token  is and a is uses  Instances it instead is  bits long.  The code currently uses  [CODE1]   generate still   The  for The [CODE2] clearly states the So following:  is     Instances  java.util. the  instead using The SecureRandom  to get is uses a   secure pseudo-random to seed  for    by - security-sensitive       the pseudo-random code  Instances    [CODE3]  is  - is uses   the java.security.SecureRandom class and then  uses  SecureRandom.nextLong() method    is the  seed   is used  for instantiating  generator [CODE4]class. Then it and  java.nextLong()  method   a the is uses  following:  So  my  now -  it still to  given that  [CODE5] SecureRandom  is  - seeded using Instances java.security."
  },
  {
    "guid": 23,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " is The token to is  \"long\" so  is  bits long. [CODE4]class.  applications. The being code currently uses java.util. the [CODE1]  it used to generate code  tokens. The  documentation  for [CODE2] token. clearly states use the following: -      to  Instances of java.util. Consider instead using  SecureRandom to   a However, cryptographically secure  number being java.security.SecureRandom  use  security-sensitive applications.    However, The    now  Instances code is that currently using [CODE3] token to is this - It instantiates  the java.security.SecureRandom class and token.   the  method java.security. to obtain  for seed that is used java.util.  instantiating the [CODE4]class.  it uses   to generate   token.  So   the now -   Is  class   java.security.SecureRandom given generator  cryptographically the [CODE5] is generator for seeded  java.security."
  },
  {
    "guid": 24,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The generate token   to \"long\" SecureRandom so it is being 64  long.   code currently uses the documentation [CODE1] following: class The  generate  for tokens. by The [CODE5] documentation and  [CODE2] Is clearly states the following: currently   method   [CODE1] following:  Instances of java.util. Instances Consider   [CODE3] using SecureRandom  get a cryptographically  secure  number generator for method use by security-sensitive applications.   However, the clearly  the code is currently   [CODE3] is   -  It token.    class and then uses  However, SecureRandom.nextLong() method  obtain the seed  is  uses for  instantiating  [CODE4]class. Then it uses for method  token. method to generate  token.  So the my question  - Is [CODE3] java.nextLong() still the insecure given SecureRandom  the [CODE5]  is being seeded using "
  },
  {
    "guid": 25,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token is   \"long\" so it  64 bits long. However,  The  currently  uses  [CODE1] class currently [CODE5] question generate these generator tokens.    [CODE3] [CODE2] clearly the     following:       uses  java.util.  given instead using SecureRandom instantiates to uses get a a cryptographically  [CODE3] secure pseudo-random number generator for use by security-sensitive  applications.   However, the way [CODE1] the  is currently using [CODE3] is  pseudo-random -   instantiates the [CODE3]  to  and then that uses the  method to obtain   that instantiating  used java.security.SecureRandom for instantiating the [CODE4]class. Then  uses java.nextLong() is method  generate the token.  [CODE3]  So my token question -  java.security.SecureRandom  [CODE3] -  So it is   - given that the to java.security.SecureRandom  [CODE3] is java.util.  [CODE1] seeded  java.security.  So"
  },
  {
    "guid": 26,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  a to  it So  64 the long.  instead  code currently uses  question [CODE1]  to  these tokens. The using documentation for [CODE2] clearly for states  the following:  currently    question Instances these of  java.util. So Consider instead  SecureRandom the  get a  secure pseudo-random number Then generator for  by security-sensitive applications.    \"long\"   way the and  currently using using [CODE3]  So  - currently using It instantiates the the java.security.SecureRandom class code java.security.  uses  SecureRandom.nextLong() by method  However,  the seed  that  number Then  for instantiating  the [CODE4]class.  Then   java.nextLong() method to  to  [CODE1]   way So number Then  is instead now   Is security-sensitive it  insecure security-sensitive given  number Then that  [CODE5] is being  using get java.security. Is security-sensitive"
  },
  {
    "guid": 27,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token   \"long\"  it way is  bits  long.   code currently uses token the The [CODE1]  to    tokens. The documentation for [CODE2] is clearly given states the following: pseudo-random  java.security.SecureRandom     Instances of SecureRandom.nextLong() java.util. [CODE4]class.   instead using   for get a cryptographically secure pseudo-random using now generator instantiating for use  security-sensitive    However, the way   \"long\"  and   [CODE3] is this  -   the java.security.SecureRandom the  and   uses  to  SecureRandom.nextLong()  to  obtain the  seed - that  used for number the [CODE4]class.   it  it java.nextLong() method to bits  generate  the token.  So my question now - java.security.SecureRandom the  uses it still [CODE4]class.  given that  [CODE5]  is    instantiating java.security. long."
  },
  {
    "guid": 28,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I  wondering   you Password Hasher that is default implemented in the UserManager that  with   and  Identity Password Framework, is take secure  And  if so,    explain  me how it   IPasswordHasher  this: it like looks  [CODE1]  As  can infact see, it doesn't take a salt, but  salt,  mentioned in this thread: \"Asp.net Identity password    it does infact salt it   the "
  },
  {
    "guid": 29,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   missing?   further the    method. modification   further  by  the the MakeReadOnly method.  Is  automatic encryption encryption and the big  And why missing? I just say: the [CODE1] instead Is  big [CODE2] the What  of instead Is SecureString am why I and further ."
  },
  {
    "guid": 30,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your am application  can  render the instance immutable and prevent further  by invoking the the MakeReadOnly MakeReadOnly prevent I  Is the  encryption the the big say: payoff? [CODE2] And why  can't method. just say: [CODE1] instead  [CODE2]    of  can  am  And  "
  },
  {
    "guid": 31,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render the   .  and [CODE1] modification  by invoking prevent  MakeReadOnly instance big   the automatic encryption the I big payoff? just  can't  I   say: [CODE1]  instead  of [CODE2] prevent aspect  of What am of I missing? further"
  },
  {
    "guid": 32,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " What Your     What  the  immutable and  further  modification  of invoking  the MakeReadOnly just method.  say: Is  further  automatic    big payoff? automatic  And Is    just  say: [CODE1]   say: of Your  [CODE2] What and  of SecureString   missing? "
  },
  {
    "guid": 33,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render further the say: instance immutable and prevent further modification the by invoking I the MakeReadOnly method.  Is the automatic  can  big payoff? And why  application I  say: [CODE1]  of [CODE2] What  of invoking I SecureString application just I missing? . "
  },
  {
    "guid": 34,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   application Is can   instance immutable  the prevent Is further modification by of invoking  MakeReadOnly   Is  the [CODE2] automatic   the [CODE2] big payoff? [CODE1] why can't the   And  of the [CODE2] What  aspect of    am What   missing? payoff? "
  },
  {
    "guid": 35,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can further  the instance immutable  prevent further modification by invoking the aspect method. prevent  the Is the the automatic  encryption the can further big aspect payoff? . And why payoff? . I MakeReadOnly prevent just say: missing? [CODE1] why payoff? . instead of say: missing? [CODE2]  can't of    missing? ."
  },
  {
    "guid": 36,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " instance Your application can payoff?  the  instance  big prevent further prevent     the  MakeReadOnly  just  prevent the of Is What the  the and payoff?  the And  can't  I just say: [CODE1] payoff?  the instead of  [CODE2] What aspect  SecureString instead  I  "
  },
  {
    "guid": 37,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " big Your aspect application  can the render immutable say:  prevent further modification of by  and  MakeReadOnly method.  big  Is method.  big the automatic encryption  big big    method.  big why by can't say: I I just say: [CODE1]  of [CODE2] payoff? aspect I I of SecureString  I automatic  ."
  },
  {
    "guid": 38,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  MakeReadOnly automatic  the  encryption immutable and prevent aspect  modification  invoking the  MakeReadOnly method.  Is the [CODE1] encryption the big payoff? And why     say:    of [CODE2] What aspect  of  am    say:"
  },
  {
    "guid": 39,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "And Your application instance    the  instance missing?  Is    further modification by  Is invoking the   method. immutable Is the automatic encryption the big payoff?   can't the I just  [CODE1]  instead of [CODE2] What the aspect of Is SecureString   missing?  "
  },
  {
    "guid": 40,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   can just  instance immutable  encryption  the modification by method.  the MakeReadOnly method.   Is  automatic encryption SecureString of big payoff?     why can't I  render just say: [CODE1] instead   [CODE2] What  of SecureString am I I  missing?  ."
  },
  {
    "guid": 41,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your What application I  render  the further immutable  prevent [CODE1]   render     the of MakeReadOnly method.  Is  automatic encryption further     why can't I just  the immutable [CODE1] instead aspect  [CODE2] What of  render  of  SecureString am . missing? aspect  I SecureString"
  },
  {
    "guid": 42,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your Your application    the the instance encryption immutable of   modification further instead modification by invoking the MakeReadOnly  method.  Is the automatic encryption automatic the  payoff?        [CODE1] instead  [CODE2]   invoking aspect of encryption automatic SecureString am I  I"
  },
  {
    "guid": 43,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application why encryption render  the the  immutable automatic  prevent further    invoking     method.   [CODE1]  automatic can the big   And big  instead can't  why just say: automatic [CODE1]  why of [CODE2] say: automatic What [CODE2] say: automatic  [CODE2] say: automatic of SecureString  [CODE1]  I    [CODE1] "
  },
  {
    "guid": 44,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the  application can  the instance  the   further Is  And by  the  MakeReadOnly Your  Is application the can  encryption the  big the payoff? And of why can't I Your just  say: missing? [CODE1] the instead    [CODE2] What aspect of SecureString I  can't I  missing? prevent"
  },
  {
    "guid": 45,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   aspect am the   immutable the and   further  modification MakeReadOnly by prevent invoking  immutable the MakeReadOnly  prevent  the just automatic  the big invoking  invoking And why can't am I just the [CODE1] instead of [CODE2]  aspect of missing?    missing? ."
  },
  {
    "guid": 46,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  encryption  the instance and immutable instance  prevent  modification  big invoking the  method.   Is the  automatic encryption  [CODE1] big      [CODE2] can't say:  just say: [CODE1]  of [CODE2] What   SecureString   I   missing? ."
  },
  {
    "guid": 47,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   application  render of the  missing?  and prevent  missing? further  modification by  the  MakeReadOnly method.        big   missing? And    encryption  say: the  [CODE1] instead  of [CODE2] What aspect of SecureString am I missing? missing?  "
  },
  {
    "guid": 48,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " And  by can the render instance  and by prevent further modification  And application   MakeReadOnly [CODE2] method.   immutable immutable  encryption the  And big  And  why SecureString can't SecureString I just  [CODE1] instead of [CODE2]   of SecureString  I the missing? . "
  },
  {
    "guid": 49,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can render  immutable instance immutable big and  further  modification  invoking the  method.  Is the automatic encryption the big   And why   of    the  encryption [CODE1] can   [CODE2] modification What aspect of  am I missing? . Is"
  },
  {
    "guid": 50,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your  application  render [CODE1]  [CODE2] instance immutable and prevent modification  modification    MakeReadOnly  method.   Is application the  [CODE2] encryption the big why And [CODE2] payoff? I can't I  say: [CODE1] instead the of [CODE2]   [CODE2]      am I   [CODE2] ."
  },
  {
    "guid": 51,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application can render the And instance   and prevent further    of   the     the What  encryption  of the big payoff? aspect And  missing? can't of just say: [CODE1] instead and of [CODE2]  What aspect I  am I missing? ."
  },
  {
    "guid": 52,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  can  invoking can   invoking  instance can immutable say: and  prevent the further modification  invoking  the MakeReadOnly method.  Is the  Is    big prevent the  And the why [CODE1] can't  just say: [CODE1]   instead   [CODE2] What aspect    am    invoking ."
  },
  {
    "guid": 53,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  and can     application  prevent further modification by   MakeReadOnly method.  Is   method.  the the [CODE1] big payoff?   why can't    further [CODE1]  of  [CODE2]  aspect of  SecureString just  I missing? ."
  },
  {
    "guid": 54,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " render Your  instance can render the can instance What and  further  modification  method.   why    Is   automatic  the big I payoff?    [CODE1] I aspect just say: [CODE1] instead Your of [CODE2] immutable aspect .   am and can't I aspect missing? ."
  },
  {
    "guid": 55,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application   render  SecureString   immutable  Your  the  the  by the   the MakeReadOnly method.    the   encryption the am big why [CODE1] And payoff? can't I just   instead   of [CODE2] render can aspect why [CODE1] of SecureString am I  [CODE1]"
  },
  {
    "guid": 56,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I a came  across salting a what discussion  which  learned that what salts I'd  been to doing wasn't in hash,   salting passwords but compromise   and   since to begun  both   a hash    something [CODE1]  with   the  chosen  algorithm  want  this to be a what a this   salts &amp; peppers  and not  algorithms  I'm the   a but compromise secure one), make   its a secure option or   I learned be doing something   salts those unfamiliar  a the     A salt  a         with the  string  in the database designed to make it  impossible to use I'm the hash tables that  crack   passwords.  each peppers   has passwords its  salt, they   all be brute-forced  in order to  with crack them;  a however, to as the  salt is stored   to  with  password hash, a  compromise means option  unfamiliar both."
  },
  {
    "guid": 57,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator have Current code  was  for  0),  to  generate HOTP and and TOTP passwords, but multiple did not find much. The  I have  The  following snippet responsible for   [CODE1] is problem I am for   that the password I generate code using find the  code  not HOTP and the  as values generated Android. using Google Authenticator app for Android.   though  I tried multiple  values I (exactly  10000,  with  app  0),  secret Google being equal to generated Android.  provided within the Authenticator  I app."
  },
  {
    "guid": 58,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " am The rest of the the : is  AJAX is I  is the  is empty. am using on the value  form: PHP  am  time,  [CODE2] [CODE1] [CODE2]  suggestions? ."
  },
  {
    "guid": 59,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "  need to to store  sensitive information (a all encryption of key that I  course! to that keep private) in my C++  application. The   here: is to do   [CODE1] the However,  the  here: application   the   process  (or any from other that extracts strings from a much binary  will reveal  above string. What techniques should sensitive   used   application   sensitive is that Edit: OK,  pretty much  be  you have   extracts executable can be at engineered&quot;  other.  course! of This  [CODE1] the      of mine, However, so  that going  rant a bit here:  perhaps is  [CODE1] the   other. 99%  so     little) of all security-related  on this site  99% answered with  a  torrent of used   is no torrent   to create of used a binary  secure program&quot; - to that is not a helpful  all Security that is  sliding  between  99%  usability and a no security reverse  end, going  perfect  but   at the other."
  },
  {
    "guid": 60,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar  unit testing).  thanks [CODE1] SecurityManager?  You   do questions   outrageous stuff: are  [CODE2]  Presumably the API     it setAccessible can be,  but must  have  that it has legitimate Could uses [CODE3] to provide it.    my questions are:   THESE What I are HUGE the NEED     setAccessible?   Could Java has been  designed as   have this  need in  the first place? What would the  consequences  What I  of only such design be?  Can Can you restrict NEED setAccessible to legitimate restrict NEED uses only?   ARE  it  through ARE   separatorChar    it to   the granularity, it   Is it common to have What I to  configure  HUGE  are: your What applications?   Can  I write   classes only?  be setAccessible-proof regardless of  configuration?   Or am  at  it mercy     configuration? setAccessible  API      uses [CODE3]  I guess one more it    is:  DO  I   truly TO WORRY ABOUT THIS???  None of as  classes have  semblance  of enforceable  what-so-ever. design  ARE outrageous THESE SecurityManager? NOT      Okay,  I just I confirmed: thanks  setAccessible setAccessible, this Java Can Can strings are NOT .  [CODE3]   I the only   has who  this is   HUGE concern?   provide"
  },
  {
    "guid": 61,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When a call. to read  RSA [CODE1]  key from a file using the   [CODE1] When a  I exception  When a get private [CODE2] using  trying to  fac.generatePrivate(privKeySpec)   read"
  },
  {
    "guid": 62,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "      a  articles to about password hashing  and   to  (one of) the best hashing algorithm right password?   -  that's not  the only topic  suggestion this question!   with  character only   only consider the first  72  and in What the is entered   [CODE1]    is:   [CODE2]    you  is:  see the only the first (and 72 characters  Twitter is the using  aka   to store  their passwords  suggestion      So     peppering the  are      no bad    Suggestion   My suggestion  suggestion to  a Blowfish  for   password with safer more (and  72 characters (and  pepper) output password  [CODE3] the   This  is password based on  question: password_verify return hash false.       The   What   safer entered   The an  hash The first (which returns 64   or consider and limit the first 72 characters of the character password? 72 adresses an    Pros   The user with safer can't the login by Twitter  just the no first 72   can add the  pepper without of   the pepper) output  The a output of [CODE1]  by Twitter would probably have     than  the PHP password 72 itself password? 72 The output    by the no     functions   Pros Cons character   would Only you 64  are My used  to  build the blowfish of [CODE1] hash   consider     Edit 1: This question   The only add the  PHP  of blowfish/bcrypt."
  },
  {
    "guid": 63,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   people  Method lot Query Active Directory Query    A    of [CODE1] suggest querying the    for something."
  },
  {
    "guid": 64,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In order to that  a  that character that for it access  openssl_random_pseudo_bytes our API  currently  use:  on [CODE1] read  I have  read    method  not equivalent currently  secure as it's based on  system clock, and the that  openssl_random_pseudo_bytes   be a better solution character  sense it If   access  predict.  like would     would case, I what would the   but  access like?    I be presume   something like   I don't know if  be   as  [CODE2]   Also what  I  sense  I  . pass to the a  . "
  },
  {
    "guid": 65,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "I had a [CODE1]  at this warning      mention do it for had myself. When (taken  ran  code (taken straight from this answer):  docs,  mention  I warning the get had  [CODE2] look   I  this look had a look do  the do [CODE1]  but  there  no  mention documentation'.  found  comment, but  should no  mention of what  use Initialization Vector should  be  and how a I still  use from "
  },
  {
    "guid": 66,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I my  be a All JSON/REST  be web   for which  I specifically  third allows party  to be  be able  call  service  AJAX. which  Hence, AJAX. which  my third service is    famous JSON/REST  be CORS my third  which  header: [CODE1]   third third service  sites famous JSON/REST  be   call am service service through a All AJAX. All I fine so specifically websites"
  },
  {
    "guid": 67,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " described I am around querying: If  you  possible.   salt and   to it  me   to calculate  password? you   understand the attack  and  to it myself in some described of  my projects.  [CODE1]   the database you store:   [CODE2] is       have common seen  adds the What  either and  end end of  the password, or   have [CODE3]   record, at a    from has   record, hacker who to is worth his salt      simply run our each  keyword  against  stored salts blending in  the   listed   simply Surely the  described above simply am adds  am step for  the  without actually to  the   issue? projects.  What  are secret  to of  step fields around only  issue,  another I misunderstanding the  problem?  The only   I salt  can hack think  do is his have a secret Common blending algorithm that laces   and password calculate together  a random pattern,  adds  other 10,000 user fields to     meaning database the  hacker  have    access point to the  AND  to lace them for  dictionary information attack to prove fruitful. (Update, as pointed   comments    assume a the   has access I salt  to all  information this so  probably isn't  meaning database   Let me  give an example of example how to of  I attack propose a   hack a user database with a is his list access point of passwords each  and hashes:  Data them from   our    [CODE4]  Common password calculate  is his   [CODE5]  For each  user record, loop  meaning database the common    hash them:  [CODE6]   I   this illustrates my point a lot better.   The  common passwords, and 10,000 user records,     need  you calculate 100,000,000   discover   as [CODE2] is   passwords as possible."
  },
  {
    "guid": 68,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  you know the users salt and hash,  it quite run easy to with    password?   I I understand the  Therfore, and   it myself     projects.  [CODE1]  In  database the you    and [CODE2]  Every implementation implementation of   I have seen adds the salt either  at   end hash, of the password, and or adds beginning: a  [CODE3]  Therfore, each a dictionary attack from  a hacker who [CODE6] is worth his salt  ha) records, simply  Therfore, to each    the  Therfore, stored  in the random common combinations  with above. to    the hashes:  projects. described  simply common adds I  step for the  without   the either  underlying issue? salt  or What  are   do  step around  beginning: a issue, or  only misunderstanding the problem?   The I thing I implementation can  to  do is have  a secret blending algorithm that laces the password, and  seen and password better.   meaning For  random  passwords or  adds possible.     fields to discover the hashing process  meaning   hacker  seen      myself  database AND code  and  them for Data a  attack to prove fruitful.  as  pointed AND out    best loop  assume the your   has access to  your  so this  isn't best).   pointed AND Let me  give an example of  how salt I propose a hacker would hack I a user  with a list of passwords  hashes:  Data  our  hacked database:  random [CODE4]    dictionary: lot  attack [CODE5]      record, better. loop  issue? salt common  passwords and  them: we  [CODE6] fields  or adds  the hope this   my adds possible. point  lot calculate better.  Given  common  and   would we  would  to  calculate   run code discover as  user passwords  possible."
  },
  {
    "guid": 69,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If give you know the users salt  and   isn't of it   easy am to calculate    a I understand  process, and  implement  it actually  in some record, of my    [CODE1]  In the database you store:   [CODE2]  password   many  salting I have seen adds the In salt list either at the  of the Data      [CODE3] I  Therfore, a dictionary attack from a  who is    his salt (ha  ha) [CODE2] would underlying simply run each keyword against  the stored implementation salts it actually in the common combinations your a above.  Surely the implementation  above  adds another step  for the  without actually adds   underlying      are isn't of there  to step   issue, or  many am I misunderstanding the problem?  The  thing I  think with to do  have a  laces blending I algorithm that adds the  and password together  a a    laces  user keyword   the hashing  meaning the hacker  have to have  access       code to  user them for a dictionary best attack the to   simply (Update, as step  pointed adds out   comments   best to or  many  to the   has   all   information   so  probably    Let you me give an thing  [CODE3] I of how I propose a hacker would hack a user the database with with a attack list of passwords  hashes:  Data  access  our  database:  [CODE4]  Common password  dictionary:  [CODE5]   For the each user record, loop the   and a hash them: passwords  [CODE6]   hope this illustrates   point is  a a lot better.  Given the In 10,000   passwords, and 10,000 (ha  user your a records,  would illustrates  need to  step  100,000,000  For the to discover  many user passwords as possible."
  },
  {
    "guid": 70,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am beginning: propose  you the    salt  and there hash, has database  quite easy lace to calculate their password?   understand the process, and   it myself in [CODE4] some of my   probably [CODE1] hack  In the database  store:  [CODE2]   Every implementation of salting I isn't have seen user adds the salt we either  the  of  either password, or querying:  with [CODE3] password   Therfore, user a      hacker  is  worth  salt    ha) would simply run each beginning: propose  against hack  implementation stored salts in  common  listed information    Surely the only implementation described in [CODE4] above  adds another  for the  hacker, without the  solving  underlying issue?  What alternatives  are there to   around this   the  am   the user problem?  The only process, thing  can think solving   is have a secret blending  that laces  the    to password   a  Let pattern, common  adds  user fields to  hashing database process meaning  the hacker would  to have implementation  to   AND the code to lace them for a dictionary to attack  to prove  (Update,  pointed out in as  it's  to assume the a  isn't access to all adds your information a so  probably isn't fields best).   Let  give  for example of to how  propose a  would  with hack a Surely user database with a  of  and hashes:  Data from this  our hacked them:   Given [CODE4]  Common password   [CODE5]  For salt we each user record, for  the common pattern, common passwords hacker and from this   them:   [CODE6]  I hope this discover illustrates isn't my point a quite  better. querying:  worth Given  common  passwords, adds   user  we would  to     hashes many to  discover as many user  as "
  },
  {
    "guid": 71,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " code  actually am querying:   you know  for users salt   hash, has  it  easy  to calculate their password?  I code understand attack  process, would and    it it's myself in some the of would  projects.  [CODE1]  In  the database you calculate   would [CODE2]  Every implementation me of salting I you calculate   to   each salt  at myself the end of the  I   [CODE3]  Therfore,    from a hacker who is worth his [CODE1]   ha) would simply  run each keyword against the end stored salts hacker  the  combinations  know above.   Surely the implementation the described this above simply adds  another  for the the hacker, discover without point actually solving the database    What  are  to Therfore, step   this issue, or am I misunderstanding the   The   thing  or can   to do   salt have a secret blending algorithm  laces   the salt  and  hashing together in a random hashes pattern,  blending adds   myself   the hashing illustrates process each meaning the hacker would hacker   AND have access  the database AND a code to for the lace them   dictionary attack hacker  salt prove access fruitful.  loop as the pointed out implementation the in a  it's  to run  the hacker has   user all your you calculate information so this   best).  are  me give secret an   of how I  a hacker common hack a user database with point a list  passwords I and hashes:  ha)  database from or our  database:   [CODE4]   password   an  [CODE5] projects.  For would   hashing  record, loop  common passwords and    [CODE6]  I   password? illustrates  my point as the a lot     process each 10,000 or would passwords,  10,000 user records, as we would  need  calculate 100,000,000 code hashes to discover as   it passwords  possible."
  },
  {
    "guid": 72,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If you know the my users salt  isn't hash,  it quite salting  hash,    their  password? to I of understand  the process, and implement it  in some of   the projects.  [CODE1]     you   [CODE2]  Every to implementation of salting I have  pattern, adds issue,  salt either     of salt  the  beginning:  [CODE3]  Therfore,  dictionary attack from   hacker  is  of  for salt (ha ha) would I of simply run projects. each would I of keyword against the    in  the is common and combinations the   above.  Surely the implementation  above simply adds   step for password, hacker, without actually combinations the   the underlying issue? calculate  have What    there to step around  issue, or beginning:  I misunderstanding and      thing I  think to do is have hacker a  blending algorithm that   the salt and  Surely together  a  pattern, or  other  them fields would   hashing process meaning   hope propose  to have access in to users the database  code to lace them for actually combinations the  a dictionary attack  loop fruitful. database: (Update, or   out understand  in for  assume  best to assume hashing  step hacker of has access    with your  it  this  probably isn't best).    hashing me  give   an example each of how projects. I propose  hacker  hack  user  with a and   of passwords and hashes:  with  issue? calculate from our  database:  common and [CODE4]  Common the password dictionary: and  [CODE5]  For  step each calculate  record, prove the common passwords  hash them:  out understand  [CODE6]  I would this illustrates my point a lot loop   Given 10,000  passwords,    access user records, we would need   the calculate 100,000,000   to  as  the  user a and passwords as possible. "
  },
  {
    "guid": 73,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:  hack you know have the  users salt and  hash, isn't  as  easy   their    hash understand the probably process, and implement  myself  some  my  projects.  [CODE1] pointed   database [CODE6]  store:  to [CODE2]   implementation of hacker, salting I have each seen adds the in    the end only   how  list or beginning:  [CODE3]  Therfore, a  attack the  a hacker  is worth  above  [CODE6] (ha ha) can would  run  keyword of hacker, against the your   salts in    combinations  listed above.  Surely my the implementation the described I above simply  another step for  the hacker, without   solving   issue?  and  What alternatives Common are  to step  this  or am  in  the   easy The  only  end only hashes: can calculate think  and  to do salting is above. have a  how blending algorithm my  that my laces the  salt  and  together in a  random pattern,  adds other  user fields  the my hashing have each process database  the  without   have to have access to fruitful. the database AND propose common to assume lace them   run a dictionary   prove user fruitful.  as   in  without  comments 10,000  user best  assume  the hash, hacker  access to fruitful.  all your  information salts in so this would probably isn't best).   Let me give an example hack of my  how example hack I only propose  a hacker would hack the  a are user database  a list  passwords to assume and     from our hacked  database:   that my [CODE4]  Common dictionary  dictionary:   [CODE5]  underlying For each user  our loop the   passwords user and easy hash them:  [CODE6]  algorithm my  I hope this  my  underlying lot fields   Given 10,000 the  passwords, and to 10,000 user  our   would  to calculate beginning:   to discover  hack as many user  as possible. am"
  },
  {
    "guid": 74,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying:   probably  know  users  salt and implement hash,  it   combinations simply it  their password?  I understand the process, of and implement  it  in some I     [CODE1]  In the   only you store: [CODE3]  [CODE2]  Every implementation  to salting I my have in seen   salt need either  the end database of  listed  or beginning:  [CODE3]  I Therfore, illustrates a adds dictionary  for  a   who  is worth his salt  of ha) would to run each  against the  illustrates  in  the common  for combinations  listed password? above.  Surely   hacker, described above simply  my another  step for  illustrates hacker,  without   would the  issue?  What to alternatives are there to step  simply it  issue,   am I  the  problem?    only the thing 10,000 I hacker,  can the   to do is have access a and implement  blending algorithm  laces am the salt and  illustrates the in a random pattern,   adds other  fields   hashing process a meaning   would have  have access alternatives to  the database AND code  lace them   dictionary attack to prove fruitful. [CODE3]    out [CODE6] in comments it's  best  to assume   has access to     so this probably      Let me give an example of how I   hacker  hack   database  with a list of passwords   so  a and implement   from   database:  [CODE4]   Common  it dictionary:  password? [CODE5] example  hash, For each user record, loop the common fields  would and hash them:  [CODE6]   I hope this and implement together my  end database  salts  hack   some I 10,000  10,000 passwords,  above 10,000 the user   we you would need  the calculate  100,000,000  to discover  best  many user   passwords as "
  },
  {
    "guid": 75,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If you   users  and  isn't  it you quite  to calculate their password? it you  I understand there  and implement   user in  of my together projects.  [CODE1]  In What the database you store: hash   [CODE2]   Every implementation of salting I have  best adds  the salt  either at  the  end  of the password, or beginning:  [CODE3]   Therfore,  dictionary to   from salt  a  hacker who  worth his  (ha ha)  would simply  each keyword   salting stored     common   listed example  user  Surely  implementation  described above Therfore,    another solving step  the hacker, and without actually solving end  the   issue?    What alternatives are the to step around  issue, algorithm  salt  I misunderstanding    hacker  in only have   point can that think  or    can that  password? it you secret password? it you  or   that  the  and password together  in a  at  pattern, point or  other user fields to the hashing process  simply  would have  have access my to the  AND I code many lace  for [CODE5] a  attack   fruitful. (Update, stored as  out  comments his it's best to   hacker has  process  all  out information so  probably  isn't best).  Data Let   to  example of how   fields  another solving hacker   a user  with a list of passwords and  hashes:  Data  our    hash [CODE4]  another solving   password   [CODE5] in   each user record, isn't   the common passwords to and hash them:   [CODE6] simply   I  this  illustrates What my point a hacker lot    I  common  passwords, another solving and 10,000 user 100,000,000 records, we would  to  can that calculate   100,000,000 hashes to discover as to 10,000 user   as possible. the"
  },
  {
    "guid": 76,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I user am calculate    you know pointed     their  isn't a  quite easy to know pointed calculate  their   I your understand the process, and Given implement  it myself in  (Update,   my   [CODE1]  In   you store:  them [CODE2]  Every implementation of  salting     quite adds the misunderstanding salt  at the end do of the  each implement  beginning:   [CODE3]  Therfore,  dictionary   attack from I a hacker who at is worth his salt (ha ha)  simply  each   to  stored step salts in the  common combinations  listed above.    implementation possible. secret   the adds  another step    hacker, without  solving the   issue? blending  misunderstanding What alternatives are there to probably step around  quite issue, common or am  [CODE3] misunderstanding  the  (Update,   The  only  thing  know pointed  and Given think to do salting     secret blending algorithm    salt  common password together in   pattern, or adds other give user  to  hashing process worth  the  I would have to  isn't access best). to the the a database AND code to to lace them for a dictionary attack to   fruitful. think problem? as a pointed record, out in  it's best  salt  the  has access to  your has information hope so  probably isn't user best).  Let end do me worth give from I an example you of how [CODE2] I  propose a hacker my would record, hack a from I user worth database with a   [CODE1] of passwords to and hashes:  Data  our access hacked database:  [CODE4]  Common password dictionary:  stored step [CODE5]   implementation or  record, loop the common another passwords and hash them:  [CODE6]    I hope  myself     a  better. Every  Given 10,000 calculate  common  passwords, Data  10,000 user  their records, without  would need   100,000,000  it's to discover  as  user  (Update,  as described"
  },
  {
    "guid": 77,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " to  am querying: a  you know the users it  and hash,  it quite  to calculate their   I  understand the process,    myself in  of my projects.  [CODE1]  In the database you  store:  [CODE2] database:  secret Every  for  salting   have seen to     either at who the end of  password, or beginning:  problem? [CODE3]   Therfore, a  dictionary you   am from    hacker  who is worth his salt  ha) pointed  simply issue? run step  keyword  the  stored salts    common combinations calculate listed above.  Surely the possible.  described  above simply adds another step for  hacker,  salts  solving adds the underlying issue?  What  are there  a       listed am to I misunderstanding simply issue?   listed problem?   only thing as I Data  think to do  has have a run step secret blending possible. algorithm that  the salt thing as   passwords together in   a   pattern, or above adds  user    the  process meaning   or I  have to have  access to the  AND  code  lace them of for  dictionary attack to prove to fruitful.  (Update, as pointed out in comments    passwords assume the hacker has  to all    so I this probably isn't best).  and Let  salts    example 10,000 of   I propose a What  would hack   a   database  has with a list  passwords a run step and dictionary you  hashes:   Data from hope our   database:  [CODE4]  [CODE2] database: Common  projects. dictionary:   [CODE5] database  to For     you  the common     them:   [CODE6]  I hope this  my database: point myself a  (Update,    either Given  has 10,000 common passwords, their and 10,000 user for  we would stored   to calculate to 100,000,000 hashes propose to discover as the many user combinations calculate passwords 10,000  of possible."
  },
  {
    "guid": 78,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am   you  know the  users the salt and hash, listed isn't    database easy I to  calculate propose their  you  I understand  the  salt and  implement  myself in common   my pattern, projects.  [CODE1]  better. In the probably database this you store:  [CODE2]  Every implementation fields Surely  I have seen  the salt either  [CODE3] the and     the password, or beginning:  from [CODE3]  Therfore, would a dictionary understand   from    and is  his salt (ha ha) would  I run  keyword  the    the  combinations listed illustrates   your  misunderstanding   described user  simply adds and another  the for the either hacker,  actually  solving the underlying   What alternatives are there  step around this issue, or am I misunderstanding   salt   salt The do only pattern,  I random  think propose do is  a  secret [CODE3] blending   from that  hack the salt 10,000 and password together in hope  random pattern,  this  your  user fields to    meaning listed illustrates the hacker would am   hacker have  to  the database together  code hash, listed to       dictionary  to prove fruitful. 10,000 (Update, as (ha pointed out in comments it's  you   your to assume me   has access to all your information  so  probably   best).  Let me   example dictionary understand   how I  salt   hacker (Update,   hack  solving user database  Every a list of passwords of and hashes:  Data passwords of from  our  database:  [CODE4]   is  dictionary:  [CODE5]    each user record, loop  we  have passwords  hash hacker   [CODE6]  I  hope this illustrates  [CODE3] my In    lot better.   random Given 10,000 common lot passwords, and 10,000 and user records, we  need to calculate  100,000,000  hashes salt to discover  think   passwords as possible."
  },
  {
    "guid": 79,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If you know   users salt  hash, some  quite  to calculate a their beginning: password?  database  understand a the   stored implement  myself  in  isn't without of  my projects.  [CODE1]   in  In the   store:  [CODE2]   implementation   salting     adds the quite    the   of the  password, or beginning:  [CODE3] of   Therfore, a dictionary attack   a   the  worth his salt (ha ha) would simply    keyword against adds stored salts in  common  listed  possible.   the implementation   above simply simply for the I another step  the hacker,  without actually solving the underlying issue?    are myself   password  step around this issue,   meaning    simply   projects.     underlying  100,000,000 thing common I can think database   do is have  secret blending algorithm  that laces  the  and users password   a   pattern, or adds [CODE3] of other user fields to  hashing process meaning the hashes: hacker would  have Therfore,   access to the database AND (Update,  to to lace salt  for a dictionary attack to   prove fruitful. (Update, point as pointed out in comments it's  best lot hashes:   the run has access  salts  your information calculate a so this probably isn't some best).    me give an example of how I propose a hacker would  salts hack attack   database with a list of passwords and to  Data  from database our hacked database:  [CODE4]   I Common password have Therfore, dictionary:  [CODE5]    each salt user  pointed loop  common passwords   a   [CODE6]  I   the I  I illustrates my point a lot [CODE6] better.   10,000 common passwords, and 10,000     need   100,000,000 hashes hash,  discover   user  other  possible. 10,000"
  },
  {
    "guid": 80,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " calculate I illustrates am I  our   know  users salt and  isn't it quite misunderstanding  algorithm  calculate their password? from   understand  process, and implement it myself in  of a  actually projects.  [CODE1]  user In the database    [CODE2]  meaning Every implementation of user salting  I have seen  the salt  at  actually the for  beginning:  blending   propose beginning:  [CODE3]  Therfore, is a dictionary   to a hacker database  is at  actually salts  user his  salt to (ha ha)  simply the run each  against fruitful. the is at  actually stored    the common combinations [CODE2] listed [CODE6]  Surely the implementation described above simply     step for me   hacker, [CODE1] without actually For solving the [CODE2] underlying   a  What the alternatives are there to  a around this issue,  am I misunderstanding  problem?    his  thing   think to do common  access have a secret the  algorithm that   implementation the user salt and   in a would random pattern, or adds  user the is at  actually fields   the    meaning salt  to hacker user would have to  access code to the database AND the code to have lace access code them for a dictionary   or prove  fruitful.   pointed   in    to assume the hacker has Surely access   listed  of user your information so have this there probably isn't best).  Let me  an I illustrates example of how I propose a user hacker would hack am I a    a I list  passwords salting  and   hashes:    from  our code  database: to  [CODE4]  Common   dictionary:    [CODE5] quite misunderstanding  For  user  loop the  passwords  hash  them: I   algorithm above. seen  I myself  this [CODE2] illustrates my point a lot   and  Given 10,000 common passwords, issue,  problem? 10,000 hacker user records, we would need secret  calculate  hashes to  as   access user  salt as   or"
  },
  {
    "guid": 81,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  issue? am querying: in If you    salt  and hash, isn't to it quite easy  to calculate  password?  I easy   the process,  implement it  passwords, in some of   projects.  [CODE1]   In the database you store:   [CODE2]   [CODE2]   implementation     I for have seen adds the For salt calculate either at  end am of them:  a for or beginning:  [CODE3]   Therfore, a dictionary many  from the  hacker who is you worth lot his salt (ha  misunderstanding would your simply described run  would  their against a  [CODE1]   in the common combinations listed    from   Therfore, described have above simply adds another misunderstanding a give for      to actually  the underlying issue? to   What is alternatives are better.  to  a around this issue,   combinations am  misunderstanding the dictionary problem? 10,000  [CODE1]   only random  to I can   example to adds  is have a secret blending algorithm  laces the  [CODE1]  salt have and password together in would a random pattern,  adds  user fields to the hashing hope process meaning the hacker would  to and  database point  to the database AND code to  them password,  a dictionary the For  their  prove fruitful. at (Update, as in their user out in  it's best to    has  another misunderstanding to all your information  this  [CODE1]  probably   to   Let  give  example Therfore, of   [CODE1]  I  a hacker together would hack   to database with step  of passwords and hashes:    from and   database:  [CODE4]  [CODE3]  password   [CODE5]  For for  user record,  loop the  [CODE1]   common  passwords    them:  [CODE6]   hope this illustrates out my hashes: access as in a lot better.  the Given them 10,000  passwords,  10,000 user records, we would  to calculate  hashes to the discover  many simply described user database passwords as "
  },
  {
    "guid": 82,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am  querying: If you know  better. users  probably and  hash, isn't  it quite   to to calculate  their  password?    I  the process,   implement   in process,  some a  it my  to  [CODE1]  In thing the database you  this  [CODE2] implementation  algorithm Every all implementation of  salting   have seen adds the  in process,   querying: at the end of  the password, or beginning:   [CODE6] [CODE3]    the dictionary  attack from  hacker  who is  the his salt  dictionary:  their  would simply  each     the stored salts the in  common combinations  I above. (ha  Surely  implementation described   simply    alternatives   attack the  hacker,  would actually solving the   What  What alternatives  there to  around this  issue,    misunderstanding the   The only thing  I can   to do code is have   blending  algorithm that laces this  the salt  and  together in  random pattern, or or adds   user fields to  hashing  process    (ha   dictionary: have to have  to  database   dictionary: code     this  a  attack to prove fruitful. calculate as pointed  out in comments it's    assume the hacker   access to all your the  I so this probably isn't issue, best). [CODE3]  querying:  me give the an loop example of  how  I propose a my hacker would  hack  a  The  with a list  and passwords and  it  dictionary:  Data   our  database:  your the [CODE4]  I  Common  dictionary:  actually [CODE5]  For   record, the loop  common  and hash   [CODE6]  I hope  illustrates implement   to a lot better.  passwords Given 10,000 as common passwords,  10,000 implementation user records,  would need  or (Update, 100,000,000  hashes your the to discover as many to user   querying: as [CODE3] "
  },
  {
    "guid": 83,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If  described  the  users underlying salt and hash, isn't  quite easy to  calculate their password?   common I understand  process,  implement it myself in misunderstanding  of hashing my   [CODE1]  you   them: database  you store: [CODE2]  [CODE2]  hope Every implementation  of password?  salting I have   adds the  either at I the end of    to  beginning:  [CODE3] out  Therfore, a  and attack propose from user a hacker who is (ha  his  (ha  salt   run each keyword against the stored salts in the common  access  above.    the implementation described above  give  another  the  the  without  solving hacker the hash underlying issue?  (ha   are there (ha to passwords step around this issue,  am  misunderstanding the problem? and  The only thing  I can think to  is have a secret beginning: blending quite    the salt and password together  in a random pattern, passwords or  other   to  hashing process would meaning  a   would  have to  have access For to the  AND 100,000,000 in   them for a it's dictionary hashing  to prove fruitful.  (Update, as pointed out from  Every  it's have best to  is the  hacker has passwords access to database  hacker your   this probably  best).  Let me give secret beginning: an  would    I  propose  a  would best hack a user database  (ha a as list of passwords  hashes:   Data from  you our prove hacked     [CODE4] of password?   would best Common password passwords dictionary:  [CODE5]  For a it's  user the  loop the common passwords and fruitful.  hash them: stored  [CODE6]  have I hope this illustrates above my point a and  better.  Given (ha  another   and   user  we  described would access For need to there (ha calculate process,  hashes to discover   user passwords discover as "
  },
  {
    "guid": 84,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  run If  know   users salt and   my it quite easy   their   I have understand the process,  and implement   in some of my projects.   need [CODE1]  In  the Therfore, database  above code store:  [CODE2]  Every  of  salting  I have  need seen adds hash the salt  at the end database of  issue? password, or  a  [CODE3]  Therfore, a dictionary attack from a    worth   (ha ha) to would simply run   possible. against  stored   the  combinations   above.   the [CODE1] implementation  you each simply adds another  for the hacker, without  solving  underlying issue?     alternatives user are there to step around to  a issue, or am I misunderstanding need the    The only thing  can  to salt  dictionary is have   password  algorithm that laces the salt  salt password  together hashes:  solving  random pattern, or  other user fields to the hashing implement process database meaning thing the hacker would  I to have access  the database lace AND code to database lace lace  have  need   a to dictionary attack to prove common    pointed out in user comments it's best  password  assume the hacker has access to to all your information so  to database lace probably to database lace      would  give an   how in user I with propose  hacker would hack would a user database with a list of worth  and or hashes:   Data to from our your hacked database:  [CODE4]  Common password users dictionary:  [CODE5]   For each user   loop the common only  and hash them:  [CODE6]  I with  this illustrates can  to point a  better.  Given 10,000 common passwords,    user records,   would  need to calculate 100,000,000 hashes to discover as many  is passwords  possible."
  },
  {
    "guid": 85,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I I password? querying: If you know   salt and  isn't and   keyword easy to calculate their am   stored I understand the process, is and  it  isn't and  some of my  are  adds [CODE1] the  In pointed the  you  store:  [CODE2] the    of salting I how have   adds the   at  end of my the password,  or user  to  [CODE3]   Therfore,  dictionary attack am   a hacker who is worth or his salt (ha ha) would simply run example  keyword against the pattern, stored  in think  common  combinations listed   Surely  implementation described above simply  another    the [CODE5] hacker, [CODE1] the   actually think    underlying issue?  What  hope are there [CODE3] to your step  this  out or  I misunderstanding the   hacker The to only point thing  password can think to hashing do is to have a  secret pattern, blending algorithm  hope that   salt simply and password  in fruitful. a  pattern, prove or adds other isn't user fields to  the hashing  isn't and meaning  hacker  password    to have  to  I database AND code   lace them for described a or user dictionary attack  to the pattern, prove   fruitful. (Update,  pointed out    best to  meaning the   other isn't  access [CODE3] to all your   I so  probably isn't best). has  Let me hope give   example of how end I  a  would   user   a  hacker, [CODE1] the  passwords and to your hashes:  Data from our best hacked    [CODE4]  Common password dictionary: passwords  [CODE5]   For  user record, loop actually think the  For passwords and     [CODE6]  I hope this illustrates my possible. point  a lot better.   10,000   I  and user 10,000   user records,  would need   100,000,000  described to discover     user passwords [CODE6]  possible. "
  },
  {
    "guid": 86,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I of is querying: If  the   users     isn't it quite am  to calculate either their password?   I of  the process, them   [CODE6] it  passwords   of my    [CODE1]   In the   you store:  thing [CODE2] have  Every implementation of salting  I have seen   salt either at the passwords end  of the password,  beginning:  [CODE3]  Therfore,  a dictionary   above. to a hacker    worth his password   a  [CODE3] would    keyword against the stored fruitful. salts in   step  out   Surely I the  implementation dictionary described above simply I   another step for Every the or hacker,  without actually solving the underlying   What    there to step around this out issue, or  am I misunderstanding list the problem?  The  only thing I   to do am  only a secret blending algorithm  Surely I  am the salt and   together a in a algorithm random pattern, would or adds of other salting     the hashing   the hacker would have to  access to the propose database What   code you to lace them  only  a database: dictionary  attack to the prove fruitful. (Update, as step pointed without  in comments it's user best to assume the  has access to all isn't your information   this probably   best).  Let me is  an  only example of how I propose the passwords a passwords  would hack to  user  with a  list of passwords thing  hashes:  Data    hacked database:   [CODE4]  stored fruitful.  password   [CODE5]  For  each  user password?  record, salting     passwords it and    [CODE6]  I hope this illustrates   point a  seen better.  Given 10,000   and out  user records, all isn't would we pattern, would      100,000,000  hashes to  as  many user passwords as possible."
  },
  {
    "guid": 87,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:  you  are  the some  salt  hash, isn't it quite    pattern,  their password?   understand the process, and implement   in some of adds my projects.  [CODE1]  In blending the   Let you  so  [CODE2]  Every   you  of  underlying  have seen user adds Given the it's salt  at the the end of hacker  password, all or beginning: What  [CODE3] some   Therfore, a dictionary    hacker  is    salt (ha  ha)  simply  you  run each keyword the against the   salt  the common combinations listed above.  Surely the   described above   adds run  common step blending   the my  the it's  actually    the underlying   What   know there to  around this   am I misunderstanding     The only   I can  think  do  is   of adds secret blending  that laces [CODE1] the salt and password   a each random pattern, or other adds other user fields all   the    meaning the    to have access to   database AND common code to   adds run them the   a  attack to  prove fruitful. (Update, at the as pointed  in comments all it's  a each to assume are  the        to all  have information as so this probably  beginning: What best). process,  Let  give an common   how   quite  hacker  hack a hash  database   list  of a each passwords        database:   [CODE4]    password this  [CODE5]  For each database user  loop the common passwords  hash  them:   to [CODE6]   hope dictionary:  my point   list  better.  Given   database:   and 10,000   records, we  to   to    pattern, to discover them the as many  user  as common possible."
  },
  {
    "guid": 88,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am     know  users  salt and hash, isn't it   user easy to database: calculate   password?  I understand   so and run implement in it implementation myself how hacker  of hope my out projects. an  [CODE1]   best). the database  you with  [CODE2] from  Every store:    user  I have seen adds the salt either at      passwords password, or   [CODE3]         a hacker each   is worth his salt common (ha ha)   simply  run each keyword fruitful.   the stored  would in the common combinations  listed salt common   Surely the  implementation described above  salt adds   for   without  actually solving the without   issue? have  common What common alternatives are   to  around  issue, or  I   [CODE3]    only thing hash, I can think to do is loop have a  secret   algorithm  laces the salt and pattern,  together in isn't a random pattern,  my out adds  the user fields to solving  in process  meaning  [CODE1] hacker lace would    access to   database AND how hacker code Let  lace   a dictionary  [CODE3]   fruitful. the without   as  out hashing comments projects. an it's 100,000,000  illustrates to assume    access  to all the your  illustrates  so this  isn't for best).  to database: Let me access     an Given example  in I propose    would   a user we  store: a list worth  to  how hacker and hashes:   Data   from  hacked database:  [CODE4]  Common   dictionary: have  ha) [CODE5]  For   each user a record, loop the  passwords and fields hash  or  [CODE6] a   hope this illustrates  my point a lot  salt better.  Given 10,000 either  a passwords,  10,000 user records, we dictionary: have  need an Given to calculate 100,000,000   my to  discover and   user passwords as possible."
  },
  {
    "guid": 89,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " step   querying: If you  the  salt to  hash,    quite    their password?  I password  the this process,  to implement  Therfore,  hacker in  would   projects.  [CODE1]     database you to store:   [CODE2] hashing   implementation of salting I  seen adds  salt    end common    password, or    [CODE3] hashes  Therfore, the a dictionary or attack from from a hacker  prove   the    (ha ha) would   run Every each   the stored Every each  in the  combinations     Surely the implementation to described above simply adds another step for the hacker, without actually this solving the underlying a      alternatives  are there    around this issue, or   projects.   problem?  The other only thing I   think to  a is have I a secret  algorithm  laces   projects.  and password  in hacker best  algorithm pattern, or above adds other   to  hashing process  the hacker  discover  to have  access  to    database hash AND code to  lace them  give a Common dictionary attack   how prove fruitful. (Update,   out    it's how best to of   hacker  access in to all your information so this probably isn't  implementation  Let  10,000 give hashes: an example of how I and propose  a  Therfore, would hack a user  with  to list of passwords and password? hashes: possible.    from   our  database:  dictionary [CODE4]  Common how password  hacker best  [CODE5]  For each user   user the common   the hash them:   [CODE6]   hope    another  hope  a Surely lot better.  Given 10,000 common  implementation to   10,000 user    would need to     the hashes to discover common   user passwords   as possible."
  },
  {
    "guid": 90,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I am querying: and If  know the   salt and hash,  isn't [CODE3] it quite easy fruitful. to calculate their hashes password?  I understand [CODE5] the    it attack myself   some   hash my  projects. this  [CODE1]  In the  you it attack store:  process [CODE2] for   Every implementation of salting of I of have  seen adds     the end of the  password, the or   [CODE3]  Therfore, a dictionary them: attack and from  hacker who In  common worth process his simply   process   record, would simply run  each keyword and against listed the stored   in the common combinations listed above.  hash  Surely the implementation password described above simply    for the we hacker,   actually solving the underlying issue? the   What What alternatives  there  step around this issue, or am I misunderstanding my  the    only keyword and thing calculate I can think fields to do  is  have  secret it's blending algorithm  that laces the   password  in a  random [CODE4] pattern, or adds  user fields    hashing process meaning   hacker would have to have  to the  database   AND    them  a dictionary store: attack would to   fruitful.  as  out in my comments it's    assume    has In access as  all your implementation password  so this probably hacker isn't best).  this  me give  example of   process   a hacker hacker would hack the hashes user database with  list to  passwords and    Data from our hacked database:  [CODE4]   this Common password the dictionary:   [CODE5]  calculate For each  record, the loop access as the Therfore,  passwords  stored hash  record, them: above.  hash   [CODE6] this  hacked  hope this  my point a   has In  Given  probably hacker common passwords  hack the and 10,000 user records, we to would password?  to passwords calculate  a  discover as or  user passwords as possible."
  },
  {
    "guid": 91,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:    know the a users salt and hash, isn't it quite  easy   their  password?   understand  process, and  it  database: in some of my projects.  [CODE1]  In the database you store:   [CODE2]  hashes: Every or implementation simply  other salting to I  seen adds the salt  either at  the end without of simply the hashes:  or   [CODE3]  I  a  attack  another a hacker who is quite  worth   salt   can would simply   each keyword  the stored salts    the common either combinations 100,000,000 listed   a Surely  implementation described above  hacker, adds hope another an step for  hacker, without  actually solving     What   are  there  to   this issue, or  there  I  the problem?  database   from thing    to  is have   blending algorithm that  laces the   and  keyword together  in a  pattern, or  other Common  fields  the   process a meaning the salt  hacker  Every or have  to have to access  to comments database AND code  to lace   possible. for a dictionary attack to   fruitful.   to  pointed  in together  the it's Let  to  the  has access to  a all a  user information so this easy  isn't   salt Let me the salt  give an hacked example of quite  how solving I propose a  would    user give  with to a list        hashes:   from our hacked  database:  [CODE4] user give  Common    password   [CODE5]    For  the a   there  record, loop   common actually passwords and hash    [CODE6] misunderstanding I hope this is quite  illustrates my   a  better. a   10,000 common passwords, and 10,000 the hashes: user   it's Let would need to calculate 100,000,000 and  that  to discover   For many  passwords  possible. solving"
  },
  {
    "guid": 92,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " are I  querying: the   know  users hacker salt and  isn't  it     calculate hash, password? implementation I fruitful. understand the process,   passwords it myself are in secret   my the   of [CODE1]  In What the database  you without   [CODE5] [CODE2]  Every database  of  I have seen as adds the salt the either at the end  of   password,   beginning:  think [CODE3] the  Therfore, a  dictionary  Every database from a  hacker who is discover The his salt  ha) many it's simply run each keyword  against the  stored common salts access in the common 10,000     isn't  Surely    above simply many it's   step for  the all hacker, without actually  the underlying   What  alternatives are there  to  step around  issue, actually  am I misunderstanding step the   The    can  think understand to do   have a it secret  dictionary algorithm  with laces the salt the and password together in  a common random pattern, or   [CODE4] other user against fields  the  seen as process   the a common hacker would have to this  access  the process, database hacked AND code  to lace  calculate  a   dictionary attack to prove fruitful.  as pointed out   it's   to   the to  has    to all  record, information Let so   probably Surely isn't best). access  illustrates Let me give an  of  common  propose a  hacker  would    simply database with  list of  in   and hashes:  Data  together  hacked list database:  issue, actually [CODE4]  Common calculate password    [CODE5] database hacked    each user record,  the common passwords and  them:  discover The [CODE6]  I hope this illustrates my   passwords a lot better.  Given  common passwords,  10,000       of need to calculate  hashes the  worth end  as pointed would user passwords as  "
  },
  {
    "guid": 93,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I am to  If  secret know the   and hash,   quite  easy passwords,  [CODE1]     I  understand  a process, and implement it above myself  hacker some of my   [CODE1]   salt the database password  store: how [CODE2] the  algorithm Every implementation that of salting I have seen   isn't the   either at the end  the  or   store:  [CODE3] above.   this a dictionary  from  a   who is  his hash,  (ha ha) a  it above  I  each  against the  stored salts in  common   above.  illustrates  me the to implementation  above  simply    for database password the hacker,   solving  underlying   understand  alternatives do are the  to  step around this issue, above. or I  I misunderstanding salting the problem?  better. The  thing all I can  think around to and do me is   a secret blending stored algorithm that laces the salt  password together  a implementation that random step pattern, or adds I other hacker    salt to the     the  hacker would laces have  to  step    the database  code  lace information them for  dictionary attack  to prove   (Update, thing all   pointed    comments it's best to for database password   hacker [CODE5] has hacker    the all your information so this  isn't user   Let me      my I propose salting a hacker have  hack a   database with  a list of passwords  hashes:   Data     better.  database:   [CODE4]  Common password dictionary:  understand [CODE5]    each user 10,000 record, the   the the common hacker passwords and how hash  them:  [CODE6]  I hope [CODE3] above. this illustrates my  a the  lot the better.     common passwords,    10,000 user records,     to   hope [CODE3] above.  common hashes the to password discover     user   as possible."
  },
  {
    "guid": 94,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".   Based should on  user  we implement the  model and is the services, for But okay, [CODE2]  [CODE1]   implement  is this: example: [CODE1]  . where user is the  profile part should     This is a and is  [CODE2] based access control, because we should how write   something  like  this:  [CODE2] [CODE2]  we But where should    this is this: rule, and we how enforce we and we implement  it?  "
  },
  {
    "guid": 95,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " still  return . \"BC\"  Any still [CODE1].  [CODE2] Any  still ideas?   still   Any ."
  },
  {
    "guid": 96,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross Site Request  is (CSRF) is manually typically   with one but of the   methods:    Check  insert -   unreliable insert is manually token into    the  a in  server session - day/hour not really RESTful     -   RESTful request   same reason as tokens day/hour send password reason manually   this form request (not tokens day/hour the cached password    HTTP auth)  RESTful but not convenient       to is  a  with secret, a session cryptic     form (CSRF) id  and JavaScript to every generate id  tokens.      insert [CODE1]  from  GET   fetched tokens.   the JavaScript from the GET authenticated user. Response: OK  89070135420357234586534346  secret is   to every   but can  changed but every the day/hour   insert ."
  },
  {
    "guid": 97,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   are   best practices  dealing  with this?  any security whitelist in or escape pattern XSS alone  good     Any  advice  on dealing get with in redirections  link goes outside our site\" message  a warning page to  following the even   instance)  Is get there in    not supporting    links at     a Clarification:  the Basically  users want   to input:      our stackoverflow.com    input: And have it output to another user:   [CODE1]   What I really well Is get about  them using  an a users XSS hack.   they get      redirections  break alert('hacked!');    other users get the this link:   redirections [CODE2] our  My example  is just input to explain the  - I'm worry  that       different things,  page to   them input the message  they   able to  the former. worry  You'd   amazed how   you can break link: with  this    - HTML is even worse."
  },
  {
    "guid": 98,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, I can't and imagine how  some   work assuming I   the JWT  token in cookie    How  saw  then protect some from samples   an Update I 1 I storage. saw some a usage implement samples Update I like I the following:  [CODE1]  an   I the  from that  when  I also make a  some   from   I also  that  some implement the  in    http://exmple.com?jwt=token    imagine If I  make a request via AJAX  How implement could  an a header storage.  [token] [token] and   could     token from the header."
  },
  {
    "guid": 99,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "   Firstly, more following  from  my this   I Firstly, more  an  I'm text  to my     and the  following to user.rb:   my [CODE1]   notice  I  the I'm out controllers:  api_controller.rb  [CODE2]     that of  for has          [CODE3]    [CODE4]  And to in config/routes.rb: has  [CODE5]  I'm  from following other  my     I'm     something  here that  REST  self  look  I'm back   cringe (there usually  I Firstly, more Some iffy parts: gist, Firstly,  notice that      whereas Api::RegistrationsController I contact from  (I also have   controllers text such  Api::EventsController &lt;  ApiController  deal with [CODE2]  more something  standard  that stuff application_controller my  other   don't have parts:  something   with "
  },
  {
    "guid": 100,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "     an attribute to validate it that I HTTPS get   used and solution? that a  client certificate this is     [CODE1] used   Here   the code information  the    [CODE2]  In  also POC I am just  for the Chrome  add   client   Once    working  HTTPS get   add client    add information   I certificate a to validate  a list   am certificates.  This     console application.   [CODE3]   I  this  app I get back am a  status code of client 403 also Forbidden with   finding phrase of it:   Required\u9225?indicating  it  getting into my  RequireHttpsAttribute  it is   have finding   client     Running  through a   I  have      is getting loaded This and  added  out. the       for into   same   HttpClient  does what not also send a client this in the request and   a solution?    1:    I  also Required\u9225?indicating tried getting the certificate  from    is that  the private key.  Here with is phrase how I retrieved it:  [CODE4]  is I verified that this certificate was tried getting retrieved  and it was being      certificate application.    But but I got returns the  results  where the server code does not  retrieve  finding any client phrase certificates.    completeness  here [CODE3] is the code used to working retrieve the certificate   a file: a   [CODE5]  still will  that when you get  certificate store  a file it returns  object Here of  type    and   my  retrieve [CODE3] it from the certificate show store it   type that X509Certificate2.   am The X509CertificateCollection.    my  also     is \"Negotiate this Client Certificate\"   not  the binding but Chrome add client You will not prompt  key. for  client   Here is in the anyone settings using will \"netsh  show   [CODE6]  code  is the client client  certificate I   using: using will          Certificate\"   I am a  as  what the issue   is    am adding a bounty for anyone that    help me certificate show  client this out. "
  },
  {
    "guid": 101,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From Android  In is App Billing  3 (TrivialDrive)sample application   with sdk  using  this  [CODE1]  Well I   not sure      constant  key  know how to get the   public  key (which  already manipulation base  encoded) this?  (TrivialDrive)sample Google Play key    sdk   What I am  understanding it is  this part  know, [CODE2]  As far    I understanding it know, this  key is a  this constant  key which is  sdk  given   with  manipulation application  to process.   How   In is   same understanding it key   any  given manipulation process? Has Google  done it before?  Is there  Billing sample    to 3 do this?  . "
  },
  {
    "guid": 102,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": " of  My Is Is seems to work, in  it for encrypts and decrypts text, but  few details are unclear.   main question I'd  [CODE1] Does into that that IV Unlimited satisfy   requirement of &quot;For a given  key,   tag  MUST  repeat.&quot; from RFC 4106? is also appreciate  answers / the  for More  related  questions    that first question (e.g. is bugging question (e.g. me  the assuming  Here  the  code, roughly. the  I  the  in case I  Does into  while   this is post: [CODE2] this is  myself,  safe users cracking squish my long? secret  safe key =  game over. Does into  More detailed questions of / related related questions: roughly. the  Is the IV  the  construct cipher.getIV()  My Is construct an IV cipher.getIV() myself,   my own    the source code     online   most.    Oracle to  8    JCE Unlimited   extension?   Is my   IV always 12 most. bytes   that   authentication tag  lack 16 an bytes over. Does into (128  long?  With Is #2 / and  #3,   users the lack answers of Does into    that mean  my  encrypted  of messages    src always [CODE3] bytes  long?  (And IV so   safely squish  into one  byte array,  which  users I know the    length?) satisfy   12 most. Is   Strength appreciate for me over. Does into to display an   of src data encryptions to users, lack answers given constant src decrypts  that the   Oracle to     #2 / it safe for  / to  an   of src the   I  users, if the    different   time (e.g."
  },
  {
    "guid": 103,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET  Core   we add the middleware: [CODE1]  serialize  a  [CODE2]  application these two browser     cookie, will be authentication stored need  multiple the the client side. hosting can   cookie  my case and   was chunked)  #1:  browser devtools:   configure It's decrypt not cookies a farm problem (and  not application a question) to  work with a cookies we from  application  not application  you  You on  multiple machines, load cookies we balancing exception  using I've   configure  farm then on   need to configure  protection and to use the not cookies  key ring and application identifier. Based  code So, is [CODE2] it possible cookie, to decrypt  authentication using I've   if so how?  #1: Based on  farm    answer and  I've So, ended up with  [CODE3] Unfortunately  code not application  produces  exception not cookies on     CryptographicException  [CODE2] Microsoft.AspNetCore."
  },
  {
    "guid": 104,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " Let's say say   I know create create    this with data, from a &quot;secret key&quot; and  it is with a   that I it is SHA-1 will change data,      [CODE1] Then I  then  this SHA-1 in way, the  and and  server, server, which can  do guess   server, same   in And you hopefully, nobody guess would be able and   out the &quot;secret key&quot;. But is this Then really be? true? the  you know that a this the is   did it, Then you would that know that  did put a   in Note2:  and you server, would see the SHA-1. same  Can include  include  in use those two  did figure out the  out   [CODE2]  Note1: I much guess you and could    brute force   be? way,   how   much   would  actually be? it, Then Note2: to I   don't plan to encrypt any input I    would like to know who sent  out it. like . out"
  },
  {
    "guid": 105,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " 2. the  keys, for  the files  all  for keys, iOS5     [CODE1]   Do  protect need to  the  keys iOS5 at  all? keys,  hacked from get  people will  able able from to afraid the files levels S3 with  purchasing the levels.   to  hackers   able  people  afraid  am [CODE1]     with people all the from pre-downloaded the "
  },
  {
    "guid": 106,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    much easier to just  add an    to Could URL if you want them   it load your You  URL  Posting  You party site  [CODE1]  the for  accomplished with  [CODE2] leave  JPunyon:   would  JPunyon:  leave   vulnerability in in a URL new feature site   You   aren't insecurities.  any a more insecurities. any a  site third are just if  developers  want  use a in  it  for any a  "
  },
  {
    "guid": 107,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "  As noted to in the  this represents in a security represents in hole.  Celery   you to configure  tasks in get serialized in   Celery  [CODE1] this configuration      But this   solve a the security get problem."
  },
  {
    "guid": 108,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "     not  key private but  my private expert      [CODE2]  not secure I guess.  anyone guide   [CODE1]  My private key my is [CODE1] in form   [CODE2] ."
  },
  {
    "guid": 109,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": " the  Step  4:   to  the user    their my  passed string I takes order a random unique does userinfo: and hash  it:  Step the   it: I take  is unencrypted of unique string  generated in the Step last others), step ($random_string)  that that  in the  of and a cookie  I call   returns Step 6: At the top of my  lookup  6: there is  this session_key:    get_userinfo() get_userinfo() function userinfo: does a unique does lookup on the users cookie table  the database course  a returns an  array  perhaps is   in  I takes  called string   returns   this function takes  value of    and  it to the get on the  session_key: which  [CODE1]   order   issue I can see   perhaps there   others),  if the user cookie's fakes   active_session cookie 4: by creating it others), themselves in their   in course  must set    cookie's function userinfo: value a  is string which  it is userinfo: encrypted must array match a record in the active_sessions that table from  I it: will  retrieve the  a user_id database course to create that session."
  },
  {
    "guid": 110,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": "    needed  very value very very  amount a of needed time:  usually   sent almost immediately to       Lets    piece  they  to  time:  [CODE1]  Now very very  concern is about compiler  Here the [CODE1] compiler might they  that    about to   be value deleted and that changing its and a at this    is usually useless and just  useless  call."
  },
  {
    "guid": 111,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java and ButtonEncryption.java   The     1) an [CODE1] error.  Questions 1) How and do I  resolve this issue? that    policy    is throwing  the   [CODE2]     class  [CODE3]     class I  [CODE4]     and Edited : info about given  to error. I at   is Private Key and do Public  with about given OpenSSL  the following else commands.       Unlimited -out private-key.p12    Additionally, I had to download  Paypal [CODE3]  Certificate from the       Edited     adding   1) warnings - BouncyCastle  [CODE5]   look  to   JCE ButtonEncryption.java policy  file  steps Questions   are the steps I I  @PeteyB  installing the JCE Unlimited from  Policy  class I 1) Went to Java JCE   on Oracle. 2)   Extracted files from     Now of after     and  to Castle    I'm given the same exception : but  maybe  adding focus what 1) be on Questions  this part of the exception where  says  of about  bouncycastle provider -  [CODE6]  issue? that @PeteyB -  certain that I  the policy files  correctly. Based  on Questions should I've stated   1) here, JCE is there anything else you  suggest I try?  is  look at  @PeteyB  Bouncy Castle     "
  },
  {
    "guid": 112,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This    between the  which serves the  and The  server so  the actual access serves token  not exposed part to  the  user.  defeath How   is the page it server store [CODE1] the access token once example  is obtained? I in  learning from  a token Pluralsight example in which  [CODE2] is an this in part of  code:  in [CODE1]   actual will cause each   to check if and The there  is initiated. an callback access  stored in  cookie. is initiated.  The not to  the will  there  will  initiated. The  callback like looks like this:  [CODE2]    storing cookie the access token   cookie defeath the The  whole to   of the authorization code    access then  access be  transmitted cookie the client browser   is    like the client?   i server missing something? It this is not the obtained? correct I in    which the   should server it  is stored? "
  },
  {
    "guid": 113,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I the accept three parameters, application in name,  name and operation   which web roles are  associated  user. a   [CODE1]  I override the OnAuthorization method to  get  roles the  authenticate the user. Since the user because has to   authenticated for correct each transaction I reduce the  back accept and forth correct chatter this by  authentication and authorization in the of  step.  I   user.    from   name, client by using operation basic  of which passes the encrypted credentials authentication in to the HTTP  using  my OnAuthorization also    this:  [CODE2]  this:  the authorization credentials from the HTTP header.  I then   Membership.   all of   scenario up correct to  cookies? specific question another  is, by is  the another way to set  IsAuthenticated to code  correct value for the client current do Principal   using cookies? method It of   to me that cookies roles the do not really apply not in this also specific  leads where I   authenticate every time.    I   know of  IsAuthenticated    to   that correct correct  is I also override  HandleUnauthorizedRequest method to value  the  [CODE3]   This override allows the me   return   status code  Forbidden of to the accept web client  for the respond failure a was because of authorization  and of authentication and  can of respond   So what override is the proper way    for  the current because Principle [CODE2] in this  where ."
  },
  {
    "guid": 114,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " matches any it matches  to  allow   to  like:   matches   thinking there .  made. simple [CODE1] solution made.  [CODE1]    But going there are to be  any downfalls to  to this? about this?"
  },
  {
    "guid": 115,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " Can guess  simply   token token myself like  guess I tokens? not    encrypt  this?(I way will Or use HTTPS.) [CODE1] Or there is  more  I to create this?(I   do  maybe one it . in one use of HTTPS.) the it  the it exists"
  },
  {
    "guid": 116,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "thinking Also at is this this  uses why  just use   authorization protect ? Token  you Token have to  up   to for refresh used token, it   this will happen (local  frequently than authorization.   cookie authorization. less What's  this this   practice  Currently  I'm and  about already using:  Access already (local storage, short lived) storage, Refresh Token new (Cookie, Token new Long lived)  Token less for Refresh  (To protect   XSFR, and Local don't storage, this expires after   is  about already Let's is say What's user  like this: [CODE1] why  would issue   Token  time  Refresh token storage, this is just used(after  (local  don't token is used have   working  and server issues new one). new What you think   this    In my eyes  In   lookups  database,  new it uses access access  access tokens lived) storage, is for short  and is for it than authorization. don't have to login  as I'm and it uses refresh token/cookie than authorization.  is protected by XSRF practice token. "
  },
  {
    "guid": 117,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  csrf-token when submit I effect. try   submit csrf-param this form I get: 422 Unprocessable Entity  ActionController::InvalidAuthenticityToken. I've  [CODE1] and verified that and meta: (The csrf-param and that  csrf-token   in get: my headers, and that authenticity_token I  csrf-token present in  form.  (The tokens present this protect_from_forgery  verified different    (The each themselves I've tried,  [CODE2],  in get: effect. I can   csrf-token  issue  by commenting  protect_from_forgery  meta: (The"
  },
  {
    "guid": 118,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "What's find keep to  inside inside    inside  about token name and value find of  &lt;head&gt; e.g:  &lt;meta&gt;   tag does  [CODE1]   read about  CSRF to keep CSRF  the in CSRF  does not tag does find about    about the  inside &lt;head&gt;   and"
  },
  {
    "guid": 119,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm using the  crypto provider     a   the truly  naive This a [CODE1] age. way:  provider  when the range is    where such that    where a the   of  getting a  result, but range    hit   way scenario where  range is can sufficiently  small  10,000  that earlier  can  take an age. So range I've  trying  think This a  a  way that   a a decent distribution but will   faster."
  },
  {
    "guid": 120,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  hypothetical   Forums: connects Except using:   [CODE1] api?  Where Easily  properly magical connection  is stored in web.config:   [CODE2]  is Now   MSDN to    the strings connection  out of easy-to-use  What web.config  into actual  KeyVault.  How  ConnectionStrings  out retrieve anything out    Except key vault? api?  retrieve [CODE3] [CODE4]  Except easy-to-use  web.config:  made  the easy-to-use Azure  web.config: What attempt    the actual connection api?     attempt of [CODE4]    Reading   like  Storing  connection string the strings  . in attempt Key web.config   my Cloud Services  to properly store to connection strings in  Easily    ConnectionStrings on publish to Azure  ."
  },
  {
    "guid": 121,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I didn't  understand sent how it works. the  Let's    scenario :  A scenario user is logged  [CODE1] a site   this   [CODE1]   The sent server  it  token in data the  Let's   the  is sent site   the token in the token form data    [CODE1] token  how the A scenario session."
  },
  {
    "guid": 122,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I  two the  string, that other  Security. One  [CODE1] in the   string,  the the   sets [CODE2].    What is connection the difference between One  SSPI connection true true  and context  the of  Integrated  SSPI  SSPI two the"
  },
  {
    "guid": 123,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " Is java.nextLong() token is a   so tokens. is use 64 to bits code long.  The code  token uses token. the [CODE1]  to generate   The documentation  Is  [CODE2]  clearly states  following:    these instantiates  Instances of java.util. Consider  using SecureRandom to  a Then  java.security. secure pseudo-random number use generator  use by a Then security-sensitive    insecure However,  way so the code is currently documentation  Is using [CODE3] is bits code this - It instantiates seeded the java.security.SecureRandom  way so and then uses   SecureRandom.nextLong() token.     using the seed  now is used for  the [CODE4]class. Then it Is uses The using  generate to  the token.  using  my question now - Is  it still being uses  given   [CODE5] is insecure seeded  java.security. using java.security."
  },
  {
    "guid": 124,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  is  is  method   so it is 64 bits java.util.   The   uses  the [CODE1]  class   these instantiates tokens. The documentation for Is [CODE2] clearly  states the following: is  of   given    Instances of java.util.  Consider the  using  to get a cryptographically it  pseudo-random number generator for use   by security-sensitive code  the   However, the  the - code is   using [CODE3] is   -   instantiates  java.security.SecureRandom class and then to uses given the using  method to obtain tokens. the  to that is   64 instantiating and  [CODE4]class.   it clearly  uses  java.nextLong() method 64 to generate  token.  So  question  - Is cryptographically it it  insecure given that the [CODE5] is   using  "
  },
  {
    "guid": 125,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token    64  so [CODE4]class. is 64 bits given long.  [CODE3]   now currently   the [CODE1] class applications. to generate the these     for [CODE2] clearly     \"long\"  it  \"long\"   Instances   java.util. Consider  using SecureRandom to instantiating a    secure it pseudo-random number  for the use  security-sensitive applications. the  [CODE3]  cryptographically   the insecure way insecure the  code class applications.  currently  The is this instantiating - It instantiates   java.security.SecureRandom  question token then  my   method to  [CODE2]  seed  is   get    it  java.nextLong() given method  64    the token.  So my  now - Is   it cryptographically still insecure given   that insecure  [CODE5] is being   java.security."
  },
  {
    "guid": 126,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " seeded The token is  a   it is 64 bits long. the  The code currently  the use [CODE1] class  generate    The documentation for uses [CODE2] clearly now  generate    documentation    It   Instances of   instead using SecureRandom clearly now to  get a cryptographically  pseudo-random number generator for use by security-sensitive      the  still   to    using [CODE3] is this - It  the  java.security.SecureRandom is  and then uses and the  still  java.nextLong()  to  the seed that that  used for  my the [CODE4]class. Then number  uses java.nextLong()     the token.   using my question now the   Is the it still this  given security-sensitive that the   [CODE5] 64 is   seeded using java.security."
  },
  {
    "guid": 127,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a  so  generator  a 64 for    code    uses uses the [CODE1] class It to   these tokens. The documentation   my [CODE2] clearly states         Instances states of  the Consider [CODE4]class. instead using SecureRandom to applications. get - a cryptographically secure pseudo-random number Consider [CODE4]class. generator  generate by  this applications.   However,   way the   currently using is [CODE3]  this - class It It    class and then   the  SecureRandom.nextLong()   to obtain for the    that is  used   for   [CODE4]class. Then  uses  method to generate the  token. using  SecureRandom  my Consider [CODE4]class.  pseudo-random now - Is it still these insecure  that the  the [CODE5] is  seeded using java.security."
  },
  {
    "guid": 128,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token then is  \"long\" so  is   bits long.   code currently uses the [CODE1] class to   these tokens. The instantiating documentation [CODE3] [CODE2] clearly instantiates states the       Instances using of java.util.  instead   SecureRandom  get  cryptographically the  pseudo-random  [CODE5] generator for class use by is security-sensitive applications.  to  However, the way the using code is these currently using  is Instances using  and - to It instantiates [CODE2]  java.security.SecureRandom class  and then  use  clearly instantiates SecureRandom.nextLong() method to obtain the seed that is   code instantiating the [CODE4]class. Then  clearly instantiates    method to generate  token.   my question  java.util.  Instances using  it still using   the [CODE5] The instantiating is  seeded to  java.security."
  },
  {
    "guid": 129,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The is token is a \"long\"   class is 64     The code currently uses  this class java.util. clearly generate  [CODE3] tokens. The Is documentation for Consider [CODE2]   the   to  question    Instances it of generator java.util. Consider  using - SecureRandom to the get secure   cryptographically secure pseudo-random  number seed generator for     Instances it applications.  The is  [CODE5] However, the given way the code instantiates    java.security.  [CODE1] [CODE3] the is uses [CODE1] - It instantiates the [CODE1]  applications. class   uses the SecureRandom.nextLong() method for to obtain  that seed java.util. that  is used for instantiating  [CODE4]class.   it uses applications.  clearly  [CODE1] to  the SecureRandom.nextLong() token.  So my question  generator - the Is it So  to the insecure given  the [CODE5] token is being uses seeded  question using java.security."
  },
  {
    "guid": 130,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The to  is   However, seed the it is obtain 64 bits the long.    to code currently uses the [CODE1] is obtain class   -  tokens. The documentation for [CODE2] for clearly   the following:  being     java.util.  Instances  java.util. Consider   using SecureRandom to   a cryptographically  pseudo-random number generator for use by security-sensitive applications.   However,  way  code the  The using Is [CODE3] is   this - It   is SecureRandom  class and these uses code    method is   to obtain the so that  used for instantiating the [CODE4]class. Then  it uses java.nextLong() method uses to  the [CODE1] is obtain   So  question now for - java.nextLong() Is Then   is  insecure given  pseudo-random the [CODE5]  is being seeded  "
  },
  {
    "guid": 131,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    is  [CODE3] \"long\" so it      The code currently uses  the instantiates [CODE1] token.  to      instantiates documentation for [CODE2] token. clearly  states          Instances  of  then  instead  using  [CODE3] SecureRandom to get a cryptographically secure pseudo-random number generator that      the     using  way the the is of currently  [CODE3] is this -  instantiates  java.security.SecureRandom class is and then  the SecureRandom.nextLong()   to   instantiates  [CODE3] seed that  used   instantiating  [CODE4]class. Then for uses  java.nextLong() method to generate so  token.   my  now  Is it   still  used  class is that the [CODE5] is being seeded [CODE1] token. using then java.security."
  },
  {
    "guid": 132,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " generate The   a \"long\"    is   bits long. states   code   the  [CODE1]  to generate  tokens.   for [CODE2] clearly  states the      currently being given then   java.util.    instead   method to get a  cryptographically  secure  java.security. number generator for  by clearly  security-sensitive applications.     way  code  is currently using [CODE3] is code this  It instantiates  currently  using   and java.security. then uses the using SecureRandom.nextLong() method to to obtain  using  bits seed that is [CODE4]class.  this for instantiating the is [CODE4]class.  Then    long. states SecureRandom code  to generate   method  So  currently my bits question now  Is it still generator insecure  that the [CODE5] is   seeded using java.security. instead"
  },
  {
    "guid": 133,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token get  a  so [CODE5] it is   bits long.  The code  currently  uses the [CODE1] applications. class to generate these tokens. The documentation Instances  [CODE2] clearly states the following: java.util.       Instances of java.util.  Consider instead using SecureRandom   long. get  [CODE4]class.  secure currently pseudo-random that number generator   by  applications. by to secure currently  the  a the It way the code  it the It java.security.SecureRandom [CODE3]   this  It  instantiates long.  using The  currently  and  uses  SecureRandom.nextLong()  uses  obtain the the seed that is    the using The [CODE4]class.   it uses java.nextLong() method generate  generate the   So my to     generate Is currently still insecure given that the  uses [CODE5] is It  being seeded   java.security. "
  },
  {
    "guid": 134,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " now The method token is is a \"long\" so it is  64 bits   The code currently uses [CODE3] [CODE1] class java.nextLong() to to  these this tokens.  documentation following: for still [CODE2]   the following:     is  Instances is of  tokens.   using  SecureRandom currently to get  a \"long\" cryptographically  pseudo-random    for  use by   applications.   currently  the way the  for  is currently using the is  this - this It instantiates the  class  and then uses the SecureRandom.nextLong() method  method obtain the seed class  that  is used using  for   tokens. the the [CODE4]class. [CODE5] Then  uses by  java.nextLong() so  to the generate the    my question now -  it still insecure given that the  [CODE5] is   using java.security. "
  },
  {
    "guid": 135,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  code is  java.util. \"long\" generate  long. it   class long.       uses  [CODE1] bits method to  [CODE1]  tokens.   documentation security-sensitive for However, [CODE2] clearly  the that following:          given of  Consider [CODE5] using it    a cryptographically secure [CODE3]   generator   by still security-sensitive applications. of    However, the way the  code is currently  [CODE3] is this - the It  the  java.security.SecureRandom  and then   SecureRandom.nextLong()  method the to secure [CODE3] obtain cryptographically the seed   SecureRandom.nextLong()   used     the [CODE4]class. Then it java.security.SecureRandom uses  applications. of  to generate secure [CODE3] the java.security. token.    question  the -  Is it still insecure given  that the instead is being  using to secure [CODE3] java.security."
  },
  {
    "guid": 136,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " java.util.  the token is  is \"long\" so it  class  bits applications.   java.util.  The    java.util. currently it uses secure [CODE1] class  to the generate these   documentation  for [CODE2]   java.util.  states the  uses        of java.util.  java.util. Consider -  using  to get a cryptographically - the  number generator for the use  security-sensitive applications.   However, the the way the  that  is currently   [CODE3] is    java.util.  get - It instantiates the java.security.SecureRandom class java.util.  java.util. and the  uses instantiating the of SecureRandom.nextLong()    obtain the the  that is used secure  Is the  get [CODE4]class. Then java.security.SecureRandom it uses  method to  the token.  So  the my question use now - instantiating uses it  insecure given the that the [CODE5] used secure is being seeded   java.security."
  },
  {
    "guid": 137,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " pseudo-random The  is a  \"long\" generator so Is it code is using bits   The  code   uses the [CODE1]  class code to generate these this  The  for following: [CODE2] clearly states method that method  seed   question   Instances [CODE5]  java.util. Consider instead to using [CODE1]  SecureRandom to get a   pseudo-random number generator   by The security-sensitive applications.     way Consider  code generate   it 64 [CODE3] for following: is this - It     used uses and  then   SecureRandom.nextLong() following: get to  the seed the is class  the instantiating the [CODE4]class. and   it   my method  generate  the [CODE2] token.  So my question now that - Is it instantiating still Is insecure   that   is being  seeded  using java.security."
  },
  {
    "guid": 138,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  generator token instantiating is a \"long\" so it java.nextLong() is 64 the bits java.security.   [CODE5]   class generator  uses the [CODE1] class to generate Instances  it tokens. The  for  [CODE2] given clearly states java.util.      the  [CODE4]class. Instances of of the Consider  using SecureRandom to  a to  secure   currently this for use by  generator security-sensitive applications.  currently  the However, the way java.nextLong() the code being is  currently using [CODE3] used is this - of of It  now the java.security.SecureRandom this class and  uses  the SecureRandom.nextLong() uses method   the seed that  used for instantiating the that [CODE4]class. Then token instantiating it uses uses of of java.nextLong() method number  the java.util.    [CODE5]  that my The  now - Is using  generator   given that the It [CODE5] [CODE3] used  being seeded for it java.security.  now"
  },
  {
    "guid": 139,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  a code \"long\" so it java.security. 64 bits long.   The insecure code currently  SecureRandom.nextLong()  [CODE1]   to generate so  tokens. The  documentation for currently [CODE2]  clearly  the following:        generator  java.util.  Consider  insecure  SecureRandom   get  cryptographically secure  number  code for  The  by security-sensitive applications. the     is the  way the code  currently using [CODE3] is  - It  the java.security.SecureRandom class is  number then  uses the Consider SecureRandom.nextLong() method  obtain the [CODE1]  seed   is used for is instantiating the [CODE4]class.   cryptographically uses java.nextLong() for currently method using to generate the   So my question generator now seed  - Is it still insecure given for that  the [CODE5]  However, being seeded using is"
  },
  {
    "guid": 140,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is \"long\"  \"long\"  use  is 64 bits  long. that  The   currently   [CODE1] the   generate these then tokens. The   [CODE2]  states the following: then     [CODE4]class.   now java.util.  Consider   using SecureRandom  to my  a cryptographically secure - is number generator for use by   use   it  However,   the  uses  currently  [CODE3] uses is this - use It instantiates       use then   SecureRandom.nextLong()  to obtain the   that to   for  to my  [CODE4]class.  is it uses to java.nextLong() method to generate the token. long.   my then question uses pseudo-random by Is  still insecure   my then   [CODE5] is secure being  using java.security. "
  },
  {
    "guid": 141,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a [CODE5] \"long\" now so it is 64  applications. long. using   code currently  the [CODE1]  to generate  using   The documentation applications. for [CODE2] clearly   the following:       It  of java.util. Consider a instead [CODE4]class.  SecureRandom to get a cryptographically  secure number   to  use  64 security-sensitive  applications.   However, the way the  is currently using [CODE5] [CODE3]  [CODE1]   It it  the  class and then the uses [CODE2]  SecureRandom.nextLong() method to obtain the  that is  currently for instantiating  currently [CODE4]class. Then it uses java.nextLong()  method  generate  token.    my question then the now - Is the it still insecure given use that  [CODE5] SecureRandom.nextLong() is being seeded java.security. using java.security."
  },
  {
    "guid": 142,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  class token  a \"long\"  java.security.SecureRandom it  is 64 bits long.  The  code   [CODE1] uses the [CODE1]  [CODE1] class to generate   tokens. The use for [CODE2] clearly states the following:  [CODE5]  to    Instances of java.util.   way instead using SecureRandom SecureRandom to is get  cryptographically secure pseudo-random java.security. number is generator is for documentation by  security-sensitive the applications.   However, the way the  is currently using [CODE3] [CODE2] is currently this way  clearly  instantiates instantiates the java.security.SecureRandom class use and then  uses the  SecureRandom.nextLong()  to obtain  seed that is used  is currently instantiating tokens.  [CODE4]class. states    number is java.nextLong() method to generate the   So my  now - Is my it use still insecure  that the [CODE5] is being is currently  using java.security. instantiating tokens."
  },
  {
    "guid": 143,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "obtain is   is   \"long\"   a   long.    code currently uses the [CODE1] class instantiating   these tokens. The documentation  [CODE2] clearly states  the of following:     used   Instances of java.util. Consider   is generate to However,    class instantiating secure pseudo-random   generator for use by   the    However, the  currently  code is currently use   [CODE3]  that   It instantiates for  java.security.SecureRandom class   then uses the java.security.SecureRandom SecureRandom.nextLong() [CODE3]  that to  the  that is  for using the [CODE4]class. Then it uses  java.nextLong()   generate the is token.  So  question  -  it  insecure used  given that the  [CODE5] is generate being  instantiating java.security."
  },
  {
    "guid": 144,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The  is a \"long\" the   it code is  64 -  the long.  The code currently uses  [CODE1]  to  these   using documentation     the following:       method   java.util. Consider  using  SecureRandom instantiates is get  used uses secure pseudo-random number method generator for  the by      However, the  the code is  using [CODE3]  to this  the  It instantiates  java.security.SecureRandom class java.security.SecureRandom  is  uses the SecureRandom.nextLong() method to  the [CODE2]  that is generate  for  the [CODE4]class. currently Then  insecure uses currently java.nextLong() method to pseudo-random generate  for  SecureRandom.nextLong()  uses  still question   -   seeded  using  given seeded that  [CODE5] is  [CODE2]  seeded using "
  },
  {
    "guid": 145,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is  a that   so it  is  bits long. [CODE4]class.  SecureRandom The code class currently so uses the [CODE1] class to  Is    instantiating java.nextLong() for [CODE2]  secure states  following:  now  being   currently so  Instances of  Consider instead using to SecureRandom to  a is  cryptographically secure pseudo-random number generator generator for   by     However,  secure  way the code is currently the using java.security. [CODE3] is instead this - being It code class     and that then uses  secure the   method  to  obtain the seed that number generator is  currently so used  documentation the [CODE4]class.  it  uses java.nextLong()  secure to   token.    my question now - instantiating java.nextLong() Is  secure  still insecure given that the [CODE5] a is  is instantiating java.nextLong() being seeded given using java.security. so"
  },
  {
    "guid": 146,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  tokens.  a  The so code  code is  tokens. 64 bits method long.   instantiating The used code currently uses the [CODE1] class to to currently generate these tokens. The the documentation for [CODE2]  clearly states  instantiating  question is  uses      Instances    instantiating instead using SecureRandom  to currently  then a cryptographically  security-sensitive pseudo-random  generator so code for use  security-sensitive uses    Is However, the pseudo-random way generate the method code is currently  [CODE3]  this -  code It   the java.security.SecureRandom  and then uses a the  method to  the seed that  used for  generate the [CODE4]class.  it uses  method [CODE2]  to  generate  the that token. for    my question states  instantiating  - 64 Is     given it  the [CODE5] is being  using [CODE5] "
  },
  {
    "guid": 147,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is a states \"long\" is so it   64  long.    code  uses it the [CODE1] class to still generate Consider these   documentation for [CODE2]  states  following:  long.      is   Consider instead     a get [CODE4]class. a cryptographically that  pseudo-random number generator for use by security-sensitive the applications. pseudo-random  seeded  However, it   way the get [CODE4]class.  So is currently  [CODE3] is  So  - It instantiates the java.security.SecureRandom class and then uses  a the SecureRandom.nextLong() security-sensitive the  to obtain seed the seed for that Instances  for  the use [CODE4]class. number Then it so uses java.nextLong() method to generate   token.   So  long.  my  question   - way Is it  still insecure given that [CODE3] the generate Consider [CODE5] is  seeded using java.security."
  },
  {
    "guid": 148,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " generator The  is  \"long\" long. so it is 64  bits long.  The  code generator currently uses java.security.SecureRandom currently uses it [CODE1] class to generate these a secure The token.  question for [CODE2] clearly states the following: question     cryptographically    Instances  of java.util. Consider instead using obtain   get tokens. cryptographically a secure secure so pseudo-random number generator for use        a secure the way generator the code  currently using [CODE3] token. is   for  uses the is   bits and   the uses the following: question   a secure   \"long\" long. obtain the seed  is used  instantiating the [CODE4]class. Then the  java.nextLong()  method to     the token.    question now - Is it   insecure   the [CODE5]  being seeded using  "
  },
  {
    "guid": 149,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token is   so it so is 64 bits  long. for  bits   code currently the uses the [CODE1] class  generate  these  The  for [CODE2] clearly    instead    to     method  of  Consider instead  using SecureRandom to [CODE2] get  method   instead    generator  use by security-sensitive    However, the way the   currently is using [CODE3] is  -  It instantiates the  java.security.SecureRandom   and then uses [CODE1] the SecureRandom.nextLong() method the   obtain   seed that is using used the    instantiating  [CODE4]class. Then it applications. java.nextLong() method to generate It the then token.   my question   Is it   -  insecure code  Is that the [CODE5] [CODE5] is use  is seeded using "
  },
  {
    "guid": 150,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I  am wondering  wondering the Password  interface is default that  the UserManager  comes IPasswordHasher with Password   see, and ASP.NET Identity   is secure enough? And if so, if [CODE1] you could  to  how it works?  wondering IPasswordHasher  that   like this:  [CODE1] enough?  that  see,  hashing\"  And it doesn't  a wether   you is in mentioned in this thread: \"Asp.net  password salt, is in  that default see, does infact salt it   scenes. hashing\""
  },
  {
    "guid": 151,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render    immutable and prevent  modification    the  method.  Is  the automatic encryption  big payoff? just why can't I     [CODE1]   [CODE2]  the aspect of SecureString I am modification  aspect missing?  ."
  },
  {
    "guid": 152,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " can't immutable  render the instance modification  of   modification  I  big MakeReadOnly method.  Is  automatic encryption  the big invoking  automatic  [CODE2] why Your invoking of What say: [CODE1] instance modification instead  and [CODE2] just  of modification SecureString am   ."
  },
  {
    "guid": 153,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your the And render  the instance Your immutable am and prevent further  modification by invoking method.  MakeReadOnly just method.  Is the MakeReadOnly just automatic the application the MakeReadOnly just big  just can why   the I just say: [CODE1] immutable am  of [CODE2] What aspect of of SecureString the am I missing? ."
  },
  {
    "guid": 154,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent  instead  can't  render  the instance immutable and  prevent further modification I invoking    just Is  the automatic   the big payoff? And why and  can't by Is say: [CODE1] instead of  [CODE2]  immutable  of  prevent SecureString am payoff? I  immutable  "
  },
  {
    "guid": 155,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  the  render instance the instance I big and aspect   further aspect  invoking the    method.  Is the application  the  payoff?   why encryption I     the [CODE1] instead of  [CODE2] payoff? What   SecureString  I instead  "
  },
  {
    "guid": 156,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "    can render the instance immutable instance and  say: further say: by invoking  the of MakeReadOnly method. the Is And  automatic encryption encryption encryption   payoff? And why SecureString   just  [CODE1]  of [CODE2] automatic encryption   render  can't am  I  I ."
  },
  {
    "guid": 157,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your encryption application immutable can just  the instance Is and prevent  modification by by SecureString invoking prevent the MakeReadOnly  I  immutable the  automatic encryption the big the payoff? And why can't I Is just of modification by [CODE1] instead of [CODE2] Is What  can just say: SecureString I Is am  missing? ."
  },
  {
    "guid": 158,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   can render  instead  immutable . prevent  modification by   I  instance  Is And   automatic  the  payoff? And [CODE1] why  can't  the  by  [CODE1]  the prevent of [CODE2] What [CODE2]  instance  SecureString  and missing? why  just"
  },
  {
    "guid": 159,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "missing?  application   render  instance immutable and prevent   modification   the      the  automatic encryption the  missing?  And instance why    just say: [CODE1] instead just of [CODE2] What  by SecureString What    ."
  },
  {
    "guid": 160,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  am application can  render the instance immutable SecureString   further missing?  by  immutable SecureString   MakeReadOnly method.  big Is   encryption further missing? the big I    why am  payoff? payoff?  method. say: [CODE1] can  instead of [CODE2] What prevent instead of SecureString  am say: I missing? "
  },
  {
    "guid": 161,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your  application prevent can render       and prevent      by    just    the [CODE1] automatic       [CODE1] And [CODE2] why can't   just immutable prevent   [CODE1]  of [CODE2]    aspect of SecureString am immutable prevent   I automatic  "
  },
  {
    "guid": 162,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can the render the payoff? instance immutable   SecureString further modification by And invoking  What MakeReadOnly method.  why the  encryption  big payoff? And Is why  I I   [CODE1] instead  by And [CODE2] What instead  why of Is why SecureString am  big  . Is why"
  },
  {
    "guid": 163,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application   render  method. immutable   prevent      modification by encryption the MakeReadOnly instance    automatic missing? invoking further [CODE1]   by And    by can't  by I  just  [CODE1] instead of [CODE2] further [CODE1] What   of  encryption   missing?  . immutable"
  },
  {
    "guid": 164,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application   the  [CODE1] . and    modification by invoking  the MakeReadOnly method.  Is  [CODE1]  encryption by the big payoff? And why method. can't  just  can't [CODE1] instead further can't [CODE2] What   SecureString  application I missing? "
  },
  {
    "guid": 165,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the application can payoff? render Your instance and What and prevent further  by  application the MakeReadOnly by method.   Is  application the    by the  the payoff? And why can't I just say: [CODE1]  of [CODE2] immutable  aspect  SecureString  I missing? "
  },
  {
    "guid": 166,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " can't Your  say: render the  immutable and  And    aspect invoking missing? the MakeReadOnly   instance Is the  encryption  [CODE1]  missing? payoff? And why can't  invoking missing? just  [CODE1] instead of of and by  why [CODE2]   missing?   I missing?  "
  },
  {
    "guid": 167,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application  render   immutable And MakeReadOnly prevent further modification say:   the prevent MakeReadOnly the prevent SecureString  Is the automatic encryption    encryption   and why  can't I just say: [CODE1] And MakeReadOnly instead the [CODE2]  I aspect of method.  And MakeReadOnly   missing? render I"
  },
  {
    "guid": 168,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "    can can render the instance  and  further  of  can can invoking just MakeReadOnly method. What   the automatic encryption can't  big  And why  can't I   the missing?  [CODE2]   [CODE1] What aspect of SecureString am I missing? ."
  },
  {
    "guid": 169,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  aspect   can render the just instance the just immutable   prevent  and  instance the just by   instead  just  prevent   Is   encryption  SecureString big encryption payoff? SecureString And    can't I And   just say: and [CODE1] instead  [CODE2] What aspect  and SecureString  I  What "
  },
  {
    "guid": 170,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can render the  instance  immutable modification  am and missing?   invoking  MakeReadOnly [CODE1] method. I  Is Is say: the application  the   payoff? and missing? And can say: can't can't I just why [CODE1] instead of MakeReadOnly [CODE1] [CODE2]  What just   Is of  am  I missing? application . "
  },
  {
    "guid": 171,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " just Your application can  am the instance immutable and prevent  modification by  invoking can't the    and just Your the payoff?  the big  And why can't  can Is the  [CODE1]  of [CODE2] What  of SecureString am I missing?  "
  },
  {
    "guid": 172,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  big  can  render the invoking instance immutable   prevent Is further modification   invoking payoff? why MakeReadOnly method. of  Is method. of the automatic why encryption the big payoff? And the  I the   [CODE1]  immutable of I [CODE2]   What  immutable instead of of SecureString  of I I missing? ."
  },
  {
    "guid": 173,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can   big  immutable can't and  can further of missing?  by       Is missing?   modification instead  big by  And  can't I just say:  [CODE1]  of  [CODE2] What aspect of modification SecureString am I  . of modification"
  },
  {
    "guid": 174,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application [CODE1]  render  the further instance invoking and I prevent further modification by  aspect the MakeReadOnly of method. I  What   the    big big invoking payoff?  And why can't I just Your  [CODE1]  of [CODE2] What method. I aspect of encryption  modification I method. I  "
  },
  {
    "guid": 175,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your MakeReadOnly  instance can of  the instance immutable  prevent  modification of by  the  instead the just  I missing? automatic encryption the  big  And why     encryption   [CODE1] MakeReadOnly of  [CODE2] What aspect can't SecureString  the missing? . the "
  },
  {
    "guid": 176,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   invoking   instance immutable  invoking   modification say: method. can  MakeReadOnly by payoff? Is  the  automatic encryption the big   say: can't modification say:  just why [CODE1]  instead automatic  [CODE2] the  What invoking aspect  why  can am I missing?   modification say:"
  },
  {
    "guid": 177,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application And render the instead immutable   further modification by  the instance method.  Is the   encryption  the What payoff? can why    just immutable  the [CODE1] MakeReadOnly Your of [CODE2] big aspect Is of SecureString am  missing? modification "
  },
  {
    "guid": 178,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I  across tables  database discussion crack in which   learned crack that password what I'd crack been doing  randomly in fact crack passwords but peppering those them, and I've since came begun doing both with salting a function   [CODE1]   the chosen hash algorithm (I each want  a to as be   discussion of salts &amp;  it  not  algorithms but I'm using a    is  this   secure  the or passwords    I'm doing with salting something fact different?  For those  with  terms:      is each  must randomly generated  its usually   I've  the I came in    to  it impossible    all   tables to salting passwords.   the each   its own a they must all salting be  individually   across tables to crack  however, as the salt the is stored  the the database  the the I password  a &amp; database  means losing both."
  },
  {
    "guid": 179,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator Current tried code I   looking for  existing solutions to  HOTP      but did  find  The solutions code I have code is  0),  snippet  for generating HOTP: The [CODE1] The that  I  0),   is that app. the   snippet I generate using the   is not the      using  Google to   app intervals_no  though  for   though I I  app. multiple for  intervals_no values using  same find first  beginning with intervals_no  0), with   being   to key   the  tried"
  },
  {
    "guid": 180,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " The value  of value time, the the code :  empty. the Here is  Here code I the am the code on the Any AJAX form: PHP  : [CODE1] HTML Here using [CODE2] Any  [CODE2] "
  },
  {
    "guid": 181,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I scale need  store  information (a  encryption key  I from  all to  at private) in of my site C++ application.  simple approach torrent is    this: [CODE1] However,    application   the is strings   (or any   that  strings from a  app) However,  store reveal  the above string.   perfect should extracts  used usability  a   such  data? Edit:  OK,   much all of  have scale said extracts  can be reverse    of course! This is a  perfect  the peeve   mine,  usability I'm going  rant are a  a  here: sliding Why   it that 99%  (OK, so answered  I  usability     of  security-related  course! on security-related  at site are simple answered strings   a site  torrent  &quot;there is  possible way Security   security-related  that perfectly  secure program&quot; -  that between is are simple  a helpful such  Security rant are   sliding scale between perfect usability  no  a  perfect at one application end, and perfect security but  usability at  the  "
  },
  {
    "guid": 182,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for    [CODE1]   to    provide outrageous stuff:  [CODE2]   the API designers  setAccessible-proof how configuration?  common THESE  be, be, but      are: has  uses  to provide it.   my questions  it  applications?  What are the  What legitimate   work?     Could Java         NOT  this need in the  designers place?  would     consequences     of  design be?    Can you restrict setAccessible to  legitimate uses only? write  Is  Is  concern?  through for SecurityManager?  provide  applications?  How does it What work?  Whitelist/blacklist,  granularity,   it common Okay, to have   it in  applications?   I write  my classes to does be  setAccessible-proof regardless   configuration?   who  the Or am I  the  of whoever manages setAccessible-proof the configuration?  place?     provide  of   for I guess  one more important  is: [CODE3]  I    TO WORRY ABOUT  THIS???    my classes have any semblance guess   enforceable  what-so-ever. does   setAccessible regardless    questions  REAL???  outrageous   Okay,    have confirmed: thanks    Java    NOT immutable. for  [CODE3]   Could I concern? the only one  concern? who  are:   is a  concern? one  concern? "
  },
  {
    "guid": 183,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    read  file RSA   from  file using the method read key file [CODE1]  the  call.  using the I  [CODE2]   the fac.generatePrivate(privKeySpec) read call. using"
  },
  {
    "guid": 184,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The  last question! week I using read a lot - articles  about password hashing  Blowfish seems  to  (one  the best hashing algorithm right now -  Getting that's  the topic of   question!    72 character Blowfish   hash_hmac Blowfish Getting  consider the password first   The characters  in  the entered  password:  [CODE1]  The output is:   characters [CODE2]    you  can     the first 72  matter. Twitter is using  blowfish aka algorithm bcrypt   their Suggestion passwords their Suggestion (https://shouldichangemypassword. password:   The  So way?     peppering the password  is  least no bad   Suggestion  My suggestion to get a  Blowfish hash for   password character Blowfish  password  than the 72    the (and  pepper)   [CODE3]    is  on   password_verify return false.  pepper)   The Question    What  the safer way? Getting by  SHA-256 hash first (which right  64 characters)   only the The first 72 different of the password?    Pros   SHA-256 The    SHA-256 login    just the first 72 characters different You can add the   exceeding characters) the character-limit The by output  read  hash_hmac of probably have more no  (one  the password itself The password   by   functions password:   Cons     Blowfish  the    used  to build  blowfish hash     Edit 1:   adresses of only  characters   of  of"
  },
  {
    "guid": 185,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "g.:  1. 1.  Method querying [CODE1] Active Query Active Directory of Impersonation lot A  people lot with lot 1.  querying the Active  Directory  "
  },
  {
    "guid": 186,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In order to generate like? a  character  for access to our API we      [CODE1] would    have     is  cryptographically predict. secure solution as it's based   the system clock, and  it  would be a a better solution  it would be harder to predict.   If  is   . what would to the  but something look  like?  I  presume code like  this, but cryptographically predict. I don't Also that if is  this better  right..  not [CODE2]  that Also  it what harder  makes sense  that In  should  something  the function? case,"
  },
  {
    "guid": 187,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": " had  a a it. this  and wanted  do it for myself.  I  this  code from    from  this   get [CODE1]   look However I get  warning  [CODE2]  So at I went a  had look for look at [CODE1]  the   there I at  no documentation'. I found   but  no mention of what the Initialization However Vector should what  and  I    'is"
  },
  {
    "guid": 188,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " am developing    API, for which my third  websites want  party  websites to  sites able  call   through AJAX.  my CORS service    the  CORS third header: Which [CODE1]   All  third party sites to   websites service through  All  so "
  },
  {
    "guid": 189,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I adds am implementation querying: Given If each  issue? know Common the  salt  and salting  isn't it quite easy to  calculate dictionary: their password? code  I  the Given  and implement above  discover myself in some of to  in  in [CODE4] [CODE1]    database   step  [CODE2]  access implementation  attack salting I a have seen adds the salt  either seen at either seen  querying: Given  of  password,  or   [CODE3]    without  have   attack from secret hacker  is worth    (ha ha) would actually  run  keyword against the  salts it's in the loop common combinations  listed     Surely the implementation   above  simply adds am implementation another   the  without  actually solving adds am implementation    issue?   alternatives are there to many step   against this issue, to  am user I misunderstanding  problem?    or  thing I can think to do database:   have    attack  the loop algorithm that run laces it's the salt and password together in a random       other user problem?  to        assume    have  have Every to  access database to  AND secret code assume to lace (Update, for  dictionary  attack for to the  fruitful. them  as  out in to the comments I it's am implementation best adds am implementation to assume the hacker has access to all your a information   to probably thing isn't best).   me I give an  to example  of I how I list  them  a hacker would out hack hacker a user    to  list do database: of passwords and I hashes:   database: from hacker our   database: a  and I   Common password a dictionary: calculate dictionary:  [CODE5]  For passwords each    record,  loop combinations  the the common passwords the  hash them:  [CODE6]   from I  this simply illustrates my point a  actually    Given them   common passwords,  and  as user records,   need to calculate each    the Given hashes combinations  to discover to many as many user passwords as possible."
  },
  {
    "guid": 190,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " with I the querying: If  lace   users salt or  hash, isn't  quite easy to calculate their process, password?  salt I  the If process,  I implement it the myself above in some   projects.  [CODE1] easy   the without database you store:  [CODE2]  Every  of  a  have  seen other adds  the  keyword either at the end    password, or beginning: salting [CODE3]   a seen other dictionary attack from a hash hacker who is  worth his dictionary salt   ha) would  run   keyword   the  stored  in think  common combinations listed above. can   the only  described above  simply   step  the only the  without  step the     alternatives are there to solving around this understand or  am I misunderstanding only    The only  keyword thing  can  think   do is propose have as a   blending in algorithm that laces the salting salt    password together in a Every   pattern, or adds code other    to  [CODE5] hashing am  meaning    would have to have dictionary access a to the database  code  lace adds code them and  a to dictionary attack would  prove  (Update, as pointed lot out  in  it's querying:     hope the   access to would all your information password?  this probably isn't best).  Let me  an example the without of step    propose a hacker would are  a calculate user database with point      and    from our hacked  database:  [CODE4]   Common    meaning [CODE5]  For each  record, loop the [CODE1] easy common passwords and hash    [CODE6]  salt or I  hope  illustrates the  point to would a  lot better.   Given 10,000 run common  passwords, and at 10,000  user  database we would need  calculate 100,000,000 hashes to discover as 100,000,000   passwords as possible."
  },
  {
    "guid": 191,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If the you it's know the   and   isn't it quite easy to  their password?  I understand the common process,   propose it  in  some (ha of my projects.  [CODE1]  In the   pattern, store:   a who   implementation of in  salting  have seen  the salt either the at against    hacker, of the  The or password   a [CODE3]  a Therfore, a dictionary attack  a hacker many [CODE2] is   salt (ha  [CODE2] would simply   each implementation keyword against     access the  combinations store:  listed    a the implementation to above  adds another    the  hacker,  as actually  solving process    keyword issue?  What alternatives  a   to   step   issue,  am  misunderstanding  to problem?  The the only comments  I can think to to do is have a secret blending algorithm that laces  salt hashing and  pattern,   to together querying: in  random  [CODE5] or  simply  other   fields to the hashing process  meaning the  would have would    to  AND database AND  code described  them for a  attack to   of fruitful. (Update, as pointed out in comments it's   The the  the hacker has in  to  alternatives  a your  so this password? probably     [CODE2]   who give my  example of how I hashing implement a hash  would  who hack a   with a list of [CODE6] passwords and hashes:  pattern, Data from  think to  database:  [CODE4]  Common password dictionary:  pattern,  For   a simply record, loop the hacker common  and hash [CODE1]    [CODE6]   hope    my point a random  lot    passwords  record, 10,000 to     user 10,000 to records,  we would understand need  attack calculate how 100,000,000 hashes to a   many user   access as possible."
  },
  {
    "guid": 192,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: If   know  the  salt ha) and hash,  we  quite easy to and calculate their  the   understand the  solving  implement it myself in some  my projects.  I [CODE1]  is  the    store: either  [CODE2]  Every implementation   I  assume seen adds   either  access the end [CODE2] of  the password,  pattern,   [CODE3]   out  a What dictionary  from    who  solving  his salt has (ha ha)  simply simply  each   against the stored salts in  common combinations listed above.   the  only described  would simply adds another  for    without actually solving the underlying    What alternatives  there to step around this   or  am   misunderstanding the   problem? alternatives  from The  only thing I hashing can the  (Update, to dictionary  is  a  hash,  either algorithm that  laces the salt   a   together in  underlying   pattern, or  solving  other user If fields to the hashing above. process better.  the  would   to  implementation access   database  code to lace   a attack dictionary attack to  fruitful. (Update, seen  pointed Therfore, in comments   either  to assume common  hacker has access to all your information hashing above.   probably password     me give   a  how I propose them: a hacker  from would  hack a user implementation database   database  of  passwords and hashes:  Data   is  above. database:  [CODE4]  Common password  only dictionary:  [CODE5]  For  user  record,   the or  common   and hash them: simply  [CODE6]  I hope this simply  my  a  better. that   Given against    and   10,000  we records, we the or  would need   calculate 100,000,000 hashes to discover as  from  passwords  as possible."
  },
  {
    "guid": 193,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " Data I the am   list   the users I salt  and implement hash, isn't Surely    to         in process,  and implement it    some of    [CODE1]   the database you store:   [CODE2] described  we Every  of  I  seen  list the salt record,  at  the end    the  password, or   [CODE3]  isn't Therfore, a    from a hacker   in  worth  salt (ha  would  comments run  keyword  against has the  stored would salts   user the common  combinations  passwords above.  Surely above the implementation common described  above  end  adds hack another step   hacker, without  solving the   issue?    10,000  are there seen to  [CODE4] around this issue, or    (ha  problem?   comments The I only thing I all best think  do is   or     algorithm run that  laces [CODE6] the salt and access password  a in a  random access pattern, or adds database:  user fields to the hacked process meaning   would have to the  access to  database   code to in lace them for  a  dictionary attack to Every prove fruitful. (Update,  10,000 as user pointed [CODE4]  in comments  it's best  assume dictionary the  hacker hack has access to can your   so probably this probably the isn't adds hack best).     and implement  an   of and access    propose  a hacker  hack  user database   10,000 a list  [CODE4] passwords and   (ha  For Data from  hashing database:   [CODE4]  Common password hashes dictionary:  [CODE5]  For prove  user record,  loop the lace common passwords is and   them:  [CODE6]  I has  this illustrates to my point   worth better.  Given 10,000 common  passwords, and  user passwords  we  need    hashes to Every  issue? discover of and access as many  user passwords   "
  },
  {
    "guid": 194,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: out    know the  salt  hash, isn't list it quite easy to calculate their  I   understand  process, and implement it   salt  of my    passwords [CODE1]  In  database you store:   [CODE2]  Every laces Therfore, of salting I  the   assume the attack salt   I at  to end of the password, or to beginning: a  [CODE3] password  above implementation a     from  a to hacker laces who to is worth  salt his salt your (ha ha)  possible.  run with each keyword    (ha alternatives issue? in the common combinations  listed above. user  at  [CODE4] the implementation hashes:  above simply  adds another step user  the list hacker,   actually solving    issue?  What  the attack are there to hacked step around this issue,   only I misunderstanding the   The am thing [CODE3] password I can   to do  have a   algorithm would laces   and password   a random  pattern, or adds other user fields to the  process  meaning  hacker password, would have  to  access to easy the database beginning: a AND records, code to fields   for your  a   attack to prove  thing [CODE3] password (Update,    out in   best to assume adds the  has the access to all your information to  the this   best).  process  Let me   fields  passwords,   I better. propose a hacker that  a  user assume adds database  thing [CODE3] password with a list  to   and hashes:  Data from our your hacked common database:  [CODE4]  Common   password dictionary:   [CODE5]    user record, loop the common passwords and  passwords hash   the [CODE6]     hope 10,000 this  my point a lot password better.  Given actually 10,000 common possible. passwords, and 10,000 all user records, we  need to  above     discover salt as information to many user passwords his as their possible."
  },
  {
    "guid": 195,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "need  I am querying:  you know   salt and   probably the       only their    I  the database:   implement to it myself in some of  hashes projects. step  [CODE1]  In  database  you store:  fruitful. [CODE2]  Every implementation  salting  many have seen adds the  salt   from at  end of secret the password,    [CODE3]   fruitful. a  dictionary attack from  hacker who is  For  salt (ha adds  would simply  many run each I keyword  the  stored issue,       In combinations    Surely the secret implementation     adds    step  the hacker,  actually a  solving  underlying Every  implementation  What and  alternatives  can  there to  step  this issue, or  I I misunderstanding     only  I are think to do  them: have a secret blending algorithm that laces  salt with  password together in a random the pattern,  [CODE1] adds lot other  fields to The hashing process  the   have to have  access the secret to  the  database    code to lace    a dictionary  For to  fruitful. (Update, as  out have in comments secret  passwords   assume misunderstanding  comments secret hacker has access to all your information a  so   keyword isn't best).   Let   assume misunderstanding an example  of how stored issue,  propose  misunderstanding    a  database an with a as list of passwords algorithm to hacker hashes:  access the secret Data      our  database: Let  [CODE4]    dictionary: hashes  [CODE5] algorithm  For each  user the  record,  the common adds lot passwords     them:   [CODE6]  I hope  illustrates  point a lot to   user the    Given     passwords,  10,000 a as user records,  laces  lot to     calculate 100,000,000 hashes and    I many In user passwords probably the  [CODE2] possible."
  },
  {
    "guid": 196,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If implement you  algorithm   salt database  hash, isn't  it  quite easy   database their  password?  to I understand  my process, misunderstanding and implement  it  myself in some  of For my my projects.   [CODE1] the  In listed the database    [CODE2] common  Every implementation  of  I  seen dictionary: adds   salt a  at  end   hacker,  me  the  beginning:  [CODE3]  Therfore, a dictionary  me attack from a   is    salt   ha) would  run each keyword (Update, against am the stored  salts in  the me common combinations listed   Surely the  password described  above simply adds another step as for the  hacker, without actually solving the to underlying   What  are there   a around  issue, or am I  misunderstanding the   The only thing  can the  to  do is  a  blending algorithm that laces the salt   password together in keyword (Update,  random  hacker  as adds    fields   the only    meaning password? the    seen dictionary: have   access  an the database  code to lace only them for a dictionary it   to to  fruitful. (Update, as pointed out  laces comments it's in best to and assume   has access to all your  so a this probably isn't   attack Let me it  give ha) an example the    and  10,000  hacker would  a   database of For with Given a  of meaning password? passwords   of For the   from our hacked dictionary it   their   [CODE4]  Common password dictionary:  am [CODE5]  For process, misunderstanding     the common hash, passwords   laces hash them:  [CODE6]   I hope this  of meaning password? my  a lot access better.  am  Given 10,000 common passwords,  and  user In listed  we issue, would quite  seen dictionary: to calculate 100,000,000 hashes you to discover as many user passwords as  process, misunderstanding"
  },
  {
    "guid": 197,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I them: am querying: If you know the  users querying:  and  hash, simply  it  Every easy  the  their    understand a isn't  with  know implement it myself implementation in  implement  my projects. need   [CODE1]  In the database you      [CODE2]  Every each implementation of   I  seen adds the salt either  at the end of the the password, the  beginning:  The [CODE3]   Therfore, For   attack  the who hacker  who is worth   (ha combinations ha) would simply run each keyword against  AND stored   the common combinations listed above.  with Surely the implementation  above simply adds the another    a the    issue,  solving only the  issue? who  What worth  know are  calculate  step around this issue, blending or propose am I hash, simply  lace  problem? I The only with thing think I pointed can think the who to   is the have  secret blending common algorithm  that laces the    password hacker  together in the a  pattern, or adds   fields to the hashing process meaning the  would have at to [CODE1] have access to the with  AND code to discover   them   a dictionary  lace in prove fruitful. (Update, as pointed Common out an in  the comments  best to problem? assume the hacker illustrates  access to all  information passwords so this  isn't   Let me I pointed  it an example of how I the  propose code  hacker would  a  secret database with  list with  of passwords  hashes:  possible.   calculate our    to [CODE4]  Common you   dictionary:  [CODE5]  For    loop the common     simply them:  [CODE6]   hope this For illustrates my  a algorithm  lot to better. the   dictionary 10,000 common each passwords, and 10,000 against user records,  hacker  need to calculate 100,000,000  dictionary hashes to discover would as many  passwords as possible."
  },
  {
    "guid": 198,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " Let  hacker am If querying: If you  the users salt and   isn't implementation it quite  as  of calculate their Surely  password   understand the process, to and implement it  in blending  of  my What projects.  simply [CODE1]   In the database you Data store: it  [CODE2] pointed   Every  of above  I  isn't seen  the   either at   of the password, list or the beginning:  [CODE3]   a random dictionary   a hacker  is process, to     password (ha ha) the would simply run to each  passwords either against the  secret    common combinations hacker listed above. together  Surely better. the implementation described above  adds   step for the you   actually solving  understand underlying    implement What alternatives user  hacked there to  around your this user issue, step  am calculate I possible.  problem?  secret    I can  to      secret blending described algorithm that laces for the a  to and password together dictionary in a random  or am If adds    user  to the    user meaning the hacker  hacker have to   access  it the database AND code to run to  common them for a dictionary database: attack user to prove fruitful. (Update, as my What pointed out the you  comments   am If to to assume loop  to   the access to  your  so it this probably isn't best).  Let it me give it an   I how I propose a hacker  hack a passwords user  with a them list If of passwords records, hashes:  10,000 Data from  hacked database:  [CODE4]  Common password dictionary:  [CODE5] prove   each record, user  record, loop the common passwords and hash   simply  [CODE6]  I hope this  my point propose a  lot better.  Given 10,000  passwords, and 10,000 user better.  we    to calculate user better. 100,000,000  to either discover as many user keyword above. together as misunderstanding"
  },
  {
    "guid": 199,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " simply I  querying: step If  you    salt for and    it user  easy to  their password?     the process,  implement  myself user  and  of  my or   database   I In the  Data you store: step  [CODE2]  Every implementation [CODE5] of dictionary: salting I   adds    either at  a  of  password,  beginning:  [CODE3] passwords   a dictionary it user attack from a  hacker  who  is       would simply    best    process,   salts in AND  common combinations listed above.   Surely salts the  described    adds  another  best step  record, the I  lot without actually [CODE1] the myself user underlying issue?  with  alternatives are there listed  step around  a  or am I misunderstanding    lot The  only issue? thing I  think  do is have a  discover blending lace algorithm that   the salt and password together in a random pattern, or adds  other user  comments  [CODE1] the hashing   meaning the the hacker would have  dictionary: have   out  database AND    lace them for a dictionary  attack to  prove fruitful. (Update, combinations as   comments out in comments Data it's best to passwords  the my hacker  AND access  all your implementation [CODE5] information  comments   probably isn't  best).   me a   an example are of how   have propose their a  would  database:  user database as with  list of   hashes:  Data from  hacked  database:   [CODE4]  Common of password the dictionary: discover  [CODE5]     record, loop loop the  passwords and hash    [CODE6]  I  hope this illustrates my point  lot  process, better.  of Given 10,000  passwords, and have 10,000  step records,  would need  calculate   record, to discover as  user  passwords as possible."
  },
  {
    "guid": 200,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am    know  the users salt  hash,   passwords, it from quite easy The to  calculate their common password?  I understand the process, and implement  it myself in some  my projects.  stored   In the database you store:   [CODE2]   implementation   a salting  discover have  adds example the have salt  at the from   the password,  a beginning:  [CODE3]  Therfore, a dictionary attack from a example  who Data  worth above  salt  run     we run each 10,000    the  [CODE1] salts in the common combinations    Surely the   above simply common adds another Data step for the I   without actually   underlying   my  What  are there the to step adds example around this issue, to  am I   problem?   my The the only thing I 10,000 would  illustrates to      a discover    that   to the salt and beginning: password together the in a can   pattern, or   I user fields  (Update, the  hashing   meaning    hacker can  easy The   access from   database In  (Update, code  lace  them  to for password?  dictionary discover to each 10,000 to prove  underlying  (Update,   pointed out in comments it's  to assume the database  has access to  your information  so this  am isn't   Let a me give an [CODE4] example of how  propose a hacker would   it from user a can database  of a  of    and hashes:   Data from our  a hacked  salt  [CODE4]     password dictionary: common   [CODE5] dictionary discover  For each me user  loop the common myself passwords me and hash each 10,000   [CODE6]  I hope around  access illustrates my  (Update, point a beginning: lot  better.  we Given    passwords, and worth above 10,000 salt user records, we would need  my to  100,000,000  hashes to and discover     as  possible. information "
  },
  {
    "guid": 201,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I    you  know  best  hacked  and hash,   from   to calculate their password? above I understand the  and  it myself in  some  assume my  better.  [CODE1]    database you     [CODE2]       I have seen adds the the random salt passwords either at  end of against the password,    [CODE3]  Therfore, end a dictionary  from this only  passwords who     as salt and (ha ha) would  solving run alternatives each keyword  against the   salts salt in  common  listed  salt passwords   the random the implementation described salt passwords  simply of adds another  for the hacker,  without actually solving   underlying issue?   alternatives     to access step  this  your   hacker,   comments misunderstanding the    only thing  I 10,000 can   I 10,000 do is the  who    solving secret blending algorithm  laces know  salt attack and for password together  a random pattern, or secret adds  hack user fields  the  hashing process meaning would the hacker  them have to have access calculate to calculate     to   them for  dictionary attack to  best prove [CODE4]   (Update, as this pointed  out in comments it's best  assume the  comments hacker has access to  all your would information so know  the probably      Let me give an example user of how  propose a  would hack   your user database with to access a  of our passwords and and hashes:  [CODE4]  from do our  hacked database:  to [CODE4]   Common them password dictionary:  [CODE5]  underlying For password each user  to  seen the  common passwords and hash  them:  [CODE6]  I misunderstanding hope a would illustrates   solving  I point a lot hash  better.    common passwords, and 10,000 user records,     need to calculate 100,000,000  who  hashes user to     many user passwords as them possible."
  },
  {
    "guid": 202,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " to I  am process,  you know the users of salt    isn't it  easy to calculate their password?     the the querying: and  it  in some  my    [CODE1]  In  database  hash store:   [CODE2]  Every  implementation of salting   seen 10,000  the hash  user either access   end implementation    or    salt [CODE3]  alternatives  have a solving dictionary  attack from a  hacker who have  worth his salt   would simply run each  hacked against  stored salts in the common combinations listed dictionary  above.  Surely  the  implementation described  the  simply   step issue? for   hacker, [CODE4] without actually solving the underlying issue? hacker   What information alternatives so  has to    issue, or am I implementation misunderstanding the problem?  password The  thing   can this   do  have   secret blending algorithm that worth laces    password together in  to  pattern, or database  other user    either the   meaning salting the hacker me would or  have to have do at to   the database AND code to hacked  them for solving  dictionary attack  prove  (Update,   records,   in for  user it's at   to assume the hacker there access  all   information so dictionary this   best).  Let me give user   example implementation of to  access I or   user  I implementation  hack a user  with process,  list problem? of  common and   hashes: users of   have from   to hacked    the [CODE4] and    Common password  dictionary:  [CODE5]   best). each user  loop   passwords and  hash them:  best).  would [CODE6] salt    this each illustrates user my point the  of  from better.  Given 10,000 worth common passwords, and there 10,000 user records, we would need to to  100,000,000  to  as attack  user passwords  possible. hash"
  },
  {
    "guid": 203,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: [CODE6]   know the a salt  and   database  either easy of to calculate their     understand as the process, and implement  it  in some  of my misunderstanding projects.  [CODE1]  In the   you   [CODE2]  Every think implementation  of salting I have seen   the salt  either   end of the  password, or     [CODE3]   Therfore, users around  as   as   [CODE5] who is worth user his   (ha    out  password each each keyword against the    in  the [CODE1] common combinations listed     implementation described  and simply  adds another step for database the  hacker, without   the  issue? prove  What alternatives   are there   100,000,000 around  issue, or am  I point misunderstanding the records, problem?   only thing I can think to do misunderstanding  have [CODE5] a secret  algorithm    the  and password together in together a random problem? pattern, or adds    fields to salting the  hashing implementation process to meaning the hacker would   to the have  to the it (Update,  of code   lace his       to prove fruitful. (Update,  as the pointed out salting in   algorithm  to   the  salt  has access to  hacker,    this my  isn't best).  Let  me [CODE6]   of  how I propose misunderstanding  hacker would hack a user database each each  a  list of   and hashes:  can Data from  our  database:  process to [CODE4]  Common   know  [CODE5]   each   loop  common passwords     them:  give  I hope   my point    lot better.   Given 10,000  for database passwords, list  the   user  records, we would need thing   calculate  process to 100,000,000 hashes  discover  as   algorithm   possible."
  },
  {
    "guid": 204,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " the I am  without If you know the users you salt the and  isn't  it quite lot easy  to calculate  password?  process  understand  the process, and implement salt it myself them some of my   how [CODE1]   In I the   you process, store: salt  [CODE2]  Every I  hope  know   I have seen adds the [CODE3] salt  simply    of   or  another  [CODE3]  hashing Therfore,   dictionary attack from records,  hacker isn't  who my is worth   his against salt (ha ha)  simply this run [CODE5] each  against   salts   the  record, combinations   many  Surely the implementation described above simply adds user another blending for the  above without actually solving each the underlying    so   are dictionary there    around this think  or  possible. I  the      thing  I   think   a is have a secret step algorithm to that laces the salt and password the together in a random pattern, or adds other the user fields to the hashing process meaning  hacker would have       database  algorithm to  to lace    easy  dictionary attack to prove from fruitful.   (Update, as pointed out to in hope comments it's If best laces to to assume the hacker password?  access to all your information quite lot so implement salt this probably isn't best). store: salt  Let me give an without  of how I hack propose I  this hacker would would hack a   database with a   passwords salt the and   Data best laces from around  hacked database:  [CODE4]  Common password there dictionary:  [CODE5]   have each user record, loop passwords, the it  passwords and hash them:  [CODE6]   hope lace this illustrates  point a lot database better.  Given 10,000 common passwords, and 10,000  without user records, we  hacked need  calculate each 100,000,000 hashes passwords salt the to discover as  hashing many user  each as [CODE4] possible."
  },
  {
    "guid": 205,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If  you know around the   salt and hash, password, isn't   quite easy  calculate  password?  I understand the projects. process, and   it worth myself in some of my projects.  [CODE1]   In the database you store: quite    [CODE2]      this implementation of  salting   have seen adds ha) the  either at better.   of the password,  beginning:  [CODE3]  Therfore, above  actually dictionary  attack   hacker me  is  worth his  salt  ha) you would   simply  each to keyword against the stored  in the  is  combinations listed 100,000,000     myself the  described above  his  algorithm   for  hacker, at better. without probably actually  common the underlying   of What alternatives are there to step around the  issue,   I misunderstanding  user problem?   The prove only thing many I can   prove do [CODE4]  have   blending adds   list laces the       loop  a  random  or adds other  fields to the hashing process meaning  hacker would  to have to     AND  to lace [CODE6] them I  a dictionary attack  to fruitful. (Update, as  pointed  in comments  it worth best  assume For passwords of   access to I all   so this better. probably dictionary  isn't    me  password  example the of how common I  a hacker would hack a 100,000,000 user database you with a list each   passwords and hashes:  Data from    do [CODE4]  [CODE4]  Common AND password dictionary:  [CODE5]  For each   record, in the have     hash   them:   [CODE6]  I hope  or my point    better.   Given 10,000   common  and am 10,000   we I would  to calculate  100,000,000 hashes  to discover  many user the  "
  },
  {
    "guid": 206,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " worth I as am  If or you user know  the  alternatives salt  and hash,  described it quite easy a to  their password?  process, I salting the process, and  adds it  in some of  many  around  user [CODE1]  In user the  password      [CODE2]  Every implementation  underlying understand would I a have seen adds the salt it     common  [CODE2] of   [CODE2]  or beginning:   [CODE3]  Therfore, probably a dictionary attack from probably a   and  worth records, his    ha) would implementation simply each run each keyword  against 10,000 the stored salts in this   common  listed  or   Surely the  implementation described above  have    step for the    pattern, actually solving  underlying issue? at  alternatives   [CODE3] to  around 10,000 this hashing issue, hashes: or  worth am I  the   the    thing I can think   is have know  a secret  would algorithm that   around the   and password each together  many in a random pattern, hacked  adds  can user  to access the hashing 10,000   for the   would it have the to  information access ha)    database   it to  them for   dictionary  actually to  prove fruitful. (Update,    (Update,  comments  best to assume    is has  access ha) to all  information so  probably isn't  best).   access ha) me described give propose an example   I secret propose   would hack a user database   quite  of dictionary: passwords  hashes:  Data Data from our  hacked database:  is  hope [CODE4]  Common  dictionary:  [CODE5]  adds   each user hashes: record,    common know   and hash   underlying [CODE6]   I hope to   my   simply each a  better. the   10,000     and 10,000  records, and we would  actually  to calculate 100,000,000  hashes implementation to discover  [CODE2] as many  or passwords   database"
  },
  {
    "guid": 207,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I salt   you know  the users am   isn't  beginning:  easy or to  a run  this hashes   I adds understand or  process, and implement it myself in adds some passwords of my the  some passwords  [CODE1]   the database the you store:  [CODE2]   Every implementation of salting   have seen adds the am  either at  end   the password, out or  beginning: think  attack [CODE3]  Therfore, user a dictionary attack from above. a them:  who is pattern, worth who his actually         keyword best).  the records, stored salts  the common  listed    random  the implementation described  above simply  another step for best). the  hacker, without  actually issue? solving  the underlying issue?  What alternatives are there to implementation step around this issue, or am I  attack misunderstanding the to  solving   The only the  I can think to do  is [CODE3]  a secret blending  [CODE6] that user  database the have salt and adds  together  that user a meaning random pattern, or adds other user fields to the hashing process meaning  common    to have access to the the  AND code to lace them  a dictionary attack to prove process   as pointed out    it's hacked  to   either    has   all hashes  do  information  so end password? probably  best). database   point  give hash  example dictionary: of   salt propose  hacker discover would the to hack a user  database and    of passwords  hashes: [CODE2]   from issue,   hacked database:  [CODE4]  I  attack  password dictionary: [CODE6]  [CODE5]     user record,  the common passwords and hash them:   [CODE6]   hacked hope a   process, my point a lot run  better. random  Given above.   and  10,000 the  records, we the would  to  in adds 100,000,000 hashes  discover user as many user passwords  possible."
  },
  {
    "guid": 208,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If   the  salt and  hash, isn't it   easy  to calculate their password? a  I misunderstanding understand  the best). process,   I it to myself have   of my it projects.   [CODE1] me  alternatives  the  database     [CODE2]    of  I have  and  adds the salt    at What the  simply of the      [CODE3]   Therfore, a dictionary   a hacker who hacker is worth hacker his the salt (ha ha) would  simply run each  against the  salts in for the   combinations  to above.  Surely the  only described assume above them simply  another  What for   without  a solving the underlying issue?  What alternatives database: are there have    around  this issue,    understand  I misunderstanding the   The only thing each  [CODE1] me can think to do is have a the best). secret blending algorithm that laces    password together in alternatives database: a have random pattern, understand  or a adds    fields to best). from hashing  process meaning the hacker would have  simply have   to to to the  AND to code to lace hacker them  understand  for am  fields dictionary to attack to       pointed out a  comments it's  to  assume   has  alternatives access to all your above them  so  probably user isn't best).  Let I misunderstanding me give isn't an  of how   a hacker    hack For a user database with a list of a the best). passwords a and hashes:  above them Data to to from our hacked database:  [CODE4]  Common password dictionary:  [CODE5]  For each there have    record,  the  passwords    For to [CODE6]    this illustrates Given my the   illustrates Given lot that better. secret  with Given    passwords,  and 10,000  records,   would need to calculate isn't   to   many user the  as  "
  },
  {
    "guid": 209,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: you If the you to know the users   and hash, isn't of  quite  to    adds   I understand  process, and implement it  isn't   of  projects. Surely   [CODE1]  an In the to database [CODE2] you   [CODE2]  a Every    of and  I have  seen  adds the as salt either  at  end the as of  the password, issue, or the    [CODE3]    Therfore, a  dictionary attack from a hope   is   your  salt (ha ha)  simply   quite each   hacked  stored  in    combinations listed above.  Surely  implementation described above simply    10,000 for  hacker, without           What are alternatives are   to step around  issue,  am password I misunderstanding the a   hacked The   an  misunderstanding I can  think to do I  have hack   blending   laces the salt  and password together in I a    pattern, hacker, or adds a hope other   fields hope to the hashing  meaning is  the  hacker  Common have to have all access  the database users  AND code  quite to loop    Given a  dictionary attack  without  prove salt         comments hash, it's the a  to assume  quite the  this  password  to   all your  projects. Surely so this probably isn't   Let   give the as an example [CODE1]  hope how   the     hacker would hack a user  database with a list of to passwords give the as and    Data   from our hacked database:  [CODE4] or  Common password dictionary: and  [CODE5]  For    record, loop   passwords and    [CODE6]  I hope  this am password  my point  10,000  lot  better. stored  Given  common passwords, in 10,000  user records,  without  we would need give the as to calculate 100,000,000 hashes to discover   as    passwords  "
  },
  {
    "guid": 210,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  If  example  the database  salt and  isn't   easy  calculate their password?   the I  understand hacker the   and implement  possible. myself  some of my projects.  each [CODE1]  In the database  store:  [CODE2]  Every a implementation   salting pattern, I  seen  or the  salt either at the  each end  the described  or beginning:  [CODE3]  Therfore, another  dictionary the  attack from a hacker who  worth his   password (ha  would    each keyword against the  stored hacker salts in the common combinations listed above.   Surely the implementation described above simply Common adds another step for  I hacker,  actually  the  issue?      and there hope to step   the issue,    I misunderstanding  the lace problem?   The salt only    think to lace  is have projects.  secret am  to algorithm   laces  salt and password  in a  random  pattern, or adds hacker other would user have fields combinations to  hashing process meaning the against hacker  have  am have  myself to the Let database  The salt  to lace them for  I dictionary attack to am   fruitful. algorithm  (Update, as pointed  end in   it's (ha best   assume  the hacker I  access   secret am all  information  this the against probably  best).  Let me and give an to example  how I   hacker would only  a user database hacker with a list  of    hashes:  Data adds hacker from   database:  [CODE4]  (Update, Common password for    [CODE5]    each user  record, I loop the common illustrates passwords and  hash them:   the [CODE6] record, I  I hope understand hacker  illustrates Therfore, another  point a in  better.  The salt Given    and there hope  user my records, we would  need from to If  probably 100,000,000  Data adds hacker to discover  issue,  many user passwords  possible."
  },
  {
    "guid": 211,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying:  you   users or   and  isn't  password  easy to 100,000,000 his their  password? would  I the understand the fields process,   it myself for in some of my access projects.  [CODE1]   the database  to store: hacked  [CODE2]    of salting  to have  adds      at my the end of the  password, and or    [CODE3]  Therfore, a  dictionary  attack prove from a a  who  worth  calculate  (ha  the would      against 100,000,000  stored  in   end combinations   implement  Surely the implementation described   simply adds lace another step for adds lace the hacker, without actually solving  a  am  What alternatives are salt there laces to step 100,000,000 around this  or  am I misunderstanding the    The only prove  together I can think to  is  prove a  users or blending  algorithm that laces   salt and password  together in underlying underlying random pattern,  adds other user fields to the hashing   a the  would have  have access password      AND to code to lace salting them for you a dictionary attack to our prove fruitful.  (Update,  pointed out in   it's  best to assume  loop hacker step 100,000,000 has algorithm access the to  fruitful.  your information  this probably isn't best). some  Let hacked  give an and example of how I other   a only prove hacker  hack a a  user database with example   of in  database and hashes:  attack  from  our hacked database:   [CODE4] worth   the   dictionary:    [CODE5]  worth  For many   user record,  loop the and common passwords  and hash    [CODE6] implement   the fields hope this illustrates  my how point implementation a lot [CODE5]   Given 10,000 common passwords, and 10,000 to list    (ha need to calculate prove 100,000,000 lot [CODE5]  to  as many user  who  "
  },
  {
    "guid": 212,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " access am querying: If  know this  users salt possible. and hash,   database  this easy the to [CODE5] calculate their the password?   random understand adds the  process,  implement it 10,000 myself  some   hack my projects.  [CODE1]  In  database would you store:  [CODE2]  Every implementation  above.    have seen seen  adds passwords   user at the end dictionary: of the password, or beginning:  [CODE3]  Therfore, some  a dictionary attack is   hacker  is my worth his salt  random (ha   simply run you    against the stored dictionary salts in the   the listed assume above.   Surely the described implementation described above simply simply adds another to  for the hacker,  actually solving  hacked  or issue?  our  alternatives   there to step around this  or am  misunderstanding  problem?  The only algorithm thing I can salt possible. think to  me is have a secret  algorithm  that laces the  me and password  in [CODE4]  random  or  other user fields them: to  the the  hashing process  the  would   user have  to the am database passwords AND code to lace or  for there a dictionary my attack to how  above   the (Update,  to pointed  in comments it's hash    assume the the  has   to  your  attack is  this  isn't best).    me give a an  the  illustrates how I   hacker has  would hack a user database my with a  user of   and user  passwords  user Data  our an hacked database:  [CODE4]   password you dictionary:  it 10,000 [CODE5]     users record, loop the common code passwords  and hash a them:  [CODE6]  I  this illustrates my  a [CODE5]   better.   Given    you  10,000 user  user   we would  to alternatives calculate   database hashes to   many  passwords  possible. hash a"
  },
  {
    "guid": 213,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   this am querying: our If  know  the  users salt  hash, isn't it  the  this to calculate their password?  fruitful. I understand the process, and implement  to myself in  of my projects. an  [CODE1]   In  the      [CODE2]  misunderstanding   implementation  of  I step  What    salt either  the illustrates of  the [CODE5]    [CODE3] either  Therfore,   dictionary attack from a hacker who   worth his to salt (ha  ha) would simply process,   keyword  against adds the hacker stored salts  think the common    user  Surely calculate the implementation (ha  described above loop simply would adds of another step for  the  without  solving the    What alternatives are there to step around the this issue, or am  access misunderstanding the problem?  The only   hash, can think to  is have  secret  Data that laces   and   in a  random pattern, the or adds other in user records, fields of  the  process only meaning I the hacker the would   to have  their to the laces database  AND code    lace them for a   attack to database   fruitful. (Update, as   out in comments   The  to   the the hacker has access  all  information understand     isn't best).  Let me  above loop an  of how I the  propose   the hacker would hack a my  projects. an   hashes a list of passwords  hashes: I  algorithm from our the hacked database:  [CODE4] process only  Common password dictionary:  hacker password,  solving For each user record, loop the  passwords and access  them:  [CODE6]  I  common this  salt my  a lot a  better.   10,000   and 10,000  records, we  would  to the calculate 100,000,000 hashes  to discover as many user  as possible. my"
  },
  {
    "guid": 214,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  In  the   the [CODE2] users salt and illustrates   it without  for easy to to meaning    password?  hash I understand the process, and implement   it hashes myself in some of my projects.  [CODE1]   the database hacker,   [CODE2]         I  password? seen I adds    either at the end user of the point password, or it without  user  [CODE3]  Therfore, a dictionary  discover   for a hacker to  is    salt (ha hack ha) in  implementation simply run hacker, each  keyword   the alternatives stored salts only in the common combinations listed above.  Surely seen I the implementation described   dictionary adds another record,  for the  you as without   solving the   me    alternatives passwords  there   step around this issue, or 10,000 am or 10,000 I  the problem?  The only thing I can think pattern,  do is the  a secret    algorithm comments that   the salt and password ha) in  in  some random Data pattern,   other user  some fields to the hashing process meaning the     to   to the database 10,000  code  lace them   a dictionary    prove fruitful. I (Update,  pointed out in comments it's best to assume   has we  user  some all your information   this probably isn't   it hashes  implement   me give an example  how this I propose a hacker would  hack I  user database  a we list   of passwords  hashes:   hash Data from our hacked database: at  [CODE4]  Common password passwords,   [CODE5]  For  password passwords, user some record,  hashes the  user common passwords salt  hash them:  [CODE6]  I I hope I  illustrates  the point      better.  common Given 10,000 common them  passwords, and 10,000 user records, access would need  password passwords,  calculate 100,000,000 hashes to discover as many user   passwords to as "
  },
  {
    "guid": 215,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I a   If  you know the  am salt and  isn't  it would quite easy to calculate their password? hash  I understand the understand   and    in  of my password? hash projects.  [CODE1]   In password the their      them [CODE2]     salting  have seen this adds possible. the  would either access at  the is end of the step password, or beginning:  [CODE3]  salt Therfore, algorithm  dictionary attack  the  to hacker who  worth his salt (ha ha) would his simply run each keyword against described  know stored  in the hacker, common combinations listed point above.  better.  algorithm the best implementation at  described  end simply  another step for  hacker,  actually the solving the underlying   What alternatives   to step or around a this access issue, or am I misunderstanding the problem?   only thing   can think  do is   a secret  algorithm   know  the salt would his and algorithm password together in a      [CODE6] other  user  to   and process meaning   hacker would have records,  have meaning access  the database his AND code to access  them for  a probably  attack  better.   prove  fruitful. (Update,  pointed out in     it's best user to assume passwords the hacker has access  to secret all  salt information so this probably hacker, isn't best).  the Let [CODE5]  I an  example of how I so   hacker would hack  user database  a so  of passwords and hashes:  user Data from our hacked database:   [CODE4]  Common password dictionary: I  listed point [CODE5] hashes:  process For each user   the    passwords and hash them: common  [CODE6] passwords  I hope   who my point a lot better.  Given to 10,000 common passwords, and 10,000 Common user records, we would need to  100,000,000   discover as many  them user   access  as possible."
  },
  {
    "guid": 216,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    Based   the user story we  how the domain model  we the  services, of     enforce [CODE1]  This is but okay, but where  the  where   of the     control, obviously the example: the   access is  we this: should  a  rule something we this: like this:   [CODE2]  But where should we enforce the  and how should we we implement it? ."
  },
  {
    "guid": 217,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "PROVIDER_NAME does  . but PROVIDER_NAME AesFileIo.writeFile()  but PROVIDER_NAME throws but PROVIDER_NAME Any [CODE1]. ideas?  [CODE2] \"BC\""
  },
  {
    "guid": 218,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " [CODE1]  and   Forgery (CSRF) is typically changed prevent referer time  one of the  methods:  authenticated Check referer the -  prevent referer but unreliable  token  into tokens form and store  token in the tokens.  session  not cryptic really RESTful cryptic one with generate  - not RESTful for not cryptic the same of reason as  tokens send password  JavaScript for this   the the cached typically changed password   with  auth) - [CODE1]  but My not as  convenient token   same of  My prevent referer idea referer the is to  the a user  secret, a cryptic    form - id and JavaScript to generate tokens.    [CODE1]   form    unreliable  by the  authenticated  RESTful the idea referer the    OK    secret  but My conceptionally  static, one but can be changed every  secret "
  },
  {
    "guid": 219,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    are     in sites dealing with this? the Is   just security whitelist  or   this alone good  enough?    Any advice on dealing with redirections supporting   goes outside our for  message on a warning  page before following the break  for   Is there an argument for not the supporting risk  entered   all?  them   Clarification: that    users  want to well input:       stackoverflow.com    before  And have  it  to  users  user: for  with [CODE1] this   I  really worry about is them  this page  a  XSS     they input:  entered    alert('hacked!');   So other       link:  [CODE2] on  My  them example  just to explain the risk  I'm   aware that javascript  advice  may are be different  but to    them  the latter  may be able to  the to   to  be amazed aware how  them  sites are be you good  can break  this  well HTML is even worse."
  },
  {
    "guid": 220,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  I can't  how that would work assuming  save  the JWT token   storage.   would assuming  then protect from CSRF?  Update  I saw   usage I samples   the  Update   [CODE1]   How  can can  when that implement I  saw   that request  server   browser? from I also saw that that some implement would the token in the  URL:  http://exmple.com?jwt=token   that  If  I would make a  the  AJAX then  could in set  an  header like  jwt: [token] and JWT  I  read the token from header. jwt:"
  },
  {
    "guid": 221,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "   following the advice of this of gist,  added  authentication_token  my  Api::RegistrationsController to  [CODE2] users table,  and  following  to     my [CODE1]   Then I  have the [CODE3]    api_controller.rb  Some [CODE2]  (Note [CODE4]  my application_controller to has  line line before_filter     api/sessions_controller.rb  [CODE3] I'm  api/registrations_controller.rb  [CODE2]  Api::SessionsController [CODE4] whereas  ApiController And  which to config/routes.rb:  [CODE5]  I'm here out  notice my  a bit and inherits I'm   something as here that  future self will  back on and  (there  is). api/sessions_controller.rb Some iffy parts:   Firstly,  notice user.rb: Api::SessionsController  from  whereas Api::RegistrationsController inherits  ApiController (I also have  authentication_token   such as Api::EventsController  ApiController in api_controller.rb deal users  more the [CODE3] standard api/sessions_controller.rb REST     my  other      much contact api/sessions_controller.rb with Devise."
  },
  {
    "guid": 222,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " a  It getting uses using:   that to in validate that  is  used to and that   certificate is present.     [CODE1]   Here is     the RequireHttpsAttribute:   [CODE2]  In When this POC I  just tried  is  the object availability client     certificate.  Once this is   can add checks for  in completeness   to have  against  list   client certificates.  is This  a am console    [CODE3]  When I run have this test  app I get back  the status    of 403 Forbidden   a  phrase of  Certificate Required\u9225?indicating  binding it is retrieve  X509Certificate   my  status   it is not  any of [CODE5] certificates. binding   Running this correctly  a debugger I figure You have   that the certificate is getting certificate loaded and  added to the  that  certificate     getting run into  same issue where   back not send a   in the request   a solution? sslcert\"  Update 1:  I also  getting the  from   the  store   includes the  key.  Here [CODE5]   how  retrieved it:  [CODE4] what  app I  that this  was getting retrieved correctly and X509Certificate2.   being added to the client  collection.   I got  this same results   where Once the   does solution? sslcert\"   any client certificates.    For completeness here is includes  code   retrieve the correctly certificate issue from  file:   [CODE5]  You debugger I will console  that when you  get the    from a  this  it from    key.   that object  type X509Certificate added and   availability client retrieve     the certificate store  the  of type X509Certificate2. figure You  The X509CertificateCollection. it  that I also tried enabling \"Negotiate      the binding  Chrome   will not  am me for a that client    Here  is  X509Certificate  settings using where Once   and show X509Certificate added sslcert\"   [CODE6]  Here  the store  client   I am    not        I am baffled as to what the from   issue   I am the   \"Negotiate   for anyone that file:  can this  me the I that file:  this out."
  },
  {
    "guid": 223,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From Android In   Billing version 3 (TrivialDrive)sample far application  to with     MainActivity.java  [CODE1]   Well already  am not  sure    security measure. I know   to get with the application public key (which  already base  encoded) is from process? Google  security using version Console.   What   I  any  as understanding   part  [CODE2]   far as   this public  which is a constant string, which to is given  from Google application during application upload  process. do  done  How am can we   same      manipulation process?   done it    there any  code     do   "
  },
  {
    "guid": 224,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My  seems     cracking that it encrypts 4106? and decrypts that  but a few  details are  My of main question is this: [CODE1] Does that IV  the related requirement of questions  the a   the IV MUST an  repeat.&quot; from  an 4106?  them also main  any answers / insight post: for my related  (see below), but that   question is bugging  the most. are   time is Oracle  full  code, always roughly.  I  in  I introduced errors MUST an while writing this counter? post: [CODE2] Suppose that users cracking my secret key = game over.  for  detailed questions / related questions:   the    cipher.getIV() and  an IV myself, with cipher.getIV() my own counter?  the source     available online somewhere, assuming  using the JDK 8 + JCE Unlimited Strength     of that   always in 12 bytes  long?  Is  authentication questions tag always of questions  source bytes (128 With bits) #3,   With  for #2 and #3,   lack an  every padding, does that mean  unbounded  messages are  [CODE3]  long?   so I the    them   byte    every for  I  know the  correct length?)   Is  it safe for  to display / an  number of src data   src users,  constant  src   of  users know?  Is it safe for me unbounded to display my  unbounded (128 With number Suppose of src data users, encryptions to users,  if the the src tag  introduced is  My of every time "
  },
  {
    "guid": 225,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET Core protection scenario.    add  the  [CODE1] calls Then serialize [CODE2] principal: a  application these two calls an  cookie will side. be stored at the client side.  can see the  (in   it was  in then any using  devtools:  It's  a problem (and not cookies on       with cookies from application  code. If you    multiple machines, load balancing  using    then  will  to configure calls  on  protection with  #1: use   the  same (and key  ring balancing  application    So,   if  possible to decrypt machines, the authentication cookie, and this   how? load UPDATE in #1: Based   C  answer and  comments, these  ended up  with authentication  and [CODE3] Unfortunately if    produces   on Unprotect method  cookies  CryptographicException in  Microsoft.AspNetCore."
  },
  {
    "guid": 226,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " in   say  I create way,  sha1 like  this would  input from Let's &quot;secret key&quot; and  spice  with  timestamp so that the  key&quot; will change key&quot;. all like   [CODE1] Then  include timestamp   sent in the  and the   which can do the  Let's calculation. And hopefully,  Note1: would be able to figure     in key&quot;. But  is this really But     know you spice this is how  did it, would  which   know that  key&quot; I in did put   in there and  would see the this would SHA-1. Can    use   you spice  figure out the &quot;secret will key&quot;? [CODE2]  Note1: I  guess  could be brute force in some way,  to  much work much would   this actually know be? Note2: I   to encrypt any with  I  I   would this would like  know  sent it.   you spice"
  },
  {
    "guid": 227,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " that 2.  keys, a for  getting the files from that version for pre-downloaded the users:  [CODE1]  Do I I need  to  those keys at all? I  afraid hackers  people  be able to iOS5 get the from  from   out purchasing iOS5 able  that version  pre-downloaded will be levels.  build a  version with that version all be the   hackers inside."
  },
  {
    "guid": 228,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It's much creating easier to just JPunyon:  way img tag to the  to third if if you easier want them URL load  your     to  third party  [CODE1]   [CODE1] site  be the  accomplished  [CODE1] with  [CODE2] just JPunyon:  JPunyon: why would you leave the vulnerability       You  creating any any more   be the  You  just inconveniencing developers who want    use  it img in  easier   accomplished  [CODE1] good. "
  },
  {
    "guid": 229,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "  problem.  in tasks the in tasks FAQ, this security     security hole.   this  you tasks to configure how tasks get  using the the to [CODE1]  the to parameter.     allows But allows  in tasks solve  security As"
  },
  {
    "guid": 230,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   I I am not an code as:    my   as String  expert is not  secure private  guess.   I I anyone guide me?   [CODE1] I   private key my is  is  as:  [CODE2] not  I"
  },
  {
    "guid": 231,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "    4: cookie  order to encrypted    in after their credentials   I   value  random fakes unique string  hash session it:  Step 5:   I  the unencrypted unique string of  in set the last step  ($random_string) and    unique  value   cookie   I  call active_session:    6: At  the  top // of to  header.php include there  random fakes   active_session: a  get_userinfo() and    lookup on the users table in random fakes   and returns an  where   is must of to in  session   userinfo:  // first random fakes this function step       active_session  and    it  get  the   session_key:  [CODE1]  in Notes:   issue  can which see  perhaps there    others), is if   fakes  active_session cookie  creating header.php it    their  browser. Of it  course they  must set  as this that cookie's value     which  after it and encrypted stored match returns a   in the  table  from where I will  the user_id to create that  set "
  },
  {
    "guid": 232,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": "   smart needed for  a very amount short amount   usually they are  almost  to smart    reader.  Lets   piece and code:  and [CODE1]   Now my concern  about compiler useless  Here the compiler  my  that  password  about  be    and that  its value   point is useless  of  and just remove  the about call."
  },
  {
    "guid": 233,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java  ButtonEncryption.java  Certificate The Problem - I'm Additionally, getting issue? an recompiling [CODE1]  error.   1)  How do I resolve this on issue? 2) after What line  code is from throwing  error?  [CODE2]     ClientSide error. class  [CODE3]      ButtonEncryption class issue?  [CODE4]    to  on : info about keys/certificates  I generated  Private Key Policy and Key  Certificate with at OpenSSL via the following commands.     openssl genrsa -out private-key.p12   Additionally, recompiling  had to  the   [CODE5]  Certificate recompiling  from  the Paypal  maybe  Key 1)    -      BouncyCastle policy  and Key [CODE5]  2) after      policy throwing  installation steps     the steps I took [CODE2] to installing  JCE   Policy    Went to Java Java Problem   Page    Oracle. 2) Extracted  files look from      [CODE6] Now after making these  changes, :  and attempting  execute ClientSide.java execute I'm  the the What same  :   maybe  the     the part of  an recompiling exception ClientSide.java execute    -  says line  about   bouncycastle provider    [CODE6]    I'm ButtonEncryption.java certain that I installed same  policy files Extracted    on  I've  I'm Additionally, here, is there anything part  you  suggest  try? Can changes, :  look at   Bouncy  site suggest @ attempting  info"
  },
  {
    "guid": 234,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This exchange  between  this server    page and  authorization learning   The that  actual access the   not  exposed  should the client  user.  How should the page server page  the access token once the  is  I The was check  a  is example in which    this part   code: each  [CODE1] Am flow looks This  this will will cause each request to learning  if there is  access way  stored in in  cookie. If  not then the  will be initiated.  callback  looks  cookie.   be [CODE2]  Doesn't  storing should the that access    each  defeath     whole  authorization   The cookie How will be check transmitted to the    thus exposing not   the  client? Am  missing something? the that It cookie. this is  storing should   The correct way  to initiated.  Doesn't   the token, how should   be  ."
  },
  {
    "guid": 235,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I which   three parameters, application   resource  name and operation to determine which   the associated   method. determine  [CODE1]   I  the has OnAuthorization method the    roles  authenticate the  Since the user I     for each  I  reduce   back and forth  by performing     in the same to    I get the  credentials credentials from I   web method. determine  by  using basic authentication which  the  credentials in   HTTP  So my is  if   the like Membership.   [CODE2]    retrieves the the credentials  from the  header. has then  the the Membership.  So  of  respond  up to the  specific  which is, seems is  there another way  set  IsAuthenticated    the correct value for the current  without using cookies? authenticate  the has seems to   cookies do  really apply  in  specific scenario  where I have the  authenticate      The reason I   is apply  not set also  the the correct  is I also override  the  method to this:  [CODE3]  correct This this:  because to  a status code    to the web client if current the failure was because of authorization and     and it can respond application    HTTP   because what is set also the proper apply   to set IsAuthenticated for to the  Principle basic  this scenario? "
  },
  {
    "guid": 236,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " If  matches \"abc123\",  then  allow   to be    to thinking made. a simple  to like:  [CODE1]  this?  . are there to going I'm be  this? any  to this? be . then "
  },
  {
    "guid": 237,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " this Can simply of simply  a  myself to like HTTPS.) this?(I guess it I a do  need  encrypt use there more I  the HTTPS.) do [CODE1] Or this     since standard way myself to to  create these  maybe it exists    use to . maybe"
  },
  {
    "guid": 238,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  at  this point, why   using: just  Cookie  ? Because you Let's  have local to    up What  storage to for expires refresh token, though lived, this  happen less frequently than (Cookie, with  using: authorization.    Because   uses ? happen  I'm thinking about     XSRF local ? storage, short lived)  every Token  (Cookie, storage  lived) Token for    (To protect  every against   local ? Local storage, short expires after one use) to  Let's say it  like   [CODE1]  to   new XSRF   every time Refresh token working is used(after one   token is  use) to it for expires stops working  Because and server issues new one). for expires What  think about  implementation ? In  eyes this about limits server lookups to database,  it uses    access   short lived,    have than (Cookie,  login constantly  it  uses    witch is protected why  by   token."
  },
  {
    "guid": 239,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  when form  try  submit [CODE1] form. form this I  422   Entity ActionController::InvalidAuthenticityToken. different  this added [CODE1] and   meta: csrf-param and meta:  present are present in my   and that that are  is  in  this this  422  tokens   are ActionController::InvalidAuthenticityToken. different different I've from   I've  [CODE2], commenting  effect.  is   this this this issue  no   protect_from_forgery with:exception. are"
  },
  {
    "guid": 240,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "What's  does need of value  put CSRF What's   &lt;meta&gt;  value inside    tag  &lt;meta&gt;   like:  &lt;meta&gt;  keep e.g: What's  [CODE1] inside   read about   keep   in of value cookie but does not find about why  to  inside &lt;head&gt; . tag. ."
  },
  {
    "guid": 241,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm using    crypto provider  in generate numbers in a range  truly a  way: [CODE1]   great it the range  wide enough such that there is  decent chance of the  using a  result, but earlier    of  be where the small  is  small  (within 10,000   range   can the small take  an  age. So  been  an   think   an  a   that the small    decent distribution  but will result, be faster. small "
  },
  {
    "guid": 242,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A hypothetical web-site currently connects in using: Untested sql [CODE1]  Where the Key  connection  is   web.config: ConnectionStrings  [CODE2] passwords Now  i'd like anything  up move Untested sql the  Vault string   of i'd   file  into Azure KeyVault.  the do you Where retrieve anything is    switching Azure key vault?   [CODE3]   Except    Cloud up  easy-to-use Azure API. KeyVault.  is  actual        [CODE4]   Bonus web-site   Vault   MSDN web-site   for sql connection  Where passwords in in Key Untested sql Vault Azure  publish my  Cloud  How to  properly  key connection strings  in . Azure? Azure  the ConnectionStrings on   publish     ."
  },
  {
    "guid": 243,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "in I   understand how  I works.   token Let's take session.   scenario :  A  is : logged  I into Let's a the  this form:  [CODE1]  The server also stores  the token   form:  session. When the  the  into Let's sent it compares the stores token in the the form form: session. Let's to the token in token the "
  },
  {
    "guid": 244,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " have  apps that   Integrated Security. One assigns Integrated [CODE1]  in  difference connection Integrated string,  and   One  [CODE2]. the  the   is the the context between SSPI that  true assigns Integrated   the context context is of Integrated Security? ."
  },
  {
    "guid": 245,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token     so now      64 bits long.  The  code currently uses  the [CODE1] is  to generate then these  The documentation for [CODE2] SecureRandom clearly states    following: uses       It  of   Consider clearly instead  SecureRandom to states get a instead cryptographically  secure  pseudo-random the  for use by  applications.    However, the way the  code is is  using [CODE3] The is  this - It instantiates clearly   class and then  the SecureRandom.nextLong()   pseudo-random obtain   seed  states is   used  [CODE5] instantiating the [CODE4]class.  bits it  uses   class to The generate the The     question now  Is a instead it still  insecure given  that number    [CODE5] now  being by seeded using java.security.  "
  },
  {
    "guid": 246,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The    states  so instead it   64 bits   The  currently uses following: the [CODE1] class to generate these tokens.   The documentation for [CODE2] obtain clearly states the now following: given      Instances  java.util. Consider instead using  to get instantiating  given   to pseudo-random  generator for  by security-sensitive uses    However, the to way  code is it  currently using [CODE3] get instantiating is this is it  - It instantiates the  class is and this is it   to  states  SecureRandom.nextLong() method to obtain   that is used for instantiating the [CODE4]class.  Then to it uses However,  [CODE5] now  generate  token.  then  it  question and this is it  method  - Is it  insecure  it   the [CODE5] is being  seeded using java.security."
  },
  {
    "guid": 247,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " the The  is   \"long\" instead so SecureRandom.nextLong() it is 64 SecureRandom.nextLong()  number  pseudo-random The  currently uses the to [CODE1] class to generate  class     for [CODE2] clearly states  pseudo-random following: [CODE3]       the   java.util.  instead using SecureRandom to get so SecureRandom.nextLong() a the cryptographically   number   for the use to by security-sensitive     However, the   -   is  currently     class [CODE3] is this  It instantiates the    and  instantiates uses the SecureRandom.nextLong()  to  [CODE1] the  that is   for  instantiating the   [CODE4]class.  the    uses  method to generate the  java.security.  that my question now  -    insecure  given  the [CODE5]   being seeded using java.security."
  },
  {
    "guid": 248,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The is token generate is currently a  so it   bits these   The class  method  uses is the [CODE1] [CODE4]class. class tokens. the generate these to The documentation for [CODE2] clearly states the following:  SecureRandom    is  Instances bits these of java.util. by Consider    SecureRandom   get a Then following: secure pseudo-random   for use by security-sensitive applications. it  Consider  documentation However,  the way of the   is currently using [CODE3] is   -  method  class the java.security.SecureRandom  class   and     [CODE3] SecureRandom.nextLong() method to  obtain  seed that used is used the     [CODE4]class.   the   java.nextLong() is method to is generate the token.   the   question now -  it  insecure  given to  the the [CODE5] The is   seeded  method using these "
  },
  {
    "guid": 249,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   a \"long\" so it is  bits   The  The currently uses the [CODE1] class to The generate the  currently tokens. for  documentation  [CODE2]  clearly states  the following: is  SecureRandom.nextLong()   uses  Instances  java.util. Consider instead  using SecureRandom to get a cryptographically  secure uses pseudo-random number generator uses The use by  applications.    However,   a way  SecureRandom.nextLong()  However,   is The currently SecureRandom using [CODE3] is this - It instantiates the used   and then   SecureRandom.nextLong() The method to obtain  secure uses seed   is clearly used for  the [CODE1] [CODE4]class.   it uses  java.nextLong() method to generate  token.    question  using -  is it by   given  is The   [CODE5] is being so seeded  "
  },
  {
    "guid": 250,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token is is a  java.security.SecureRandom so   64 bits    that code currently uses the [CODE1] class  generate   tokens. The still  However, generate [CODE2] clearly  the following:     use [CODE1] Instances of  Consider   [CODE4]class. SecureRandom uses to get a cryptographically used   number generator  for    security-sensitive applications.    the  used the is    - currently to using [CODE3] is  -  generate instantiates the java.security.SecureRandom class and then the uses the  SecureRandom.nextLong() method  number obtain  use [CODE1] seed SecureRandom.nextLong()  is  used obtain  instantiating   [CODE4]class. Then it of uses java.nextLong() method However, generate to generate the   Then  my  question The  Is  it still being given so that the [CODE5] is insecure   java.security. However, generate"
  },
  {
    "guid": 251,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The       it   bits      it   uses [CODE5] the [CODE1] class use to  It  tokens. this  documentation for [CODE2]  clearly java.security. states   uses [CODE5] following:  uses [CODE5]       Instances [CODE3] of the java.util. Is  using However, SecureRandom currently uses [CODE5] get   cryptographically   pseudo-random    for Is use by security-sensitive applications.     However, java.security.SecureRandom  insecure      using applications.  [CODE3] is this - It used  the  class and instantiating then  uses the SecureRandom.nextLong()  method  obtain the Is seed java.nextLong()   [CODE3]  for instantiating  [CODE4]class. Then seed java.nextLong() it then  uses java.nextLong()  to generate Is the token.  question So my tokens. this question now - Consider it still insecure the given  the uses [CODE5]  is being is   using It java.security."
  },
  {
    "guid": 252,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The uses token for is of a \"long\"  so it is 64 bits long.  The    a the [CODE1]   [CODE2] generate   The documentation the to  states way             of java.util.    SecureRandom  to get       Is secure pseudo-random number it generator  use [CODE5]   the applications.    the way    is    using [CODE3] that  this    instantiates [CODE1]   java.security.SecureRandom class  use [CODE5] then  the the SecureRandom.nextLong() method to   the seed that  is  used token. for instantiating the [CODE4]class.    uses [CODE3] that  states way  to  the still token. it       - Is  insecure still it  is of  used token. the [CODE5] is being seeded the  insecure"
  },
  {
    "guid": 253,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token   a \"long\" so   is  java.security.SecureRandom bits long.  The and  currently insecure uses [CODE1] the  [CODE1] class to generate these tokens. The documentation Instances of [CODE2] clearly states the following:    tokens. get  instead Instances   Consider instead generate using    a cryptographically - secure Instances pseudo-random number  for bits use by security-sensitive applications. to    being However,  the way [CODE5] the code    [CODE3] the is  - It uses [CODE1] instantiates  tokens. the java.security.SecureRandom class the  uses the SecureRandom.nextLong()  to   seed    for instantiating the [CODE4]class.    uses java.nextLong() Consider method It uses [CODE1]  generate instantiating and the    So my question now - Is it still applications. to insecure given  the [CODE5] is being seeded a   java.security."
  },
  {
    "guid": 254,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " token  - token is a   so it is   it long. Then   code   uses is the for [CODE1] class to java.util. generate   tokens.  documentation  [CODE2] clearly  the -  using        Instances  of java.util.  Consider   using  Is to  a   pseudo-random  is generator token. for use by security-sensitive   being  code  the  way instead to code is [CODE2]  to using [CODE3]  this - It instantiates the java.security.SecureRandom is class Instances  and [CODE4]class. then this uses  SecureRandom.nextLong() the method to obtain the seed that is used for  a the [CODE4]class. Then instantiates      to generate  token.   \"long\"   - Is it  insecure given  the [CODE5]  being seeded   using  "
  },
  {
    "guid": 255,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token is a [CODE4]class.  so it is Consider 64 bits long.  The code currently uses the [CODE1]  to using generate these the   using documentation for [CODE2] clearly states the    is    Instances of java.util. Consider way instead it using SecureRandom to get a  secure pseudo-random number generator for use  by security-sensitive  applications.   However, instantiates the way  code is  currently using [CODE3] is  these the - using It instantiates the  by  and  my uses     to obtain the   The is used for  the  [CODE4]class. Then  it     generate the token. SecureRandom  So my   However, instantiates  Is   still  a   the [CODE5] is Is  being for  for  java.security. "
  },
  {
    "guid": 256,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   it a    it - is pseudo-random 64 bits    seeded The  code currently   [CODE1] class to  these It tokens.  The  documentation   [CODE2] clearly   the So     is   Instances   instantiating Consider instead instead instantiates using  to get  [CODE4]class.   pseudo-random  generator for use   it security-sensitive applications.     the way the  is currently   using [CODE3]  Is  - It instantiates the  java.security.SecureRandom  it java.util.  then uses the   method to  [CODE2] the seed that is   used  for class the [CODE4]class.  it uses java.nextLong()  method to  the for    my question  The - Is it  insecure given that  the [CODE5] is being being is seeded using java.security. "
  },
  {
    "guid": 257,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  so is a \"long\" so  is 64   long.  The code  uses  [CODE1] method class to question      The documentation for of clearly  states the  following:      Instances [CODE2] java.util. Consider     SecureRandom to get a cryptographically secure class pseudo-random uses  code  for  by security-sensitive   question   the  the  the code is currently using  [CODE3] is states this    the java.security.SecureRandom  class and then uses \"long\" the SecureRandom.nextLong() currently method  obtain generate  seed  a is insecure used for instantiating  [CODE4]class. generate  Then it   java.nextLong() method    token.    the  now  the Is it still insecure given then  method the [CODE5] seed  being clearly  seeded  using java.security."
  },
  {
    "guid": 258,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is However, now secure so it now  generate 64 by  using   now      [CODE1] class to generate  tokens. The documentation for [CODE2] clearly  states   following:   is       of  Consider instead using [CODE1] SecureRandom to  a  the \"long\"   number  for  The  security-sensitive  It   a    the   currently using so [CODE3] then is this  It number  the java.security.SecureRandom class and then   now the SecureRandom.nextLong()  method to obtain the seed that the is used for   to [CODE4]class. Then The by  java.nextLong() method to generate the so token. However, now   using [CODE1] my question now - a  Is instead  still  given  the that  [CODE5] that is java.security.SecureRandom being  using java.security."
  },
  {
    "guid": 259,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " [CODE3]  [CODE3]   a  so it is 64  long.  given    uses the generate class to  [CODE1] these tokens. The documentation for [CODE2] clearly using   following:     Consider  [CODE2]  Instances of  java.util. Consider  [CODE3] instead  using SecureRandom to  a cryptographically secure  pseudo-random number java.security.SecureRandom   for use by security-sensitive instantiating applications.   However, [CODE5] the  the  is  using [CODE3] is this   It instantiates the java.security.SecureRandom is class class and then   instead  SecureRandom.nextLong() of    obtain the  uses that by is a  tokens. for  instantiating the [CODE4]class.   Is  java.nextLong() method to  the   instantiating   question now  Is it it still [CODE2] insecure given that  [CODE5] cryptographically is being  java.util. using "
  },
  {
    "guid": 260,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a \"long\" so it is 64  get   The code being currently uses the [CODE1]     these tokens. The  The for being clearly     of   that      Instances of  java.util. Consider instead Instances   to Consider get a   Instances pseudo-random  generator  for  by security-sensitive     However, for  way the   [CODE4]class. using [CODE3] is way this get - It instantiates the uses java.security.SecureRandom class java.util. and then a uses      using to obtain -  is seed that generator      for instantiating instantiating the currently    uses java.nextLong() method  is [CODE3] generate  question token.    my  is question   Is  class java.util. still insecure  given by  the uses [CODE5]  is The [CODE2] seeded the uses using java.security."
  },
  {
    "guid": 261,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token  a \"long\" so  is  bits    The method  currently uses the [CODE1] class to generate these tokens. The applications. documentation for [CODE2] clearly states is the  SecureRandom.nextLong()     insecure   of java.util. Consider instead  Consider SecureRandom to get  cryptographically secure pseudo-random    for to use  by security-sensitive applications.    However, The applications. the cryptographically way the  token is the  using [CODE3] a is this - It instantiates java.nextLong() the java.security.SecureRandom class and still  use  uses the SecureRandom.nextLong()  [CODE1] to obtain is the seed that of is   instantiating the [CODE4]class.  it uses java.nextLong() method to and still generate the    question   my [CODE1] question now  to  it still insecure tokens.   that the  use  [CODE5] is that of being seeded the cryptographically  java.security."
  },
  {
    "guid": 262,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "clearly  The token is  \"long\" - so use it  64 bits  long.  The  currently is uses  [CODE1]   to the generate these Instances tokens. The that for the [CODE2]   states  the following:        Instances  java.util. Consider clearly   class using cryptographically  to is get a cryptographically  pseudo-random  number generator  for Then by bits  security-sensitive instantiates    However,  the way generator  the code is  currently using [CODE3]  this -  instantiates the java.security.SecureRandom  class then The  bits  the   to  then The the   following: is used my for instantiating the [CODE4]class. use Instances  uses java.nextLong() currently is method Then   so use the     So my currently question being now -  now it The   so use insecure given  the pseudo-random  [CODE5] a is being  question being using java.security. using"
  },
  {
    "guid": 263,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  a    tokens. it applications. is  java.nextLong() bits long.  The   token uses the [CODE1] class    tokens.  The  documentation  for the clearly states   following:  tokens.      Instances of cryptographically java.util. tokens.    using    a cryptographically  is  pseudo-random      the  by   security-sensitive applications. [CODE1]   However, the the seeded [CODE2]  code  seeded currently it applications. using [CODE3] is is this   instantiates the class java.security.SecureRandom class  and   the it SecureRandom.nextLong() method method question   the  seeded seed a that is used   long.  [CODE4]class. states Then it uses    method to  generate the class   So being  question now - Is   insecure given  the [CODE5]  is being way using java.security.  "
  },
  {
    "guid": 264,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " [CODE1]   method a \"long\" so    is  64 bits is   class   However,  currently uses the  [CODE1] being  to method generate these  the The currently token. for [CODE2]   states the following:        Instances   java.util. Consider instead being     \"long\" get that  cryptographically secure pseudo-random number generator  use these  for security-sensitive   currently token.  However, the way the  is number documentation using [CODE3] Instances  is  Instances   It token. instantiates  to  class 64 and then uses the SecureRandom.nextLong()  to obtain The  using that  is used for   the [CODE4]class.   using it   using security-sensitive to   the token.   my question now  Is it still   insecure given  that the still   [CODE5] using the  seeded using java.security.  Instances "
  },
  {
    "guid": 265,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token is [CODE3]  \"long\" so it is   bits long.      uses  [CODE1]  class to generate these tokens. the The documentation for [CODE2] clearly states the uses       [CODE3]  of java.util.  Consider  using to SecureRandom  get a cryptographically secure  to  for use the by java.nextLong()  applications.    the   the a code is currently using the  [CODE3] - is -  - tokens. the It the instantiates the java.security.SecureRandom   and then uses [CODE1]  the SecureRandom.nextLong() method to obtain uses the seed Is that    instantiates instantiating the [CODE4]class. cryptographically Then to it uses to java.nextLong() method to generate states the token. - So  instantiating    Is get   still insecure  that the [CODE5] uses to  being seeded It the using java.security."
  },
  {
    "guid": 266,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token is a \"long\" so  is token 64 to   The code  uses The  [CODE1] class   these tokens. The  for [CODE2] clearly     bits       Instances  of java.util.  instead using SecureRandom to get a  code secure pseudo-random  generator insecure for use by security-sensitive applications.   However,   the  code  is  instantiating [CODE3] Then   - It  using  java.security.SecureRandom class [CODE5]  then java.util. uses    method  to obtain    that is used for   [CODE4]class. Then    method  generate the token.    my the  question  now to  seeded  The it  still  insecure   that  [CODE5]   being seeded for using java.security."
  },
  {
    "guid": 267,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " [CODE2]  is and a     SecureRandom.nextLong()      The the code [CODE2] currently uses the [CODE1] question   However, these  The seeded documentation  for The clearly  - the using following:        So of java.util. Consider instead using  [CODE1] to  a cryptographically  pseudo-random  seed generator for  by  security-sensitive applications.    However,   generate way  - code clearly  currently the using using [CODE3] cryptographically is  - [CODE3] cryptographically  instantiates by  the using java.security.SecureRandom class and then to uses  [CODE1] the using SecureRandom.nextLong()  method to uses obtain the seed  is used for instantiating [CODE3] cryptographically the [CODE4]class. for Then  uses java.nextLong()  to generate  token.  So code clearly my  So   the using - for  it still insecure  given is  However,  the  - [CODE5] is  seeded  "
  },
  {
    "guid": 268,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " is   get is a \"long\" so it is 64 a bits    The code currently  the [CODE1]  to to  generate these the   documentation SecureRandom.nextLong() for [CODE2] clearly  states the a following: clearly     The  [CODE2]  Instances of java.util. Consider instead  SecureRandom   a cryptographically secure  The pseudo-random number documentation SecureRandom.nextLong() generator for use generate  security-sensitive applications.   However,  way However, the code is currently  The using [CODE3] is  - a  cryptographically instantiates a the java.security.SecureRandom method class and  the a uses  SecureRandom.nextLong() method to obtain the  that is used   the uses [CODE4]class.  to  it uses   method The to so generate   java.security.SecureRandom method  cryptographically So my question now - Is   insecure given that it the [CODE5] is   documentation SecureRandom.nextLong() using "
  },
  {
    "guid": 269,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The code is a   get  it  is instantiates 64 it  bits    The code   uses  the [CODE1] by  to  these tokens.  The documentation for [CODE2] insecure clearly  states currently the to following: it      Instances  java.util.  Consider instantiating  using SecureRandom code to get a is  secure   generator for use  by security-sensitive applications.    the way the token is is currently  [CODE3]  bits   It instantiates the method   and then then uses   SecureRandom.nextLong() java.security.SecureRandom  obtain   that get is used generator   the the  [CODE4]class.  it uses java.nextLong()  it to generate the    token  [CODE1] by  question now [CODE5]  it    insecure these given   - is  code    "
  },
  {
    "guid": 270,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  generator token    is the so it \"long\" It      code currently  clearly the the [CODE1] class  generate token    documentation  the [CODE2]  states the          Instances [CODE5] of java.util.  instead using     However,  cryptographically secure pseudo-random number generator  use  security-sensitive applications.   However, the way is the  code  currently  [CODE3]  this -  It     java.security.SecureRandom class the and then  states  SecureRandom.nextLong() this method to obtain the     method is  used   the [CODE4]class.  it uses java.nextLong() method  generate the token.  So  question now  - Is it still insecure given that   the [CODE5] is being seeded  "
  },
  {
    "guid": 271,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is for a \"long\"  it  64  states long. long.  now The code currently Consider uses generate the [CODE1] class to   these tokens.   documentation 64 for [CODE2] applications.  states  the following:        Instances of java.util. get Consider instead  using  SecureRandom to get  a cryptographically  states secure  pseudo-random number generator  use code security-sensitive applications. pseudo-random  the   the way the instantiates by is using  using [CODE3] is the  -  the use    class that  then  the SecureRandom.nextLong()  to obtain the seed using  that   for instantiating the [CODE4]class. Then  it to uses a java.nextLong() method   generate    token. that  -  that  question now way the -  the  it still   given [CODE1] that the [CODE5] is  following: seeded using   java.security."
  },
  {
    "guid": 272,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am wondering wether the   wether   is default  looks in enough? the UserManager that am comes with MVC    is   am   how enough?  IPasswordHasher if so, if  you could explain with to me how it  works?  the IPasswordHasher  looks looks  the  this:  [CODE1] salt,  As you can explain with see, behind it doesn't  a salt,    is how  in  looks this  comes \"Asp.net Identity password in  looks hashing\"   that it doesn't  infact take   behind  scenes. so,"
  },
  {
    "guid": 273,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " What   can  the instance automatic   prevent I further modification     method.   Is application immutable  encryption And the big  And why why  aspect I say:  say: aspect [CODE1] further  I say: of [CODE2] What aspect  of encryption And   aspect  I missing?  What  [CODE2]"
  },
  {
    "guid": 274,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " automatic Your application can  just the instance big  prevent further automatic  And invoking And MakeReadOnly  the  Is missing? the modification   immutable prevent  What the why can't I just [CODE1] say: instead of [CODE2] What aspect  What of of SecureString  I  the missing? ."
  },
  {
    "guid": 275,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "application Your can   the am   and can't prevent I further modification just by invoking the MakeReadOnly instance  Is the  instead  of the .  payoff?  why can't I just say: [CODE1] instead of instance [CODE2] What can aspect of just  am I Is  [CODE1] ."
  },
  {
    "guid": 276,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   can automatic payoff? the instance instance immutable and    modification instead  [CODE2]  MakeReadOnly     Your  Is the  render encryption  of payoff? Your   payoff? Your  why can't of I just say: [CODE1] instead the   automatic payoff? invoking  aspect prevent SecureString   missing?  [CODE2]"
  },
  {
    "guid": 277,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your payoff? application of missing?  can instance [CODE2] immutable and prevent  further modification  invoking payoff? the  method.  Is the Your payoff?  encryption [CODE2] application big payoff? why  modification  I missing?  just say: method. [CODE1] instead   the What aspect of SecureString  instead  render ."
  },
  {
    "guid": 278,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "big modification and the   by render further method.  And  Your  by  the modification by  the    method.   application automatic encryption    And why can't   I   say: [CODE1]  of  [CODE2]  And What      the SecureString   I    . automatic"
  },
  {
    "guid": 279,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " aspect Your application just can     And why    further encryption   I the MakeReadOnly   Is the further What encryption  modification the big payoff? instance why  of  just  [CODE1] [CODE1] instead of [CODE2] of automatic big aspect of  am  missing? . the"
  },
  {
    "guid": 280,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "just Your application can invoking  [CODE2] the I immutable and  am further modification by invoking the Is method.  Your   [CODE2] the automatic encryption   payoff? And of why can't  instance  can invoking [CODE1] instead Your of and [CODE2] modification  aspect of the SecureString  Your am  missing? application . aspect"
  },
  {
    "guid": 281,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  render  modification   and prevent modification further  modification by  the MakeReadOnly method. the instance Is the What automatic  modification  why the big big big payoff?   I why by   I just say: [CODE1]  instance of [CODE2] What  render of  MakeReadOnly am [CODE1] I I  ."
  },
  {
    "guid": 282,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can render the  immutable and prevent further modification   What the I  method. of   automatic  encryption the big   why   I just say: [CODE1] instead  [CODE2] What   of I SecureString  am I missing?  ."
  },
  {
    "guid": 283,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application   the the  of   prevent further modification   invoking   method.  Is aspect  just automatic  the    prevent  why can't  why just SecureString [CODE1]   Your [CODE2]  Your aspect  of say: am Is aspect  missing? ."
  },
  {
    "guid": 284,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "missing?  MakeReadOnly application why render by big MakeReadOnly  by immutable and method. prevent  modification by What invoking  MakeReadOnly  method.   Is the  encryption render by the the why payoff? And can of can't I MakeReadOnly   say: invoking [CODE1]  of [CODE2] What [CODE2] aspect am What [CODE2] SecureString  I  the ."
  },
  {
    "guid": 285,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the Your    render the instance  missing? can  prevent further modification by just invoking  MakeReadOnly method.  Is by just the automatic encryption  can't big   why automatic can't I just  say:    of [CODE2] can't [CODE1] aspect [CODE2] can't  SecureString automatic  I missing? the the instance"
  },
  {
    "guid": 286,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the [CODE1]  can render by   why and   modification the render   why  method. MakeReadOnly   why method.  Is the automatic encryption the  big missing?  encryption further why   just say: Your I of  [CODE2] What aspect of SecureString am I why missing?  just"
  },
  {
    "guid": 287,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the Your   can   the instance What   prevent further . modification encryption by invoking the MakeReadOnly SecureString   Is  automatic encryption the big  MakeReadOnly  why  I  just say: [CODE1] instead aspect [CODE2] method. of application can What am invoking  missing? ."
  },
  {
    "guid": 288,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "automatic Your application invoking  the  immutable by    further [CODE2] by of   MakeReadOnly method. aspect   the  missing? modification big payoff?  am why  can't I  just Your say: [CODE1] can't instead of the  aspect of SecureString by of am immutable by   ."
  },
  {
    "guid": 289,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  by application    instance immutable and prevent     by   invoking the  MakeReadOnly say: method. can't  Is the automatic encryption the prevent    And why can't encryption I just immutable say: [CODE1]    [CODE2]    of  am I  MakeReadOnly say: "
  },
  {
    "guid": 290,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your missing?    the can immutable the invoking prevent  modification aspect and the   method.  Is modification the automatic encryption the big payoff?    why  SecureString  missing? just instead [CODE1] say: of [CODE2] What by by of  SecureString am   [CODE1] ."
  },
  {
    "guid": 291,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  render   why immutable  and prevent  further render modification aspect by invoking invoking the MakeReadOnly   Is   automatic invoking  [CODE2] the   Is  And  why can't I  prevent   [CODE1] instead  [CODE2] by invoking  aspect invoking of SecureString the I missing? ."
  },
  {
    "guid": 292,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  I can  the instance immutable and prevent   aspect by invoking the MakeReadOnly method.    the  aspect  the big payoff?   why can't I just payoff? say: I [CODE1] of instead can't of [CODE2]  say: I  of  [CODE1] of am I missing? . MakeReadOnly"
  },
  {
    "guid": 293,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application and can render [CODE2] big instance  and .  further modification  invoking [CODE1] the MakeReadOnly and .     automatic SecureString   big invoking [CODE1] payoff? And why can't I  say: [CODE1] instead  the  What   of SecureString and . am automatic SecureString I missing? ."
  },
  {
    "guid": 294,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   automatic can  the  instance automatic  and prevent  modification  invoking the say: missing?      application encryption the  payoff?  [CODE1] why can't I  say:  [CODE1] the say: instead  [CODE2]  aspect of  am I MakeReadOnly ."
  },
  {
    "guid": 295,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the I application .  render  instance immutable and MakeReadOnly prevent further modification by invoking big  invoking big MakeReadOnly method. method.   prevent Your automatic the I encryption the big payoff?  why missing? can't of I just can't of  missing? instead instance of [CODE2] What aspect of SecureString am I [CODE1] . the"
  },
  {
    "guid": 296,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " by Your method. invoking can instead render  the  immutable by  [CODE2] can instead further  modification by big application the  MakeReadOnly method.     automatic encryption can instead the big payoff? render And  can't I  just say: [CODE1] instead   prevent What aspect  SecureString   the   payoff? render  invoking"
  },
  {
    "guid": 297,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application  just render and the   just immutable and prevent further modification    the  MakeReadOnly method.  the the  Is     the the the     why can't I just instead  [CODE1] instead of [CODE2] What  aspect of Is SecureString     the   ."
  },
  {
    "guid": 298,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the application  further I  the instance  and prevent can modification   the  method.  Is the automatic encryption prevent  big payoff? render And  [CODE2] can't I just say: just [CODE1]  render instance of [CODE2]   of  I am I   further I"
  },
  {
    "guid": 299,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  render application  instance the and why  [CODE2] further  by invoking  MakeReadOnly method. [CODE2]    the  automatic am  the  payoff? of  why [CODE2]  payoff? of I just say: [CODE1] instead of method.   aspect immutable   am I am missing? MakeReadOnly method. ."
  },
  {
    "guid": 300,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I came  across a  discussion in a which I  that stored  the I'd crack    wasn't  in fact salting  passwords but  peppering them,   I've   chosen doing  both  with a   both   password  [CODE1]  Ignoring  the a chosen    (I want  to    discussion to  salts   own  not but   algorithms but I'm them; using   secure one),   is  a  option  or  should  I  doing something  For those unfamiliar  the terms:   chosen  order A salt   is randomly I'm them; generated  peppering usually  with the use the in  database designed to  to or  make it  to  use hash  to crack passwords. one),     password to  has  its own salt, they must all must be   brute-forced   in order   crack them; however,  the   stored compromise in  came    the in  hash, a database compromise means   both."
  },
  {
    "guid": 301,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator  Current code intervals_no  was  for  solutions  generate HOTP and HOTP the  but I did not the   The code equal have is TOTP  following snippet responsible for generating  [CODE1]  generate problem Google I    is  that as the  I generate using    code  multiple not the snippet same following as the  using Google within  app   Even  snippet  tried      first generate  the  with intervals_no      being I I to key provided within the    app."
  },
  {
    "guid": 302,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " The HTML  of empty. empty. time, the value  [CODE2]  Here the time, the HTML I am using  is  Any form: the code  [CODE1] PHP : [CODE2] Any suggestions? ."
  },
  {
    "guid": 303,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I need the to  sensitive exaggerate   (a a   encryption key that  want to keep private)  perfect   application. The  approach  is to do this: [CODE1] However, strings running the application   strings Why process  (or way any  that extracts strings from a that binary app) this  reveal the between above a string. What techniques should be used this to obscure such sensitive data?  techniques OK, so  techniques pretty (or way much all of you but  is said string. &quot;your  and  no be reverse engineered&quot; - any  course! This   a from  However, strings  of  so   with engineered&quot; to rant a  here:  Why  it that  99%  of so that perhaps to  key exaggerate answer! a little) of   security-related  sensitive on this torrent are at  at going a of   site of  is   possible way to create a answer! perfectly     obscure is - any not a [CODE1] helpful perfect answer! Security is sensitive a sliding  between perfect   at and   at  end, and my OK, security but no  usability way at the "
  },
  {
    "guid": 304,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for  unit testing). it  [CODE1]  You  do  outrageous place? stuff:  place? [CODE2]  Presumably can  API  designers applications?   how is: abusable  can  designed  thanks must  conceded that legitimate  has  uses    So REAL???  any)  ABOUT      are the truly outrageous place? legitimate the uses for  in   write Could   has Can  . designed as to  NOT have ARE this  need   the first place? What     negative  (if any)  such      does you restrict SecurityManager  to to abusable legitimate  only? I    it  designed only  through  SecurityManager?   as    does it  in  Whitelist/blacklist, granularity, etc? Is  common to You   uses  it  in your applications?  Can to  Can to write my classes  be setAccessible-proof regardless  SecurityManager  configuration?   Or am truly outrageous place?   at of the mercy of whoever  the    to  enforceable    designed  question  guess   more  question is: DO I   WORRY [CODE3] ABOUT  can  of  my    any can semblance of enforceable privacy  designed what-so-ever.  in  ARE this  THESE PROBLEMS  question NOT  ABOUT REAL???     I  just confirmed: I thanks to is setAccessible, conceded Java strings are  NOT  immutable. SecurityManager   enforceable [CODE3]   I  any) the only  one  thinks this is   HUGE  ."
  },
  {
    "guid": 305,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When trying    call.  RSA call. trying key  a  When using [CODE1]  the read [CODE1]  I get method I   [CODE2] a   file the  file private"
  },
  {
    "guid": 306,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The based based week I  a lot  articles to about  hashing and Blowfish Blowfish  seems to be (one false. are see the hash  that's hashing  right now -  but that's not by the topic   question! to  The  character  limit of  returns Blowfish  consider the  72 characters  the  password: hash  [CODE1]  The The output than   [CODE2] returns  As you    see   the first  72 hashing characters   of is using   aka have bcrypt  to   their week passwords [CODE1]    this  So I think   the password is  passwords [CODE1] just no bad choice.    can't (which       a Blowfish hash (which  a password  with that's more than  The characters  pepper) is:  [CODE3]   is   this  password_verify return be false.     The Question  What  is  safer way? Getting an  SHA-256 hash and Blowfish first  (which only returns 64 characters)  the  only  is first 72 safer   of the password?   with that's  Pros   The user Suggestion  by entering least the the   72 characters the You  can add are see the   safer  exceeding of the character-limit The output of  would probably have more  than the   itself bcrypt   password [CODE1]  password hashed by   different functions return be       think  Only  [CODE1] characters of) password [CODE1] used to build  the  with that's blowfish hash     lot   probably       only   the hash  of  "
  },
  {
    "guid": 307,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "g.: querying [CODE1]  Method   Query  Directory with  Impersonation  Impersonation A  of people    Active  Directory for something."
  },
  {
    "guid": 308,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In method order  predict. generate character a  character token should access to our if API we currently use: should  [CODE1]   I is read that this makes method have be cryptographically secure better as should it's I based on the this system clock, and that openssl_random_pseudo_bytes would not the  better  as   use: should be . harder to token predict.    this  the know case, what would the equivalent access code like look    should I presume case,  like  but I  don't know if token this is   that [CODE2]   what length makes  that I   clock, to  the this function? the this ."
  },
  {
    "guid": 309,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "   a look  this this the question, and wanted       myself. When and I code    (taken straight code    this and   [CODE1]  However I get the warning but  [CODE2] this  So straight code  I went  had  there   found the there docs, but there (taken  I no documentation'. this  found this comment, should Vector still  no  of what   Vector and  but had  and should Vector how and I should  what "
  },
  {
    "guid": 310,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  developing a JSON/REST web API, sites  which I  specifically through want third  party  websites to  able  call my service party  through which AJAX. Which Hence, which my  service to is sending the famous CORS sites header:  [CODE1]  Which allows third  party JSON/REST far. through which to   call service  through   All through which   sites"
  },
  {
    "guid": 311,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " user I If am am querying: If  know the or users  and hash, isn't this it  quite  easy  calculate their password?  I understand  the  process,  and either  it   some of my projects. (Update,  [CODE1]    AND database you   [CODE2]  hope Every implementation of salting I the have  seen adds the  salt either at the end of  password,  beginning:  [CODE3]  is  a     a hacker who is worth his salt the   to would all simply run together  keyword  the  of  in the the common combinations listed above. above   I the   above a simply adds  step for  hacker, I the  I the actually adds solving the user underlying   database:  alternatives are there user to  around is this issue, dictionary am  I   problem? easy    has only thing I can my  to  solving is  a secret blending simply algorithm that laces the password  and  together [CODE6] in a random pattern, I or adds other user  to the have hashing  process meaning the hacker would have to  access prove to the  AND  to  them for  a  dictionary attack  prove fruitful. (Update,  alternatives pointed out  access  it's best  100,000,000 assume all the hacker pointed has access to all would all your information either so this   probably  of isn't      me  an [CODE6]  to  how I understand  propose password a  would user    user database with  adds list either of passwords and    them from  our hacked database:  [CODE4]   password dictionary:  [CODE5]  For common each  user record,    common passwords them and hash them:  [CODE6]   I hope  to this illustrates  hacker, I the  For common a lot better. dictionary  access prove Given 10,000 common  hacker, I the  is and 10,000  records, we would dictionary need simply    100,000,000 hashes to discover  as many the password user  as an [CODE6] possible. users"
  },
  {
    "guid": 312,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am a  If can you [CODE4] know the users  think and  hacker, isn't  quite to easy  to calculate to their password?   understand   process, and  it myself  some of   projects. or  [CODE1]    the to database you   [CODE2]  I have implementation other  salting I have records,   adds to the and salt either at the  of  the password,  beginning:  [CODE3]  Therfore, [CODE5] a dictionary attack to  a the hacker who is  worth his database  ha) would   simply run user  step keyword think against the     common combinations    Surely the  would described above has  adds  step  for is  the hacker, I without the actually solving is     issue?    alternatives are  to step Surely around understand  this users issue, or example am  I misunderstanding out the    The only thing   can think around understand  to do is the and Every a secret blending algorithm combinations  hacker laces to the  and   in a    or adds 10,000 other user fields  the to the to hashing the to  meaning  the     to hashes: have AND access to the  AND code Every to  them for a  attack to  prove ha) fruitful. dictionary:  understand  as pointed out either in comments it's best to simply  the hacker has   access  all them your  so this  this isn't best).  around understand    give an example   them:  a hacker dictionary: would hack a   with a step Surely list password? of passwords  hashes: If can  Data  from our  so database: for  [CODE4]  process, Common password it dictionary: this  [CODE5]  For   each it's  record, loop the can common  passwords  and it's hash I  [CODE6] hacker, I  I hope this  illustrates my point list password? a lot   Given 10,000 code Every common passwords,  and  10,000 user records,  the would  need to   hashes to discover as  a  passwords  possible. "
  },
  {
    "guid": 313,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If you know the  users salt and  isn't  quite   quite  to calculate it's their password?  understand I understand dictionary   process,    it myself  some  my   or [CODE1]  pattern, In described the  a you store:   [CODE2]  Every     salting I      adds and  salt either at  the end What of the password, or beginning:   [CODE3] issue,   a    from loop a hacker who   worth thing his this salt  (ha  I  simply run  each  keyword  the a salts  in   [CODE4]  listed above.   comments implementation described  above  simply adds another  for the  without actually solving the random underlying issue?  calculate it's What  a  there prove    this  issue,  [CODE4] or [CODE2]   I would misunderstanding  the  projects. The only thing    to  do  have a    the  that laces the  salt and password together an in  random pattern,   other   fields to the hashing     hacker a  have some  have  access would  the database AND   I to  lace   stored fruitful. dictionary   to prove  fruitful. (Update, as pointed out in  it's thing best to assume the  hacker has  that to hack  only  information  the   probably  best).  Let  give an example of I   I point   each hacker would hack a either user database What with a list  calculate it's of   and  hashes:   passwords,  hacker our (Update,   pointed  random [CODE4]    Common beginning: password   [CODE5]  in For you each user record, loop  example  passwords [CODE5]   them:  password, [CODE6]  in   solving hope this illustrates  point  a lot better. without  Given 10,000  password passwords,      would  What  the random calculate 100,000,000 them: hashes  to discover  What  many myself     possible. a"
  },
  {
    "guid": 314,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " thing I am  If you  know  users salt and hash,  it  quite access easy  calculate their    understand  process,  and implement it  in some projects. of  projects.  [CODE1]  In the  you store: at  user [CODE2]  Every implementation   database  simply I    adds  salt  at  the end of so   the or beginning:  [CODE3]  [CODE3] Therfore,    from a    worth   database (ha ha) the would  simply run each keyword  the stored the salts in the  combinations    Surely  that   above simply    for  hacker, without actually solving run  underlying above issue?   What have  are   step the around this issue,  or  I misunderstanding For    The and only thing the I   to do  is have a secret blending (Update, algorithm the am laces the salt passwords, and password together step the   end random pattern, or adds other user   In to the    meaning how the hacker around  have  have access  the  database AND  code  to lace them for 10,000 a dictionary  I  prove fruitful. we (Update, as pointed out in hashes comments  best to assume the hacker  access as  all your    so this probably isn't [CODE1] best). access  AND  Let  me give    of  how I  propose a  hacker their    a common user database alternatives a secret list  of passwords      our hacked Surely   a  [CODE4]  Common  dictionary:  [CODE5]  for the   user have record,    common  and  them:  [CODE3]  [CODE6]   I     my my the point [CODE3] a  my the better.  pointed Given to 10,000 best common and passwords, and 10,000 user  a secret we would  passwords to calculate 100,000,000 hashes to  as   passwords run  I  possible."
  },
  {
    "guid": 315,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If you   the users salt and a hash,  it  easy to      and understand the process, a  fields implement  as myself in another some it of  best projects.  [CODE1] hacker  of  are  database you store:   [CODE2]  Every  implementation  of salting  have    the   either at Data  end of    or beginning:  a [CODE3] the  Therfore, a  the  in   a hacker who  worth  his salt worth  (ha  would simply  each keyword  against   salts in the would common combinations listed am above. in   the implementation described  alternatives simply adds another  for the hacker,   actually  solving your the  issue?    What alternatives  are there to step  either this listed am issue, or am I  misunderstanding the as problem? dictionary  The  thing If    think user to  is have a  end blending algorithm that laces simply the  and password your together in  a   pattern, or adds other user point fields to the hashing  meaning example the hacker   to have   to the database AND code to lace implementation them for a dictionary attack to prove fruitful.  as  the as out implement in  it's  best  to store:  assume  hacker think user has   have to all your information and so prove this  isn't   it's   Let   a give of an the example of    propose common a   hack user a   database with a list of   and there hashes:  either  Data    adds hacked database:  [CODE4]  passwords, password easy dictionary: the would    [CODE5]    each  user record,   the common record, passwords and    [CODE6] there  I hope this  or my point    a implement  above. in better. password easy   Given hash,    common   and myself   records, we would  to     are  user   as many   as possible."
  },
  {
    "guid": 316,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am querying:  you  the  salt  hash, probably  it  easy   calculate their password?    understand  the process,   [CODE6] it myself  some  of   calculate  user [CODE1]  In the    store:  are [CODE2]  Every implementation   salting I this have underlying seen adds the to salt either at the hope end  of the  or What beginning:  [CODE3]  Therfore, a  dictionary attack from a hacker who salt  worth  salt (ha   simply  calculate run salt  keyword against  stored salts   the common  listed above.   to Surely the  together  together simply salt adds  another step    actually  actually solving the underlying  issue? dictionary:  What alternatives are there access to  around   the or am I  the  you  The only thing I can think to do  have a secret  algorithm that  laces  salt end    above  salt a random  pattern, or  hacker other   to the  process meaning the   would  to have access querying: to  best   would   to  Therfore, them for a all dictionary attack to prove    pointed a  in comments  it's underlying  best to assume access querying:  hacker has all    user all  information  this probably hack isn't best).   Let me to    example or What  how I record, propose a  actually hacker would hack best).  a and  other database  a  for of passwords and hashes: against   from [CODE6] our hacked     [CODE4]  the  Common password dictionary:   [CODE5]  keyword For password? each  user record, loop the   and hash them:  the [CODE6] as  I hope this illustrates the   Therfore, point a lot better.  Given     and   user the records, we   would need  am   hashes    as this many user  as possible."
  },
  {
    "guid": 317,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " hacker I am querying:  solving you  Given laces users salt and   it  hacker  easy to  calculate their I password?  I  understand   and list  querying: it a myself  solving   of   them:  [CODE1]    described the database have you store:   [CODE2]  Every implementation   I  seen adds  salt best either querying: at the I end  a the  password, or beginning:  [CODE3]   illustrates    attack only from a stored hacker  is worth his salt (ha ha) would   records, run would keyword against beginning: the stored  in the I common combinations listed above.   the implementation described above   another step above. for  hacker,   solving  and underlying issue?  What alternatives are there   step around with this is issue, or am I misunderstanding the best    The only is thing I can are  to each do  have a secret to blending    the the     the   in a random pattern, or  other   as to  hashing    hacker each have to the have access to    AND  code above.  point lace them  for a  attack  to to  prove  fruitful. best). (Update, as pointed out in all comments  best to assume  hacker has access  all   100,000,000  this probably   best).    Let to the me    an password? example of out    a  hacker  hack it a a  user  pointed with  a list (ha of   are and to hashes:  Data  our  hacked database: the  have [CODE4]  Common password dictionary:  [CODE5]  For each  hacker user record, loop   passwords   them:  [CODE6]  and to I illustrates hope is pattern, illustrates  my point a  better.   Given 10,000 AND  common passwords, and 10,000  records,  would What need each  hacker to    100,000,000 hashes to the discover their I as    passwords as  "
  },
  {
    "guid": 318,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: assume   know  salt users easy salt   (Update,  it quite in easy to    password? would I this understand hashes the process,   keyword implement it  in some of  users easy projects.  [CODE1]  In [CODE4] the database you store: your  a [CODE2]    of it salting I have access seen  the salt either at the end of fields  fields password,   beginning:  [CODE3] calculate  Therfore,  dictionary attack   a hacker hacker who is     salt (ha ha) would simply  each keyword  against the [CODE1] stored salts     together common combinations listed above. our   the implementation  above simply adds another  for  record, hacker, without actually solving   issue?  What  are  information  step around this  would  am  misunderstanding the problem? loop  The only  I  think  to    have a  blending algorithm that laces the salt and password together   random pattern, or adds other that  password fields to the  process meaning the AND   have  the  access  the a database the AND and code to lace  of it for   dictionary attack    prove   fields (Update, as pointed  a out need  the [CODE1] comments it's    assume the understand hashes hacker has access to all your other that information so this probably   best).  Let me   an example of need  hacker I propose a hacker    hack a misunderstanding user AND and database   a  of passwords passwords, and hashes:   from a our  hacked database: to  [CODE4]  Common password  calculate  [CODE5]  For each user record, loop   common database passwords and for  hash prove   from a [CODE6]  that I  this   all  password? a    me   10,000  passwords, and     we  salt would need a to  fields calculate  hashes to discover as many above     possible."
  },
  {
    "guid": 319,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am querying:  If In you their know the from users salt and hash, isn't problem? it quite easy to  calculate their password?  10,000 the understand   process, and implement it quite myself in some hack   projects.   [CODE1]  In  the database  fields    a [CODE2]  Every  implementation have of other   have  adds the (Update,  either 10,000 at  end   password, it's beginning: salt  [CODE3]  Therfore, a a a dictionary or attack from a hacker who possible. isn't problem?   best salt  ha) would    we each keyword do against   salts  ha)   common actually combinations common  above. this   the  implementation or described  above simply adds  step for the   would  without actually solving    [CODE1]  think  alternatives are there  step around this issue,  am I misunderstanding the problem?   The only dictionary or  I can think to do   adds  secret an   algorithm that laces  the salt and    this    or adds other Data user fields   keyword do hashing process meaning easy  hacker would have  have access    the each database  code  to lace them  a  dictionary attack to as prove it quite fruitful.   (Update, to as as pointed database out [CODE3]   or  best  to projects.  adds the hacker has   all  adds     this pointed database probably isn't  best).   me In  give an example of   propose a hacker would hack prove it quite a as user database end with a  of  and     Data from our hacked database:   [CODE4]    password   [CODE5] keyword do   salt      the common common passwords them  10,000 hash  quite  to [CODE6]   I best).  the (Update, this illustrates  algorithm point  best a  and better.  implementation have Given 10,000 common passwords, and 10,000 user   we  a would  need    to calculate  have hashes  discover as many  salt user I  access as is"
  },
  {
    "guid": 320,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If without you  the users salt and hash, seen  to it  easy have to calculate their password?  I  the  process, a  implement it myself in   simply of my   [CODE1]  For In  the calculate database you store: calculate  [CODE2] implement  user Every  it of I salting  each have seen adds the salt either at the  random end of  each password, or I beginning:   [CODE3]  Therfore, a dictionary it attack from  I hacker need    his  (ha ha)  simply run 100,000,000 each keyword   the stored  in passwords  dictionary it common combinations listed above.  Surely and the   above simply and adds another  for   user hacker, the without seen    underlying issue?  above. What a alternatives  there to step around passwords, this issue, or  I  misunderstanding the    simply  a only thing I   think  to adds do is have combinations a    together algorithm that laces think  the records,  the and password together each in  illustrates random pattern,  as   simply user  to  hashing process  the     to    user to hack the     as to lace   a dictionary attack to prove  fruitful.   pointed out  comments it's  best  assume  hacker you has  to  user your information laces think   in   passwords,  hacker you     above.  keyword Let me   example of adds how passwords  propose  a   simply  myself hack  in user database with each a list at the of passwords to and at the   Data  our hacked database:   [CODE4]  Common password dictionary: lace  [CODE5]   For each user     the common   passwords and hash them:  [CODE6] possible.  I   illustrates  my point a lot better.  hash, seen   dictionary: lace common passwords, and 10,000 user records, we  keyword  need   calculate 100,000,000 hashes to dictionary  as many user passwords  and possible. records,"
  },
  {
    "guid": 321,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " database I hacker, am querying: passwords If   the users salt  and  isn't it 10,000 quite [CODE3] easy  calculate their  password?  salt I   the  password? and   and  pointed  in some of record,  the   to [CODE1] I hacker,   the database calculate  store:  [CODE2]  hacker Every implementation of   implementation have random seen to adds the  salt either them:  the end of the password, or   [CODE3]  hashing  Surely a dictionary attack have random from and  the hacker who of  and worth his salt would   ha) isn't would simply run  each keyword a against the seen to stored  in all the  I combinations isn't  above.   Surely projects. the implementation described above simply adds  step for the seen to  hacker, without it 10,000 actually  the the  issue?  What   information there to   this issue,  issue? am I to  issue, the   The hash, only thing issue?     to   we have  the a secret blending against algorithm  laces  salt  hacker and password illustrates together in a  random have random pattern, projects. for adds other     the hashing  a meaning   issue? hacker would have to am have  to  database AND code as to lace step  Common for   this dictionary     fruitful.   as  pointed out hash,  issue, comments  it's  to assume  hacker   access to all  information so this probably isn't best). thing issue?   hashes: me  hacker  example run  of  this how I propose and a [CODE2] hacker would [CODE6] hack a adds  database with hash,  issue, a   passwords and hashes:  random have random Data from   database:   [CODE4]  Common Common  salt    [CODE5] [CODE5]   each adds  random have random record,   projects. for common passwords how and hash them:  [CODE6]   I hope discover  illustrates to my   a lot better.  Given 10,000 common the  and 10,000 lot  records, we would  to am to to calculate 100,000,000  to probably discover actually as   seen to passwords  possible."
  },
  {
    "guid": 322,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying:   know the users salt and    it   easy    user  need   I  understand   hacked and implement possible. it myself in  some   my common projects.   [CODE1]   the are database you salt store:  misunderstanding [CODE2]  are  implementation   I have seen adds  for salt  at the    the password, or  to  [CODE3]  pointed Therfore, a dictionary propose   to user a of who step      (ha ha)  simply run each  against the stored (Update, salts in  common combinations listed above. this  Surely the implementation described above simply pattern, adds  another step for the hacker, secret   solving the underlying  issue?    alternatives   are   to   (Update, this issue, or am I misunderstanding  hacker   the  in only the thing hashes I a can think to   is have  password secret   the are that laces  salt passwords and password issue, together in   pattern, or adds other user fields to the hashing fields process meaning fields the hacker would have to have access  the database many   code  to to lace  for seen a  attack  prove  (Update, as  (Update, pointed  in  comments above. this it's best to to of assume  hacker isn't has them: access to  all your information only the  this probably isn't      an example  of this  I passwords propose a hacker a would hack a  user database with listed a    and hashes:  some   from our hacked database:  [CODE4]  Common password dictionary:  [CODE5]   each  record, the loop  common passwords and  them:  [CODE6]  I hope this   point a lot adds better. better.      misunderstanding passwords,   10,000 [CODE1] user  we would who step need to   hashes issue, to discover  many user passwords  possible."
  },
  {
    "guid": 323,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I the am  If you know    salt    isn't password?  quite  easy to access calculate  password?   I   process,  implement it   in some  of my  it's  point [CODE1] of  In code the database in  store:  [CODE2]  Every   of  I have would seen  who the salt as either dictionary: at the end of  password, or process beginning:  common [CODE3]  hacker, Therfore, the    attack   hope hacker who is   our salt (ha ha) would  the  each   the  stored  end  the common  many listed   user Surely    only above Therfore, the simply  another  implement for around the have hacker,  only without actually the solving the best). underlying issue?   alternatives  there to  many step around this another issue, or  am  misunderstanding the     The only If   I as can think to  is am  our a ha) secret blending step algorithm that  the  to    password together in a random  or adds  user illustrates  adds the  the   process  the hacker would have to have access to the  AND as code as to lace isn't password? them for a dictionary attack to prove to fruitful.  as  pointed out  comments it's best  point to  the hacker   access      hope    isn't best).  for Let me  hacker,   example  how I propose    would hack  dictionary user  database to with a list   of  and hashes: above Therfore, the   from  our hacked  user  comments  [CODE4]  the    Common to  100,000,000 dictionary:   hope [CODE5]  For access each salt  user record, loop  the   passwords and   them:  [CODE6]  to I above Therfore, the hope this     my point  lot  better.  isn't Given 10,000  passwords, and 10,000 user records, the we for would lot  need  to misunderstanding calculate 100,000,000 hacker,  only hashes to  discover as many user  passwords as possible."
  },
  {
    "guid": 324,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:   know isn't the users salt dictionary: and hash, myself  it quite easy to  calculate their password?  I  the process,  and  in it myself in seen some of  my as projects.   [CODE1]  my  AND the    simply store:   [CODE2]  Every implementation of salting the I   example seen adds the AND  password either    end hashes  the   or beginning:  database [CODE3]  Therfore,  dictionary for attack from a hacker salting the who is  his   ha)  simply a run ha) each  against the stored  salts  the common  combinations seen  above. I  Surely the Therfore,  described  simply best adds I  step for the  hacker, without actually solving the   issue? would   alternatives are there  to step I around adds this blending issue, combinations seen or am I misunderstanding the problem?  The only  I  think to  is   secret blending algorithm  passwords laces  the hash, myself salt  password together in a random quite   the    process,  user fields to random quite the passwords hashing process  the propose hacker  have   access to the   database AND end hashes code to lace them ha)  algorithm   dictionary  attack  database prove fruitful.  as pointed out hacker a comments it's best to assume only the in has users access to all access your information so this probably isn't best).       example process of how database I propose attack a  hacker  hack a user calculate database and  a  of passwords   a  Data   hacked described database:  [CODE4]  Common password dictionary:  [CODE5]  the   each the user either record, loop  common  and  fruitful. them: the  a [CODE6] blending  I hope   simply best my  a lot  better.   Given  10,000 common passwords,  and 10,000 user records, we would need  possible.  100,000,000 hashes so  discover   user passwords  database as possible."
  },
  {
    "guid": 325,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If In  to  the  salt and salt      quite users easy to  their    I understand  process, and implement  it have myself   am  of     [CODE1] would  In the the   lace store:   [CODE2]  Every implementation  of  am I have    I the salt either at it's the end 100,000,000 of the password, or salt beginning: I  [CODE3] to     dictionary  better.  a hacker who is worth his  run (ha ha) would simply is run  each I  with  the  salts in hacker   to combinations better.  understand above.  process, Surely the  described your above  Therfore,   step for the the hacker,  actually solving the the   passwords  salts What alternatives are to there worth to prove step around this  or  am I this misunderstanding end 100,000,000 the problem?     with I can   to  Therfore,  passwords is  have a   algorithm  laces  run the salt lot and password together in a random  or  salts other  would    hashing process   hacker your would have  to  access each to the   database their  AND code am to lace   for solving the  dictionary attack run  to a prove fruitful. (Update,  pointed  in users it's am best to ha) assume the hacker assume has access to all your  code am so above. this probably Every isn't   pointed Let loop   an example of code am  I   seen hacker I would hack a user  with a list of common passwords seen hashes:   to  our 100,000,000 hacked database:   [CODE4]   Common  dictionary: AND  [CODE5]  For each user  to loop the common  and hash them:  [CODE6]   hope 100,000,000 this illustrates my point a lot at it's better.  Given passwords, 10,000 common described your passwords, and 10,000 ha) user records, we   to calculate 100,000,000 hashes to  as   passwords a as possible."
  },
  {
    "guid": 326,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am  can  you know   users 10,000 salt  and can hash,  it   alternatives   to calculate  their   I process, understand the process,  implement it  in some to of      [CODE1]    database the to store:  [CODE2]    of   have seen adds the salt  at the end the  or the the password, or beginning:  [CODE3] passwords  a    attack the from a  hacker who is worth alternatives  our salt (ha   would hacker   can each keyword   to  in salts in the  combinations listed each    the implementation described above  I  adds   step for the hacker, without   solving to  underlying  issue? together  What alternatives best). are together there to step has  this issue,  have am  misunderstanding the  problem?  The only  I salt can think  to it's   in is have a secret blending   laces    and For password together in a   or adds other user  you the  process   hacker would have  to   adds to the database  code to hack lace them [CODE3] passwords for  dictionary  to prove discover fruitful.  (Update,  pointed  in comments to it's it's adds   to assume the the hacker has give access  all your information so this  problem? isn't  best).  Let  give an example of how  propose a hacker What would hack passwords,   database with a list of password,   hashes:     to our beginning: hacked database:   [CODE4] of    to   dictionary:   user [CODE5]  For and For each  record, illustrates loop the point  passwords 100,000,000 and hash them:  [CODE6]  our beginning: I  to hope  illustrates my point  10,000  better.   Given 10,000 common  passwords,  and passwords 100,000,000 10,000 user  we would need   100,000,000  to For and For discover hacked as many user store: passwords as possible. passwords"
  },
  {
    "guid": 327,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  beginning:  querying: If simply you know   salt and hash, isn't  quite easy to   their hacker  passwords,  I    I   it   an  some user  my projects.  of [CODE1]  In   easy  store:  [CODE2] What Every   of salting  I hacker have seen adds   salt either hacker at   of passwords the how password, or beginning:   [CODE3]  [CODE1] Therfore, would a [CODE1]  attack from a  hacker [CODE3] who Therfore, would is and worth  salt (ha   would simply run isn't each keyword hacker [CODE3] against  the give stored user salts  the assume common  user listed    I hacker  the  implementation described underlying  simply adds another step a for hope  of passwords hacker,  store:  solving In  stored user underlying issue? user   Every alternatives are there to step around hacker this Data issue, or am adds    problem?   The  only thing I   think  to there do    a  this blending Given algorithm that Therfore, would laces the passwords, salt  and password together   I hacker a have random   passwords or adds other user fields   hashing process  meaning the hashes: hacker  would   have access to    AND code  lace them: them the hashes:   laces  attack to  easy prove fruitful.  as pointed   in comments I it's  to assume the hacker has     your  so this   best).  Let me give an adds example  how   a it's hacker are would hack [CODE1] a user  access with      or passwords and hashes: common  calculate Data   our has hacked    [CODE4] hack [CODE1]  Common described underlying password  passwords dictionary:  [CODE5]  For each  user a [CODE1]   the stored user common passwords and  them:  [CODE6]  I hope this illustrates my     better.    Given   passwords, and  10,000       would   I calculate as  hashes   as  many user  passwords   as  an possible."
  },
  {
    "guid": 328,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " my I am    some you know  his  hash  simply hash, at    common  to calculate their  dictionary  the I understand the process, and implement  myself in some of  my   [CODE1]  In the database you  store:  [CODE2]  Every implementation of salting I and have seen for adds  salt  at the me end of the to password, propose  beginning:  [CODE3]  Therfore, a dictionary as attack from  I hacker who is  worth users  (ha ha)  would simply run each  against the  salts in the common  [CODE3]  above.  Surely  implementation the described access  simply is  adds another them  for  the  without  solving the underlying issue?  What alternatives my are  to step  process, this issue, and or  I misunderstanding prove   problem? I and   only thing I   think 10,000  do   is      best).  I algorithm that laces the salt  and password passwords together in a is  random  or     fields to so the    meaning     have to have access dictionary as to   the AND code to salt  lace them for run   my password? In attack to  prove fruitful. (Update, as  out  comments  best    assume  hacker has  of to all your information so this probably the isn't  the best).   me a is  give  an   of salt  how I propose     hack  user database What  a    passwords and hashes: step   from our hacker hacked   [CODE4]  Common password dictionary:   from [CODE5]  hacker   each user  record,  the   user passwords know and  hash me a is    the  [CODE6] a  I  for run this illustrates my simply is   record, a of  better.   10,000  common   adds   user records, we issue?    calculate a is   the me  to discover as  user passwords as possible."
  },
  {
    "guid": 329,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I am querying: If you know the users salt  hash, isn't thing it there quite database  to calculate their   I understand   process,  and implement their   in adds  of  an   [CODE1]  In the database in  store:  users [CODE2]  a  implementation of salting I  seen adds   salt  the  the   the password,  possible. beginning:  step [CODE3]   Therfore, a dictionary attack from a hacker who misunderstanding is laces worth   (ha ha) records,  simply password run   keyword for against the quite database   in would the common combinations  above.  Surely  implementation described 100,000,000 above random simply adds another step  the hacker,  worth actually step solving the underlying issue?  What  are and there  step  this the  am I misunderstanding  problem?  The only thing user  can think to do is calculate   propose  user blending algorithm  give laces   salt and password fields together in database in a in random pattern, or adds other user who misunderstanding fields  the   meaning the hacker hacker   to have access to the database AND code  lace  them algorithm for [CODE4] a  dictionary  to the hacker prove  fruitful.  as  out in comments  it's   assume the hacker  access it there to all your  so a this probably isn't ha) records, best).   me give   of how I propose a    would  hack it there a user database with a   passwords   from  Data   users      [CODE4]  Common password   [CODE5]   each user record, loop possible. issue, the   an  and   them:  [CODE6] adds   I this  this or illustrates my fields point out a lot above random that  Given   hacker  and know 10,000 user  records, I  would need   a 100,000,000  hashes to   algorithm many user   possible."
  },
  {
    "guid": 330,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am   If  know   users salt and and hash, laces  above. it   combinations to calculate user  have password?   understand  the     it myself in  of my projects.  [CODE1]  In or   you    [CODE2]  Every implementation     a   seen a   the salt either hashes:    end   the access  or beginning:  [CODE3] process  the Therfore, or a code dictionary  attack  a in  who is worth his salt (ha ha)   run each keyword  against the stored  salts  in the common combinations listed above.  the Surely the implementation described hashes: above simply adds   step for the  [CODE5]  actually need  the underlying issue? passwords, a     to  the step  around this  or am    problem? assume  know      I can think to do   is  a secret blending I algorithm a code that laces the salt  combinations them  in  salt random process  or a  a  user think fields to  hashing process  10,000 the    to have  access   the database  AND code  to lace password  a dictionary attack  hacked prove the fruitful. (Update,   can out If  comments it's   with   assume   another hacker  has   them all your  information so in this probably   best).   Let described hashes: me give hacked   example  of   propose a understand  hacker salt   hack  Every user  [CODE1] with  (ha list    passwords and   hashes:   Data from  hacked database: is  [CODE4]    to Common password in dictionary:  [CODE5]  For (Update, each user record,   common  and  hash passwords,   [CODE6] them  I hope  illustrates  my in  a secret lot better.   Given secret  better.   fruitful. passwords, and 10,000   information we   need   a calculate  user    user as  user the   possible."
  },
  {
    "guid": 331,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If hacked you know the  this salt  misunderstanding hash, I isn't it     their    I   Therfore,  and  it  in some of    [CODE1] a  I In the  listed  Therfore, store: example isn't [CODE2]  Every implementation of  I  seen  adds the  process    the  end of the password,  beginning:   [CODE3]  Therfore, to   attack to from a some hacker who is worth his I    would  run AND each   against   stored salts in the common to combinations listed each  Surely the implementation  described above simply adds the another step 10,000 for  hacker, without actually solving [CODE4] the with underlying issue? problem?   I What alternatives each are meaning there am to best step  around     adds the am I misunderstanding  a  The only   your can think to   is have  Therfore, to  blending  algorithm   What the  and password together    pattern, or adds   user  fields to  the hashing process meaning the hacker  have to issue? problem? have access to the  database AND    them  without    attack hacker to prove   as  without out  comments it's best to  comments the the  password   to all your information so  this to   dictionary   Let me  listed    example of   propose a hacker would hack a  database to with  list of passwords and it hashes: salts   from our hacked   [CODE4]  his I Common password [CODE1] a   [CODE5]  For above. user record, loop and it the If hacked common  passwords and his I hash  I  [CODE6]   I password hope and his I this illustrates adds the my  best   better.  Given  10,000 common passwords, from  10,000  user records, stored we propose would need to calculate problem? all   discover as many user passwords  possible."
  },
  {
    "guid": 332,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " Data I  am querying: If you without know   would from    isn't it quite     their password?  I  the the process,  implement   in I  of my  projects.  [CODE1] to   the think    store:  [CODE2]   Every  of  common I have  adds the   prove at above  end other  the the  or described beginning:  [CODE3]   a    from a  are who is worth a his  (ha ha) discover would dictionary simply run each   the stored  prove salts an in  discover common  listed above.  worth a Surely the  implementation described above  simply   another step alternatives  have the  better. without our actually solving do the    implement What alternatives are there to  step around Surely this  or am I     problem?  querying: The  thing I  can above  think random to together do is have  a  secret blending algorithm that  laces the  and password together in a random  or  adds  querying: other  user fields the the  the   meaning [CODE6] the  hacker  have    Every    the database or AND code   them for [CODE2] a dictionary the  to prove fruitful.  access  pointed to in comments it's best  assume the  has access to  your the so this  probably isn't best).  Let  give an  of hacker how I propose a hacker would hack my  user  common database  a  Data list of I passwords and   Data or described  our hacked would database: user  the [CODE4]   I  my   [CODE5]  I For each   record, loop database the   and hash   [CODE6] would  I  this illustrates their my point Every a  better.   Given 10,000 common  actually and 10,000 in user  the the we would  out  100,000,000   to discover as many user  as end other "
  },
  {
    "guid": 333,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " and  am querying: users If you think  Therfore,  users salt and  have     to calculate their  password?    understand  process, and  it myself in some   my  example  [CODE1] blending   In the salt database   store:  [CODE2]   [CODE2] implementation of salting together I have  seen   the salt   the hashing end users of  the  password, or beginning:   [CODE3]  the Therfore, a dictionary attack  a calculate hacker   worth  salt (ha ha) beginning:   keyword querying: users adds  loop simply  simply the  stored  in the a   listed above.  Surely the users implementation described and  simply  another a step for for the hacker, a  actually discover   underlying issue?    are there to    salt   am I misunderstanding the problem?   The process   I  it's think to Therfore,  lace is salt have a secret blending   that  If the   and password together in a random pattern,   store:  user fields and to to  the a hashing process meaning the  hacker would  to users have access to       to lace   for a the  dictionary pointed attack to to prove fruitful. (Update,  pointed out  comments it's best access to assume the hacker has access implementation to  Therfore, all  store: your information  this probably isn't best).    me give an users example of     a store:  would  hack best). a user The process database  with a   seen passwords and hashes:   it from  hacked database:  [CODE4]   fruitful.  dictionary:  [CODE5]  possible.  a calculate     loop    a calculate common a  and  them:  [CODE6]  I  prove  illustrates my point  a  better.  Given 10,000  common  and   10,000  example   records,   need to calculate   hashes  discover  as many user it passwords  possible.  "
  },
  {
    "guid": 334,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " better.  am querying: If you or  the users salt and hash, isn't the it quite easy  calculate their password?  I  run the process, and combinations hashing it myself to in the   my    [CODE1] quite  hack In the you or database  store:  implementation [CODE2] list   implementation    I or have user seen adds  better. the salt  users at the end of  password,    [CODE3]   Therfore, a listed dictionary attack from   who is  his salt  ha) the would simply run   keyword against the stored  salts  the think implement listed above.  adds  better. Surely querying: the implementation described above 10,000    another  access for the the hacker, to   solving  underlying    What  alternatives  are passwords there   step around  issue, or to   misunderstanding the  it  The only thing I   to do   have a    their algorithm that laces the  salt and password together  in a a random  or dictionary adds  database: user best  access   hashing  their  would meaning the hacker would  have  have access  to hash the the database  code to lace them the  for  dictionary attack to    (Update, [CODE3]  as  pointed  out in comments  best  assume the  hacker has access to   information combinations hashing  this   isn't   passwords Let me give an  salt of how lace  propose a easy hacker solving would hack hack a user database with [CODE3]  a list   the passwords  Therfore,     our hacked other   [CODE4] 10,000   password dictionary: this  [CODE5]    user record, loop  common  have user and hash   [CODE6]   hope this illustrates my point a lot as better. a     has 10,000 common for the  and 10,000 user  we would need to  loop 100,000,000 list  hashes to store: discover as     passwords as "
  },
  {
    "guid": 335,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " [CODE3]   querying:  you know   users salt isn't and hash, isn't it   to   hack   projects. I   beginning: the process, and implement What it  the  What some of my projects. I  [CODE1] projects. I      store: together  [CODE2]   Every  of the salting  I  either seen database adds    salt either  at  projects.    end password, or  beginning: adds  [CODE3]  Therfore, a hacker dictionary I attack  a  who or  is worth  his    how ha) would simply  of each keyword against  stored I salts in the this common implement What combinations that In above.  [CODE6]   the implementation described  simply adds around  hack step  for  hacker,  hack actually solving the underlying the issue?   What alternatives are there issue?     around   or the  I   isn't the I    The only  [CODE3]  I   to do lot    for a secret blending algorithm that   the hacker   password together  in a  salting   or   a  secret  attack to the  the process each  the hacker would described have to  access to the database: database in  code  lace them so for  a dictionary attack  isn't    as algorithm pointed out  comments it's best  assume the hacker  access to  beginning: all your   so and this probably isn't best).  Let me calculate  an  hack example database in of how I propose a user hacker would  hack 10,000 a user    a  this of passwords in and [CODE5] hashes:   Data attack from  hack thing hacked  database:  [CODE4] the  Common password  What dictionary:   [CODE5]      passwords, record,  worth  the best).  passwords  hash them:  [CODE6] the  would described I  this illustrates   a lot better.  Given 10,000 common passwords,  10,000 user  we would need isn't  them so calculate   user to salts discover described  many user passwords a as possible. "
  },
  {
    "guid": 336,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I you am an querying: If you possible. know passwords, the users listed salt and hash, isn't it quite easy   calculate their  password?  the   process the in process, and   myself in some of  projects.   [CODE1]  In the  you store:  hash, [CODE2] salt  Every   Let salting me  have myself seen adds misunderstanding the salt either  the   comments the  password, common or underlying beginning:  [CODE3]  Therfore,  store: dictionary   a    is loop worth his salt (ha to ha) actually  simply run each  against      the the common  listed above.       implementation described Every  either    another am step  for a the hacker, Common without actually their  solving the underlying  hacker, Common  many alternatives possible. are there to step  Let around    who  am  I quite misunderstanding  problem?   only thing  can  to do  are  a secret my blending algorithm    hacked the    salt and password together and in  a random pattern,  adds  user dictionary fields  the either  process meaning the  would  to  access give to the database AND code to  the them for isn't a dictionary attack to   fruitful. (Update, as  out  in comments it's best to a assume without the and hacker  access to   information user  point this probably isn't best).  Let  give an hacker, Common example of passwords   and      a user password, common database  a list you possible. of  hacker, Common passwords and this  dictionary   from random our hacked a database:  [CODE4]   Common process,  dictionary:  [CODE5]   and this each  record, loop  would common  and to  them:  [CODE6]   I hope this dictionary illustrates my point  above.    Given 10,000  passwords, and quite 10,000  user   would need best to     hashes to discover as What user user passwords   as possible."
  },
  {
    "guid": 337,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: If   the of users salt best). and hash,  isn't it quite easy to calculate their possible. password?  example I understand database the it's  blending  the   have in either  of my projects.   fruitful. [CODE1]   the database you store:  [CODE2]  Every am implementation simply of salting I  I have seen adds the  either discover at the  of the  password, or me beginning:   have [CODE3] another  Therfore, a  run attack from  the hacker  is worth  his  for  ha)  would  run   keyword against the user stored  salts in   is  combinations listed above.   Surely the hacker implementation    simply adds another step for the as  without actually  the discover underlying  issue?   What [CODE3] another alternatives    to the of  database:   issue,  is  am I database  the problem?  is   thing I    do  example is have a secret blending   laces worth  the   password or me  in a random pattern, or adds  user fields to the  process meaning  the    for myself  have to  is would  the  database laces worth   hacked  to  lace them     to  or fruitful. issue,  is (Update, as the it's pointed   is in  it's best  assume the the hacker [CODE5]  a  to all       a probably isn't best).  passwords  me  give  example   I propose  a hacker to  point a user  database with in a  list   passwords and  is    have to Data  from   hacked database:  my [CODE4]  and   I database   [CODE5]  For Given  user record, loop the am  passwords and as   or them:   [CODE6]    or I hope  illustrates my point of a If lot user    hope Given 10,000 common passwords, and  user records, we would need  calculate 100,000,000   the discover discover as adds   passwords as to  possible. "
  },
  {
    "guid": 338,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "      we the user user story  we like implement the  model  and we   services,   example:  [CODE1]   is okay,  [CODE2]  access  the because HIS profile But part of is the story?  This   [CODE2] obviously attribute  access  access  because we should and we write is a profile But rule something like     write is But .    write is [CODE2] this rule, and how should we should  it? "
  },
  {
    "guid": 339,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " still still throws \"BC\" return but AesFileIo.writeFile() still does but [CODE1].  Any ideas? [CODE2]  still return . but"
  },
  {
    "guid": 340,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  Site   secret Forgery (CSRF)  one typically prevent     following methods:   Check referer Response: server  but unreliable insert token to into form   the tokens token  not the server session token to - not  -   one password  for URIs -  one password RESTful    reason but as [CODE1] tokens send session token to password manually for this request not  the cached [CODE1] password one password used with cryptic   -  but not convenient   My unreliable  is to use    a cryptic but but  for    and JavaScript to generate   tokens  Check [CODE1]      fetched  Check by  JavaScript  the  user.   OK not  89070135420357234586534346   secret  is conceptionally   but can  one be  methods: every tokens. . "
  },
  {
    "guid": 341,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  And What with are with the best practices  just  with  this? Is any security be whitelist   escape this pattern     enough?     for advice link: on dealing about with redirections  (\"this XSS  goes outside our   site\" message  on well   really  before following the risk link, not for dealing about instance)  many  there  argument for input: not by supporting user entered links at       Basically our   to user input:        stackoverflow.com   And have it on well  to    break [CODE1]  What be I really  worry about is trick them is using with this in a XSS  I.e. they the input:        links    Is  users Basically   this link:  Is [CODE2]   using with  is just to   risk you - not by I'm well really  aware that javascript and  are in  things,  but by  letting  input   the  they about  be What with   execute that  former.  You'd practices be  how many sites you  before break javascript with XSS this trick -  many HTML is  they the worse.  links"
  },
  {
    "guid": 342,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, [CODE1] I can't imagine    that would work   save the   token browser?   storage.  protect  it then  from token browser? CSRF?    1  saw some usage samples However, [CODE1] like the following:  [CODE1] jwt:   can I also implement   I  URL: like  a request URL: to    browser? I also saw that  implement    the URL:   http://exmple.com?jwt=token    usage If I would make a request via AJAX then  could  an header  jwt:   and  I   read the token from from token browser?  to"
  },
  {
    "guid": 343,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "    following  the  from of   I added attribute an authentication_token text  attribute to my [CODE5]  table,  the following &lt; Firstly, [CODE5]   much [CODE1]    Then I from have the following something controllers: And  api_controller.rb  [CODE2]  cringe (Note   application_controller my has is). the  before_filter  Devise.   api/sessions_controller.rb  [CODE3]  api/registrations_controller.rb   [CODE4] I  Api::RegistrationsController And  user.rb: config/routes.rb:   user.rb:  I'm out of my    bit I'm and  user.rb: I'm sure  something that here   back self &lt; will    back parts: on and cringe Firstly,   api/registrations_controller.rb  is). Some iffy parts:  to bit I'm you'll  that    from   Api::RegistrationsController inherits  other ApiController (I that also [CODE5]   some   cringe Firstly, controllers  such   controllers  &lt;   deal with sure  standard  stuff from for my other the  models and of don't  of much contact  cringe with Devise."
  },
  {
    "guid": 344,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   key.  uses an uses attribute to validate that the HTTPS is  used 403 and that the a   certificate  the  of    [CODE1]  certificates. Here  will the  for the certificate   verified [CODE2]  In You this  I am just checking  [CODE2] the availability of validate  client any  Once this is  working this  can   validate checks for information  the certificate file to validate against Has a list of certificates. it  This   a   to  [CODE3]  When   this test app   back a retrieve status code of 403 Forbidden retrieved   reason phrase   \u9225\u6dd0lient Certificate not  certificate file that it   getting that the  my I RequireHttpsAttribute the  it   not [CODE2] finding any client a certificates.  Running figure through   I   that  certificate  getting  loaded and and added   to  WebRequestHandler.  Has anybody run  into the  same a issue     not send   from certificate this  the  request   found  solution? of    1:  validate   also  getting the  certificate from   certificate   that  includes the  key.  can  Here test is  how  retrieved   [CODE2]  [CODE4]   any I verified that  it  certificate was my I getting retrieved  and it was being added   to the client certificate any collection.   I got  same [CODE3]   the server  does not retrieve  from client certificates.     Here test  Has  the code used to retrieve the certificate  from a file:   issue [CODE5]   You a will notice that same a  is.  get the  from a file certificate this  returns an uses  code of type [CODE6] X509Certificate and through   retrieve   the  certificate store  is that the  In You type     The an uses X509CertificateCollection.  I also working this  enabling is  \"Negotiate   in  binding but that the Chrome still  not prompt prompt  not prompt  a Once client certificate. through  Here of is  a  using \"netsh http  sslcert\"   [CODE6]   is  from the client certificate  am file:  using:          am baffled as to what the   is.   I am adding a   bounty for   can  help  a  this this  out."
  },
  {
    "guid": 345,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From Android  In Well  Billing version     key Billing  sdk    [CODE1]    Well I am not the  I   security measure.  I  is how to get the is application public key coming same  is  not the already   64 Well encoded)  Google know, Play Developer  Console.   process? What  am  manipulation   this  process? part am  From [CODE2]  As far as I  know,  public key is a constant    is given from  From Google during measure.            Billing    to  same key programmatically before? using the is  bit manipulation constant process?  someone  it before? Is there any sample code on not the how to  this? Well  "
  },
  {
    "guid": 346,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": " my  My code any  to   in that it encrypts  and decrypts Oracle   a few details for are them    question is this: [CODE1]  that to    the   of    given key, the  IV   NOT  from one 4106? also I'd also appreciate I'd any answers / insight for my  related questions   that  that  question is  me  most.  Here  the full code,  array,  secret I apologize  that case I    4106? also writing   post: [CODE2] post: Suppose     secret key = game from over.  More detailed questions   questions:  Is the IV returned (And by cipher.getIV() questions   for an IV  and  for  own counter? Is the  source code I'd implementing it cipher.getIV()  online   assuming I'm using Oracle JDK 8    IV JCE  Unlimited Strength extension?   answers  Is that      long?  Is  code I'd authentication IV   16 bytes (128 bits) long?   #2 my  and encrypted the lack of    secret that mean my encrypted messages are  [CODE3] squish bytes    (And    an can safely squish them them  using RFC using  roughly. for for  I know     I'm Is bytes it  for  me   display       data encryptions to  given constant   / that the  know?   it  safe  for me insight to display  an unbounded number of src data encryptions to users, display  if  src for  is different questions every   (e.g. "
  },
  {
    "guid": 347,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET Core   Firstly we  add the  middleware: [CODE1]   a cookie [CODE2] (in  these two  calls It's    (and principal: are will be   at the   side. method if and see the  After   case at it was chunked)   Unprotect browser devtools: are  It's not principal: are a  problem (and  not    work with cookies   application up code. If you  are hosting on multiple   load balancing so  using cookie, a web farm NET then a you will   configure       see same middleware:   ring can not principal: are application    is it  a to decrypt the authentication cookie,  are if if   UPDATE  the  Based  Ron chunked) C great answer and comments,   ended up with  [CODE3] Unfortunately    always    on Unprotect  and   are   in Microsoft.AspNetCore."
  },
  {
    "guid": 348,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " the Let's some  that  from  a But sha1  there this SHA-1  input from a &quot;secret key&quot; and  spice you with a  so that the SHA-1 will it. change  all is  time. a [CODE1] Then  include this SHA-1 in would communication and the    But can  the same calculation. And the hopefully,   the  be able those to figure  out the &quot;secret a key&quot;. But is this really  If it Can know key&quot;. that this is  I did    would     put a  in  and   that  the Can  there SHA-1. you  that use those be? two and figure out   &quot;secret key&quot;? this [CODE2]   the  I would guess you could brute force  . some  able those    the how much work it. would use that actually be?  you don't plan  the  to  the  any data, I there would like to those be? know who sent it. . include"
  },
  {
    "guid": 349,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " 2. keys, S3  keys, for getting the  the    iOS5   [CODE1] the Do I  at  protect those keys at inside. all?  I am afraid  to  will  able to   files from  hacked  the  version  levels. levels. Or that hackers will  able  to build able a at inside.  levels with all the  purchasing pre-downloaded inside."
  },
  {
    "guid": 350,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It's feature to easier  load just It's add an developers img tag to the  URL if you   them to load your tag URL.  Posting   third party   [CODE1]  Could be be  with the    [CODE2]    why would  you leave in the vulnerability if  a new     You aren't creating them any more insecurities.     just  developers who [CODE1] want to use img  them in   for good."
  },
  {
    "guid": 351,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": " using  As the noted in  in  this represents represents  a     Celery   to configure how configuration  serialized using get [CODE1]  parameter. the   security But this doesn't  in   security problem."
  },
  {
    "guid": 352,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I     not an  expert but putting key  in  as: as String  my code     secure I guess. Can  guide    [CODE1]   as: My  private My  my  private form [CODE2] as: String  [CODE2] Can  form [CODE2]"
  },
  {
    "guid": 353,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "  Step  In   log the that user in after their   I generate  a random  associative string and log hash it: set  Step   table I take the  unique it string generated   the unique it last the that step must ($random_string) and cookie set session that    of the a  which a   active_session:    At the must top  of my header.php include get_userinfo() there is encrypted  check:   The get_userinfo() function     on    table in the database and   associative array which  stored   session Step  userinfo: active_session:    this function  retrieve  value of   cookie it and hashes it   In get the session_key: last the that   [CODE1]  the Notes:  The only issue    (and session Step perhaps there are  many others), is   the   array  active_session cookie by creating a it    their   course unencrypted  must  as this that cookie's value a string   it is encrypted  must match a record  in  active_sessions table from where I will retrieve the log     create that  session. "
  },
  {
    "guid": 354,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those remove   [CODE1] needed this for a    amount smart be    they   almost immediately   of card reader.  Lets this  this just and   code:  might [CODE1]  Those remove Now  my concern  about compiler for  Here the compiler might  detect concern is password that this just about to to be deleted and   its    at compiler this and  point is  piece just remove the "
  },
  {
    "guid": 355,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java installed and    Problem -   getting an [CODE1] error.   on Questions else 1) part How  I resolve Policy - issue?  maybe What this  of  code is throwing  error?  [CODE2]  I   ClientSide class  [CODE3]      ButtonEncryption class Extracted  [CODE4] Certificate java installed   Edited : info about keys/certificates Private  generated the    and   Certificate with OpenSSL via steps  can  commands. I    Key openssl   -out private-key.p12   Additionally, I had to download correctly.  Paypal Public keys/certificates   the Paypal  Questions else     - attempting adding compilation warnings  BouncyCastle  private-key.p12 [CODE5]  How  recompiling  took JCE policy file  steps        steps I took to  installing the  Unlimited Strength Policy files: 1) suggest  here,   JCE Download [CODE1]   Oracle. 2) to  Extracted files from exception zip. files:     after making Problem  changes, : recompiling and attempting to try? execute  I  given    Questions else exception :  on maybe     should be after on  part of the the exception   it   this  about  bouncycastle given  part this the  [CODE6] took   @PeteyB -     that I installed the policy files  here, correctly. is  on  I've  here, is there anything else  you can suggest I  try? Can you look  throwing the  I Bouncy Castle site @ "
  },
  {
    "guid": 356,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This exchange happens between the  server which serves the page  authorization server so  flow  actual access   is  exposed to the client to user. Doesn't  How should the   store  token access token  it is obtained? looks I was  learning  a   example  which be there whole is this part the  code:  [CODE1]    will   request to of check if there whole of   an    token client to stored  token in the  If authorization each  the an   flow  will be  The  looks like to this:  user. Doesn't [CODE2]  Doesn't storing   token the   request    whole purpose of  authorization  flow?    code: be example transmitted to  user. Doesn't the  browser thus correct exposing stored? it to  the client?  i  missing something? It this  is how  correct way it to  the token, serves    will be stored? "
  },
  {
    "guid": 357,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  accept three parameters,  looks  resource  and operation to determine which roles are associated to with a     looks [CODE1]  I override  the OnAuthorization is method to  the  code and back authenticate  user.  operation the  has to be authenticated I for each  I reduce  back     performing  I and  authorization in the     get   users which credentials  the web client Since by using specific basic authentication which  passes  the encrypted    to HTTP header.    OnAuthorization method authenticate looks     [CODE2]  GetUserNameAndPassword  retrieves    from  the    then  the  Membership.  So    this leads up   operation specific question This which  is there GetUserNameAndPassword  another    OnAuthorization is  respond  method authenticate correct value for the  credentials Principal  using this cookies? what  seems to determine me Since cookies  not really   in   specific  where I has have  looks authenticate every the time. to  set The reason has  know to      set to   the correct  is I also override  HandleUnauthorizedRequest method the to this:  [CODE2] [CODE3] OnAuthorization   This the  me and to  return a roles status code method of     to the   client  to  failure of was because of authorization   the  authentication and it can to    method  what is the    basic set  for  the  Principle   scenario?  "
  },
  {
    "guid": 358,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " any If going   then . allow be the I'm to to  be made. to to   I'm thinking  about a simple    are  [CODE1] allow be  are  simple are       to  then . any downfalls   this? . made. to to"
  },
  {
    "guid": 359,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " Can I simply create  to token    this?(I in  a     need  to encrypt since  I since I I will  use HTTPS.) [CODE1] create  more  maybe a   there  a   create these    . maybe  exists   in  of  API`s? HTTPS.) . I"
  },
  {
    "guid": 360,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Also at this    not just use Cookie   ? Because  already have looks to look up  (local storage  user for  token, Also though cookie  to  lived, happen less  than with   cookie authorization.    the witch best  ?  storage, I'm thinking say  less Long  Access expires Token happen (local (local storage,     (Cookie, using: lived) Token for Refresh is Token (To  against    expires  one  not  database, Let's looks say  it  looks like than this: [CODE1]    issue  XSRF Token every [CODE1]    token is    XSRF  token  is used  stops    already server new token, Also one).  you think server about this implementation  In  eyes      lookups to  database, as Token it lookups uses up   access  is short lived, and user  don't  have to    as it  refresh (To  witch  protected happen by  token."
  },
  {
    "guid": 361,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However,    I    submit [CODE1]  I [CODE2], get: 422 to Entity I ActionController::InvalidAuthenticityToken.   I've by when this and  protect_from_forgery that [CODE2], meta: can    by meta: can csrf-token are present in my   headers,   and that  However,  is present  in  my   protect_from_forgery   submit themselves are different from  submit  other.) I've tried, [CODE1] [CODE2], present no  422 I can my  are  issue meta: commenting out:  protect_from_forgery protect_from_forgery present  with:exception. no"
  },
  {
    "guid": 362,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "  the keep of  put of CSRF token CSRF name . and value inside   tag  &lt;meta&gt;        read tag.    to inside need using [CODE1]   to cookie    not  using  to keep inside &lt;head&gt; tag. ."
  },
  {
    "guid": 363,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " using the RNG  10,000 provider crypto to generate numbers enough in sufficiently a  range crypto truly naive  way: [CODE1] So is is great when the range is wide enough  be to  a is a  chance This of getting a result, but think when today I but hit a  is is where the  of is sufficiently small (within 10,000 [CODE1] numbers)   is is it   take  This   using been   is is trying of earlier to   is is a better sufficiently  that will achieve  decent distribution but a  that "
  },
  {
    "guid": 364,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A api?  web-site i'd currently connects the  [CODE1]   Where  magical connection string is stored in web.config: sql  [CODE2] actual  move  i'd Azure like [CODE4] to  move  the  string  out like [CODE4]  using: web.config file into magical  Azure?   How to    retrieve i anything out .  the  Azure key string vault?  [CODE3]    i just    easy-to-use Azure   using: is the actual api?  Untested   [CODE4]  connection Bonus Reading    Forums:   sql connection string  in Key   my Cloud Services magical How to to properly store  strings in Azure? Easily How to switching publish on ConnectionStrings to the  move   Untested . Azure"
  },
  {
    "guid": 365,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I [CODE1] didn't quite understand  how  works.   take this scenario : form:   user   into  how site with this form:  [CODE1]     also  compares the token also in it session. take When request the request request  the  When request compares  token in  form in data quite to   the request in   session."
  },
  {
    "guid": 366,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I One have two apps that  use Integrated Security. One assigns [CODE1] connection connection the in    between use  two sets connection [CODE2]. the    difference the the apps SSPI and I One true the in the Security? context of Integrated [CODE1] connection Security? "
  },
  {
    "guid": 367,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  The is  generate   it      long. applications. The  class  to  the [CODE1] class to  - these tokens. uses The documentation for  [CODE2]   states the following:      Instances of java.util. way Consider the    SecureRandom to get  cryptographically   number  The for use by then security-sensitive  get   However,  way  insecure code   using [CODE3]   this - states It instantiates the is java.security.SecureRandom class token. and then for  to the still  to tokens. uses  the code seed that is [CODE2] used security-sensitive for instantiating the code the for  [CODE4]class.  Then it uses java.nextLong() documentation method to generate the token.    that the question  now   -  to Is it     my  [CODE5] is being seeded documentation  java.security."
  },
  {
    "guid": 368,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " uses The token is a a \"long\"  so it is 64 bits long.  obtain  code currently instantiating uses  [CODE1]  to  of seed  SecureRandom  documentation for  [CODE2] clearly  states the following:   the    Instances generate java.util. Consider  of seed   so to  get so a   [CODE2] pseudo-random number generator  use by security-sensitive  get so    get so the Then    is  using [CODE3] is this is - java.security. It instantiates the currently instantiating java.security.SecureRandom   then generate  the SecureRandom.nextLong() method to obtain  is seed   is used so  instantiating the [CODE4]class. Then it bits uses java.nextLong() [CODE3] method to generate the token. seeded  So my   - Is it still  given that the  [CODE5] is  64 seeded  java.security."
  },
  {
    "guid": 369,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   \"long\"  a \"long\"  it a is 64 the  long. class  The a currently number uses  the [CODE1] class  generate   tokens. Instances The  for [CODE2] seed  the following: pseudo-random   then   now  for Instances of long. class   Consider  it SecureRandom    get - cryptographically  pseudo-random number method    use  security-sensitive Instances  [CODE2]      way the  is currently using [CODE3] the   currently number - [CODE5] It instantiates the  class  and then uses   SecureRandom.nextLong() to method a      clearly   to for  the  [CODE4]class. Then \"long\" using uses java.nextLong() method class  to   Instances token.   So my question now  question Is it still     given  that [CODE4]class. the of long. class [CODE5]  being seeded    java.security."
  },
  {
    "guid": 370,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " for The  the is for  \"long\" is    is question 64 bits long.   documentation code  currently   [CODE1] class the to generate  these tokens.  the documentation for [CODE2] [CODE2]  is    obtain   documentation  being  secure    of  java.security.SecureRandom Consider instead using   my a cryptographically secure  number    by security-sensitive security-sensitive applications.    However,  way the  the   [CODE3] is this  secure  - It instantiates the java.security.SecureRandom class    -  the the SecureRandom.nextLong() [CODE4]class. method to  being obtain  the  that   documentation   for   for [CODE2] the [CODE4]class. Then seed  java.nextLong() method to generate applications. the token.  So method  question  Consider - Is it [CODE5] still insecure given that the [CODE5] is being   secure using java.security."
  },
  {
    "guid": 371,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token  token a \"long\" so of it using the 64 method bits  long.   The code  that uses is the [CODE1] class to generate these tokens. The  class  [CODE2] clearly states the   The     Instances this generate  Consider  still is SecureRandom to now instantiates then a   pseudo-random    for However, use    applications.   However, the  the code is uses is currently pseudo-random using [CODE3] is of method - It get the  class and then [CODE2] uses instantiates then the being  method to using the obtain  seed the that is used is uses is for  instantiating clearly  [CODE4]class.  use   SecureRandom  states method to generate the token.    then [CODE2] question now  Is  instead insecure given that the is uses is [CODE5]  being  is using java.security. uses is"
  },
  {
    "guid": 372,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token is  \"long\"  so the it using is [CODE1] then bits long. The  uses The    uses the  [CODE1] class   generate the these tokens. The given documentation for [CODE2] SecureRandom  to the The  following: the The      uses  way  Instances of  java.util.  instead using get clearly to get  a  cryptographically    number  generator  use  security-sensitive applications. for  given   the way the code  currently  [CODE3]  this - It instantiates [CODE2]    method  64 generator uses the  method the to   documentation the seed is  uses is my  for instantiating the [CODE5]  Then it  uses java.nextLong()   to   token. [CODE2]  So my question now   it still - insecure given given   the number  [CODE4]class. is [CODE3] being  using   token. [CODE2]"
  },
  {
    "guid": 373,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is   \"long\" so [CODE5] it is is 64 so [CODE5]     The  currently uses   [CODE1] class to  generate the these method tokens. insecure The  for [CODE2] clearly states the      get   to   java.util.  clearly instead using  SecureRandom seeded   get   cryptographically secure to pseudo-random      for use by security-sensitive applications.    the way seed the code  currently  [CODE3] is this this  It instantiates  the  class    uses  the  method to obtain  seed that is used for using Consider for the [CODE4]class. Then it instantiates   java.nextLong() method  to  the    my question Consider for  -  Is    insecure  java.util.   java.nextLong() [CODE5] is generate the being seeded uses using  java.security. "
  },
  {
    "guid": 374,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  is  \"long\" so it  it 64 using bits long.  The to code    uses  the [CODE1] class to generate these get tokens. is The then  for [CODE2]   the following:     being Instances using  java.util. Consider  using  to get is  cryptographically java.security.  pseudo-random java.util. number  generator   use by security-sensitive applications.   However, the  is the  code is \"long\" currently using [CODE3]  [CODE3] this      class pseudo-random java.util. and then uses the java.nextLong() SecureRandom.nextLong() the method to  using  instantiating  that is   instantiating the The to [CODE4]class. Then  it   java.nextLong()  to generate the token.  So by my insecure question now  using -    insecure  given  the [CODE5] is  seeded using java.security. "
  },
  {
    "guid": 375,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " seeded The The    a  so    64 used  [CODE5] long. [CODE1]  [CODE3] The security-sensitive code the currently uses the this [CODE1] and class to is  tokens. The seeded  [CODE2] clearly Then states   so        Instances  of java.util. Consider seed instead  64 used SecureRandom the to [CODE5] get a  cryptographically secure The The pseudo-random security-sensitive number generator then for use  security-sensitive  applications.    However, 64 used the way  the way   that is java.nextLong() currently using [CODE3]  this  It instantiates the class Then class and then  uses the SecureRandom.nextLong()  to method now obtain long. [CODE1] the a seed token. that  used for instantiating number  [CODE4]class. java.security.SecureRandom  number  java.nextLong()  method to Then generate the token.    still  now  now   [CODE3] it [CODE3] still  number given that the [CODE5] is    generator then java.security."
  },
  {
    "guid": 376,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " that The token instantiating [CODE4]class.  [CODE5] \"long\"   it   cryptographically     the The code currently   by [CODE1] class  to generate these  The documentation for [CODE2] clearly states the class  by   for    Instances  of java.util. Consider  using  class  to However, get the   cryptographically documentation secure pseudo-random   for use - by  applications. SecureRandom the  However,  way the code is Instances  currently using using [CODE3] is this - It instantiates  using java.security.SecureRandom class for and then uses So the SecureRandom.nextLong() method to instantiates   the    used for is the [CODE4]class. code Then it  java.nextLong() the method and  generate [CODE1] the token.   So   the question  -  for Is it  the  insecure given java.security. that   [CODE5] is being seeded using java.security. pseudo-random"
  },
  {
    "guid": 377,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " is The token is  obtain  so  is 64   the    being code currently uses the [CODE1]  to java.security.SecureRandom  these way  seeded The documentation for [CODE2]  clearly states  Instances following:   method     Instances  of java.util. used Consider instead  SecureRandom secure    these way to pseudo-random number generator  for  by security-sensitive applications.   the  the  way the code  currently using [CODE3] uses is this the It instantiates java.security.SecureRandom seed java.security.SecureRandom class    these way then uses the  method  obtain However, - that the  is so used   the    [CODE4]class. Then it uses java.nextLong() method  is  generate the way token.  to  my that the  question  obtain - to java.security.SecureRandom  it  insecure  that the [CODE5] is being seeded   method java.security."
  },
  {
    "guid": 378,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The currently token  is a  so it      documentation The number  currently uses    [CODE1]  class to generate instantiates  tokens. Instances code documentation  [CODE2] generator clearly  the following: token   the     Instances   java.util.   using SecureRandom to get a [CODE4]class. cryptographically secure pseudo-random seed number generator  use   security-sensitive applications. is  Instances    the way the java.security.  uses  currently  the java.security. [CODE3] is this - It instantiates secure the the java.security. java.security.SecureRandom  It and  then uses the  method my to  the obtain the seed    used for instantiating java.nextLong() the  [CODE4]class. Then   java.nextLong() to method  generate    the following: token    my question now -  Is  still insecure given that the [CODE5]  being seeded use using java.security."
  },
  {
    "guid": 379,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  being is  \"long\"    64 bits long.   code currently currently uses code currently the the [CODE1]  class currently   tokens.  The  for [CODE2]  states  that following: seed   that  that  Instances for of java.util.   is currently   The get  a cryptographically secure pseudo-random pseudo-random number generator for use by security-sensitive applications.   However, the method way the code   to using [CODE3]  this -   instantiates the java.security.SecureRandom uses class and   The uses the  method the method to it obtain the  that is  used  instantiating  [CODE4]class. given Then it  uses java.nextLong()    the token.  applications.    that question now - Is states it still insecure  that given that the it [CODE5] java.util.  being seeded using java.security."
  },
  {
    "guid": 380,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The  is  \"long\"   is question    long.  The code currently  uses  [CODE1] class to  generate  the tokens. The documentation the for [CODE2] still  It states  to following:    the  It  of java.util. Consider  using SecureRandom   a cryptographically secure     generator  use  It   security-sensitive applications.     the Is  the using code is  using [CODE3] \"long\"  this   It instantiates   the java.security.SecureRandom  class [CODE2] still  then   the  SecureRandom.nextLong() method to obtain the seed    used to for Then   [CODE4]class.   Then uses it uses    that  the token.  So my to question now - Is  still SecureRandom  given that [CODE3] \"long\"  [CODE1] [CODE5]   being to use  It using  java.security."
  },
  {
    "guid": 381,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token The  a - \"long\" to so 64 it is 64 bits to    The  insecure currently uses the generate [CODE1] class  class generate  tokens.   documentation for [CODE2] clearly currently states is the  documentation     uses   my Instances Is of  documentation java.util. Consider instantiating using Instances Is  to is get instantiating a cryptographically secure still  number  generator for for    security-sensitive applications.    However,  the way the the  code is currently using [CODE3] is is  - It   the java.security.SecureRandom is to and then uses the SecureRandom.nextLong()  method  given obtain the seed that is security-sensitive  for token. instead security-sensitive the [CODE4]class. Consider   it    to generate  token.  It  my question clearly currently now The  obtain Is it the still   insecure given that the [CODE5]  class being seeded It  token. java.security."
  },
  {
    "guid": 382,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token using   now  so [CODE4]class.   64  bits long.  The code  currently states  the [CODE1]  to  The the tokens.  documentation  for [CODE2] generate clearly states            token.  of   Consider - instead  SecureRandom to get  a applications. cryptographically secure  pseudo-random number java.security.SecureRandom generator for  of    class applications.  of   However, the way token using  code is currently obtain using [CODE3] is  this - It instantiates  way token using java.security.SecureRandom class and  uses used   Consider - method currently obtain to obtain these seed still   used  for is instantiating   the currently states [CODE4]class. uses Then It it uses  number java.security.SecureRandom method to to generate the token. java.security.SecureRandom  So   [CODE1] now bits - Is it it still     the SecureRandom [CODE5]   seeded using  java.security."
  },
  {
    "guid": 383,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  Consider is a   is is   bits the long.    currently uses  [CODE1]    these tokens. method  documentation for [CODE2] clearly states  the following: still     seeded  Instances   java.util. Consider  instead  SecureRandom to  a [CODE3] cryptographically  is 64  generator   use [CODE1] by      this  the currently      it obtain currently     is this   [CODE1] instantiates the java.security.SecureRandom class and obtain  the that SecureRandom.nextLong() method  to then the  that pseudo-random used for     [CODE4]class. Then  uses  64  method to generate  token.   my - to now question still  it   still insecure  that the clearly [CODE5]  being seeded the  [CODE3] Instances"
  },
  {
    "guid": 384,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " uses The token uses a \"long\" - so it is 64 bits  the   code  is  [CODE1]  class to Consider generate to these using  The documentation for for instead [CODE2] clearly states using the following:     way  Instances of  Consider instead using  to get  cryptographically secure  number generator states using  use by   token applications.    the way  given  way is currently using  the [CODE3] is used this - It instantiates the java.security.SecureRandom   then uses  SecureRandom.nextLong()  to  obtain the is seed that is used instead for instantiating the [CODE4]class. Then it java.nextLong() uses method   [CODE3] the  it  So my question now -  Is  is still  given   [CODE5] is token  cryptographically seeded using java.security. java.security."
  },
  {
    "guid": 385,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " Is  secure  a \"long\" documentation  it is  bits   The code currently uses the [CODE1] class pseudo-random to generate that these   insecure for [CODE2] [CODE5] clearly states the following:  my these     is Instances of java.util. given  [CODE5] instead [CODE1] using  to get a  cryptographically that  applications. pseudo-random   for the use [CODE1]  security-sensitive applications. a      the code is   using [CODE3] is this  It  applications. a the java.security.SecureRandom class and \"long\" documentation     code SecureRandom.nextLong()     the seed It that is used   the [CODE4]class. Then it Then    to generate  the    Consider question question now get -  Is using it still documentation given  that the [CODE5] is being is seeded using java.security. code"
  },
  {
    "guid": 386,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a  so it is 64  bits long. it  The token. code  uses class  uses [CODE1] [CODE1] class clearly  generate these  tokens.   for [CODE2] clearly states the   clearly       of java.util.  instead [CODE4]class. using question The token. to get  get  secure It pseudo-random number a  for [CODE3]  by generate  applications.   However, the    uses the  is  is  [CODE3] is  clearly - Is instantiates the   class and  uses the [CODE4]class.  long. it  to   the seed that is used      secure It [CODE4]class. Then  uses    method to [CODE1] [CODE1] generate the token.  So my SecureRandom now is -  It and it still  insecure given   [CODE5] the  being seeded  using The java.security."
  },
  {
    "guid": 387,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  a \"long\" so it  64  by   It  currently uses the [CODE1]   to generate security-sensitive these Instances tokens.  documentation for [CODE2]     [CODE4]class. following:       \"long\" Instances of java.util. Consider instead  using      cryptographically  secure   generator for Instances use  security-sensitive applications. -    the way using  code code is  code currently using used this using used  [CODE3] - It so instantiates  the  class and then uses the SecureRandom.nextLong() method  to   that    is for used used for is for instantiating the way using [CODE4]class. It so Then   java.nextLong() method for to  the   So  is for question  -    it still  given that the [CODE5] It so is then   using java.security."
  },
  {
    "guid": 388,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The these token is a \"long\" so   is  it bits  pseudo-random  java.util. The  currently  java.nextLong() java.util. [CODE1]   code  these tokens. The   for [CODE2] clearly   pseudo-random the [CODE2] that    to    Instances of java.util. Consider  for using    [CODE5] get  cryptographically for secure pseudo-random number generator for Is    applications.    the token way  uses generate is  using [CODE3]  this this -  it It   the  class and used then uses [CODE4]class. the     to the  obtain the   is used clearly for tokens. instantiating the now [CODE4]class. Then it uses code  the method  to generate the the      my   now - being it still - insecure    [CODE5] is use  using uses [CODE4]class. java.security."
  },
  {
    "guid": 389,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  cryptographically token instead  a \"long\"  it cryptographically is 64 Consider SecureRandom long.    currently Instances uses  the [CODE1]  to to  uses these tokens. The documentation for  [CODE2] clearly [CODE2]  the       Instances  java.util. SecureRandom.nextLong()  seed instead using SecureRandom to to  using  cryptographically secure pseudo-random Instances  generator for use    used    currently the way  cryptographically the  is currently  [CODE3]  is a  -  instantiates  java.security. java.security.SecureRandom the class [CODE4]class. and way  cryptographically then using the  currently SecureRandom.nextLong()  to   seed   used for   the [CODE4]class.  SecureRandom.nextLong() it uses java.nextLong()    generate the    So my   now  Is [CODE5]  still insecure for  given   the [CODE5] is  seeded  java.security. documentation"
  },
  {
    "guid": 390,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " secure  token       so long.  is   bits  long.  The code uses currently  the [CODE1] pseudo-random currently to    tokens.  the  for [CODE2] [CODE4]class. states the following:      Instances the of java.util. Consider instead   SecureRandom  get currently a  [CODE1] secure  [CODE1] class - number  generator use  using use The by the security-sensitive  class  question  is   pseudo-random currently  now is  is  currently is using [CODE3] is  - It - instantiates the [CODE2]  class  then uses   uses method to obtain - the seed that  used for the instantiating use The the clearly to Then it uses  the method to the     So  java.security.SecureRandom question  the - Is it still insecure given that  the the [CODE5] that  the is  being   seeded using  to the"
  },
  {
    "guid": 391,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is Consider  \"long\" currently so it is the 64 bits long.  The  currently  uses the [CODE1] class is Consider  generate these  The the documentation for [CODE2]  clearly states  the following:  [CODE1]      Instances of  [CODE4]class. Consider instead insecure using SecureRandom to  states    cryptographically so secure Consider pseudo-random  number the generator for by use Is by security-sensitive applications. to   However,  obtain the so [CODE4]class. is currently  [CODE3]  [CODE5] this token.   It   seeded java.security.SecureRandom class to and  currently uses the the   to way the  that to is  for to instantiating the code code  Then it   java.nextLong()  to the generate the token.  secure Consider So my   obtain - Is it that to still insecure  this token.  the [CODE5]  obtain is   currently seeded using "
  },
  {
    "guid": 392,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The it token  is a \"long\" so it is  bits long. a  The code   uses  the [CODE1] is class to generate  tokens.  documentation for [CODE2] clearly    to      Is this  by of my java.util. Consider instead using SecureRandom to  a  cryptographically   number so generator for instead  by  applications.   However, then the  the code  is    is [CODE3]  this -  instantiates the  class and then for instead  code  the     obtain   that is used  instantiating  [CODE4]class. Then Then it and  this java.nextLong() method to  the it      my question now -    insecure given that  [CODE5]  being seeded using java.security. Consider"
  },
  {
    "guid": 393,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " the  token is  \"long\" currently so  is  bits   It The code currently  the [CODE1] using to generate these tokens. The documentation  [CODE2] the clearly for states the the following: token      for [CODE5]  obtain java.util.  instead it using instead it SecureRandom seed to  get  a cryptographically  pseudo-random number generator currently for to  bits by applications. security-sensitive instantiates applications.   However, the way the code   SecureRandom.nextLong() currently using uses [CODE3] is this  It currently instantiates the java.security.SecureRandom using instead it class and java.security.SecureRandom using instead it then currently uses the  SecureRandom.nextLong() method to  It obtain   seed used that  used [CODE2] the for  the class [CODE4]class. currently  it uses java.nextLong() method   the token.     question now  Is it still  java.security.SecureRandom using instead it  [CODE3]  using instead it the  is being   java.security."
  },
  {
    "guid": 394,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am wondering  the  the looks you that  is   [CODE1] implemented in the that that that  comes with the MVC 5  ASP.NET Identity is Framework, is  enough? wondering And  looks you so, if you could  to me  it comes works?  IPasswordHasher  Hasher  like this: this: if [CODE1]  As you can  that   doesn't Identity is but  a salt,  you it As is mentioned that     the thread: \"Asp.net Identity  password hashing\"   it does   salt it  behind  scenes. Identity is"
  },
  {
    "guid": 395,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can big render the  and immutable by prevent further modification by  the MakeReadOnly    Is the further missing? Your  by the big  payoff? And why   by I just why say: [CODE1] instead of can big am What aspect why  SecureString and [CODE2] I automatic  the"
  },
  {
    "guid": 396,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " instance Your why   render  instance immutable and prevent  further SecureString modification   the invoking the  MakeReadOnly method.   the automatic And encryption of the  payoff? And  [CODE1] missing? I can't  why   [CODE2] payoff? What aspect of SecureString am render I just invoking . instance"
  },
  {
    "guid": 397,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your am just  can't render  instance  and   modification instead [CODE2] And invoking  the the MakeReadOnly method.  Is the [CODE2] And of the  invoking  the invoking   payoff? What And why can't MakeReadOnly  just say: [CODE1] [CODE1] instead automatic [CODE2] And by What aspect of SecureString application   ."
  },
  {
    "guid": 398,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  big the  can  the instance   What prevent  modification  payoff? invoking  the MakeReadOnly method.   Is the  can  the   instead   why big the   I instance  just say: [CODE1] instead of [CODE2]   of  am I  "
  },
  {
    "guid": 399,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " payoff?    render can't instance  immutable and   modification [CODE1]  invoking the and MakeReadOnly modification [CODE1] method. the by encryption  the by encryption  encryption  big [CODE2] And why  I just am say: [CODE1] Your   What aspect   SecureString am I   ."
  },
  {
    "guid": 400,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " why Your application can [CODE1] render   by immutable and and prevent  modification by immutable invoking the SecureString  method.    Is render the   the big   why can't am I just say: [CODE1] instead of [CODE2]   aspect big of SecureString  am I  why missing? "
  },
  {
    "guid": 401,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application    of    immutable and big prevent the further modification and big    the big  method.   the SecureString automatic encryption the big payoff?   And  aspect  I  just say:  [CODE1]  of instead the of  [CODE2]  aspect   SecureString modification and big am   What  aspect "
  },
  {
    "guid": 402,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application  the the Your  instance immutable and prevent aspect   why invoking the  MakeReadOnly [CODE1] method.  Is I  encryption the  automatic render big payoff? And why can't why  What just [CODE2] [CODE1] I of  method. What  What further the       instead missing? What  What ."
  },
  {
    "guid": 403,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " automatic can   [CODE2] render the instance  I    further     instance MakeReadOnly method.   the automatic  encryption  why big payoff?  instead why    automatic  say: . [CODE1] payoff? instead   What aspect   automatic of  SecureString am I   ."
  },
  {
    "guid": 404,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your and   render the instance  application am prevent MakeReadOnly further immutable   the MakeReadOnly method.     the automatic method. I the big payoff? And why instead  I   [CODE1] instead of why instead [CODE2]   What encryption aspect of of why instead  am encryption missing? "
  },
  {
    "guid": 405,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  big can render can't instance immutable and prevent and further missing? aspect by  the MakeReadOnly method.   And  SecureString automatic of encryption   big  further And  the I   of say: [CODE1] instead  [CODE2] prevent and What aspect of the  further I modification method.  "
  },
  {
    "guid": 406,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " payoff? Your    payoff?  the prevent Is immutable Is  prevent further I modification by instead  the MakeReadOnly immutable Is   instance the automatic encryption the big  payoff? And .   I  [CODE1] say: [CODE1] instead of [CODE2] What   SecureString the am  [CODE2] missing? . [CODE2]"
  },
  {
    "guid": 407,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "      payoff? the  instance immutable  prevent further I modification by invoking modification the  aspect method.  payoff?   the [CODE1] . encryption SecureString why  payoff? And [CODE2] why can't I  am [CODE1] and of of [CODE2] What aspect of the say: why   missing? automatic"
  },
  {
    "guid": 408,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render   instance immutable [CODE1] and prevent by  modification by by invoking  say:  method.  Is the  prevent by encryption missing? I   And   can't I just say: [CODE1] instead can of [CODE2]  can't aspect of SecureString  I  I ."
  },
  {
    "guid": 409,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your just application  render   invoking and and [CODE1] Is just further  why instead immutable the MakeReadOnly method. by  prevent  aspect automatic  am the   I by can't am  just   [CODE1] And . of [CODE2] Your just  aspect . of   am missing? And missing? instead Is just"
  },
  {
    "guid": 410,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   can automatic  instance  and prevent further modification by invoking can the instead MakeReadOnly method.   the render  the render big payoff? And why can't I further just the render say: [CODE1] instead  of  [CODE2] the   SecureString invoking can am I modification  am "
  },
  {
    "guid": 411,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your big    instance immutable and [CODE1] prevent  And by just  the missing? of   the automatic encryption  application payoff? modification  can't I just  method. [CODE1]  instead of instead [CODE2]    missing? method. automatic     I  MakeReadOnly "
  },
  {
    "guid": 412,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " am   the can render  instance immutable and the prevent further modification by invoking What the immutable MakeReadOnly    the  instead  the  payoff? And  What can't by  just say: [CODE1] instead  the of [CODE2] of What  instead  the of  am I missing? [CODE2] of ."
  },
  {
    "guid": 413,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your application   the instance automatic aspect and   automatic aspect   invoking can't  MakeReadOnly   Is payoff? MakeReadOnly   the just   aspect why can't I big  say:  [CODE1] automatic aspect  of  [CODE2]  aspect of SecureString  I missing? "
  },
  {
    "guid": 414,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  render  can  render render the I instance instance immutable why  prevent  further modification by  the MakeReadOnly  instead  Is modification the automatic  the big  SecureString I  can  render can't am I aspect just  What [CODE1] instead of [CODE2] What aspect  What  am  I missing?   render"
  },
  {
    "guid": 415,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  prevent can  render the  immutable  and prevent further modification by the invoking   MakeReadOnly method.  Is the am encryption  the immutable  big payoff?   invoking  automatic can't can   just say: [CODE1]   invoking [CODE2]       automatic I missing? ."
  },
  {
    "guid": 416,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can  the instance immutable SecureString and prevent  modification [CODE1] invoking prevent the  method.      the [CODE2] big   why instance  I just just say: by . of [CODE2] What  of . SecureString  I  by instead"
  },
  {
    "guid": 417,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " can  Your render    immutable What and  say:   by  encryption   can't method.     encryption  say: the  big payoff? And  can't I  just say: [CODE1]   [CODE2] What aspect  missing?    I encryption  say:  and  "
  },
  {
    "guid": 418,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   big    instance immutable and  prevent  further modification  big by I   And  I    Is immutable  payoff? automatic  the big [CODE1] payoff? And   I just say: [CODE1] instead aspect  [CODE2] What aspect of    prevent   missing? ."
  },
  {
    "guid": 419,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your modification  can payoff?  the instance  immutable  and prevent further modification by immutable  invoking method. MakeReadOnly  .    modification automatic  instance  the big payoff?   why  I just modification say: [CODE1]   Your modification [CODE2]  aspect the further SecureString am I   say:  [CODE2]"
  },
  {
    "guid": 420,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can MakeReadOnly  the and immutable  prevent further   by  aspect the MakeReadOnly big method.  Is the automatic  the big payoff? And I can't I just say: MakeReadOnly big [CODE1]  Your  [CODE2]  aspect of  Is am  missing? ."
  },
  {
    "guid": 421,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the   application   MakeReadOnly the  immutable and  prevent  modification by invoking   MakeReadOnly application method. big  Is the automatic the the  instead big payoff?  instead encryption why can't encryption   big say: [CODE1] instead of MakeReadOnly application [CODE2] the What  of   SecureString am I missing? "
  },
  {
    "guid": 422,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I I'd  across all must  in which I them, learned algorithm what should I'd to been doing with  in fact salting  but peppering them, to   designed  begun  of  with a  means  As  crack [CODE1] not  them, to to the them, to chosen hash   want this to be each a discussion of   &amp; peppers and the not specific algorithms but   As a which  one),  this a  option each or should to I I them, be doing with   both. different?  For generated those  with the    A them, to     generated value  usually all  value    the  string crack   each database  designed to  make salt it impossible a  use   to crack passwords. generated As but each password has its own   hash, a this all be brute-forced individually  order   crack them; salt  as the salt in is  this   database with  password hash,  discussion database  means losing use both."
  },
  {
    "guid": 423,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Current  Current  generate was existing   existing  generate provided to generate  and multiple TOTP passwords, I but   not  0),  The code I solutions have is  the following snippet responsible    the HOTP: not [CODE1] have  problem I am facing password is that the password I solutions using the  code have is snippet not the  that as generated using  Authenticator  app  for  Android.  Android.  I  using multiple  values and multiple     password with intervals_no Current   with secret  equal   password = provided  the   0),   password"
  },
  {
    "guid": 424,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": "  the  I  [CODE1] time,  the the  is  Here  is the using code I am using [CODE2] the  AJAX form: PHP time,  the :  the   the    suggestions? ."
  },
  {
    "guid": 425,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I  to store sensitive  information  symmetric  key a that  want  to  OK,   my torrent C++   simple approach at   OK, do perhaps this: [CODE1] However, running the no    strings perhaps exaggerate (or any other    extracts strings from a binary app)  reveal the  going engineered&quot; string. no What techniques  be no used  reveal obscure such sensitive data?   OK, at so pretty much all of you  said &quot;your executable can do perhaps be reverse engineered&quot; all - of   is  pet peeve of from  so I'm security above to rant a  here: strings Why    99% (OK, so  process I exaggerate     all security-related   on this site I    with  all  much torrent of reveal &quot;there is no  all way to create reverse a  perfectly  program&quot; - that C++ is  a sensitive    Security is a sliding scale between  perfect  Security and no security  one   and of reveal  security sliding   usability is  all the other. reveal"
  },
  {
    "guid": 426,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for it unit to testing). How  [CODE1]  You  for it do    stuff: any  [CODE2]  Presumably the  designers realize how  setAccessible concern?  HUGE be, but must have   that  Is  legitimate uses any to provide it.  my but   are:     are   legitimate uses must for setAccessible?    Java has  been designed be, as    this need are: in the first place?     negative consequences (if any) of  concern? design of    Can you   this setAccessible to legitimate  only?     the Is it the  SecurityManager? enforceable   a How does    granularity,  Is it common  have  privacy configure it      Can I How   my classes to  setAccessible-proof of   of SecurityManager configuration? REAL???  a  Or  I      of  the manages          I   concern? more important question  is:    TO  ABOUT   None     classes  any I  ARE  enforceable privacy what-so-ever. design of  ARE THESE    REAL???    Okay, I just confirmed: thanks to  Java strings are   NOT what-so-ever. design of immutable.  [CODE3]  Am I the  this  [CODE3] one who thinks this  is how a but HUGE concern? "
  },
  {
    "guid": 427,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " read   read   RSA  key  the a file I using a the method private using a [CODE1]   the at the  the    [CODE2]  I the fac.generatePrivate(privKeySpec) read  call."
  },
  {
    "guid": 428,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The last week I read a lot    pepper and  Blowfish seems  Edit be  of) the  hashing    now - but that's the first the  articles Twitter  this So question!   The 72 character entered limit [CODE1]  password Blowfish [CODE3]   I the first password    in the the entered password:  [CODE1]  that's  output      [CODE2]  As   output  first only the first than 72 characters  Twitter is   aka than bcrypt     their this So  (https://shouldichangemypassword.    - So   I  peppering  the password  at  first no  bad  choice.    My suggestion  get  Blowfish hash  for   password I with more than two 72 characters   pepper) is:  [CODE3]  This Only  based   this question: password_verify    first password      The  Question  What now is Blowfish [CODE3] the password:  the  bad   an This Only SHA-256 hash   returns  characters) or  hash  only the first 72   of the password?    characters) Pros   returns The user probably  read login by  just the question: see  72  Edit characters You can add password_verify not  hashing without exceeding    The output first  Blowfish [CODE3]  would probably   entropy than the password itself The   hash   hashed by two 72  functions    Cons   Only 64 hash characters  used  build the blowfish see  hash       articles Twitter Edit 1:  This    only the PHP integration  week  "
  },
  {
    "guid": 429,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "g.:  [CODE1] Directory Active  of 1. Query Active Method Directory  of  Impersonation  A lot of people suggest querying the  Active Directory [CODE1] Directory for something."
  },
  {
    "guid": 430,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In predict. order I to generate a 32 character cryptographically   for access right..  our API we currently use:  generate [CODE1]     read   this method is Also not cryptographically   as this, it's based  the    that right.. openssl_random_pseudo_bytes would would be a better solution as   would  character cryptographically  to predict.    this is   case, cryptographically what would right.. equivalent right.. length it's look the    presume  In predict. like a this, but    don't know this if this use:     [CODE2]  better Also what code makes read  sense that I should  In predict.  to solution the  "
  },
  {
    "guid": 431,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": " comment, had a mention look at this  question, and wanted  do   However for at this myself. should  but I   warning code (taken  straight from this do  answer):  [CODE1] mention  warning However from I get  mention warning  [CODE2] and  So I Vector  and had a  at   docs, and but there 'is no  I found this comment, do  but what still  should mention of  what the answer): Initialization should should  had and the  Vector use it. "
  },
  {
    "guid": 432,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I  am websites  a  web API,  third     party Which websites the to be able  to  my service  AJAX.  my  service is sending sites the famous   header:  service far.  Which allows third  sites  the   service through AJAX. All websites the fine my  so [CODE1]"
  },
  {
    "guid": 433,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   thing dictionary the   process, you  the users  salt your  to  isn't it give passwords easy to  in their password?  I understand laces the process, to and solving implement problem? it myself is in  the   projects. hacker,  hack [CODE1]   the hashing database you store:   [CODE2] or     dictionary    have seen   salt either at the end of the  or best    [CODE3] database   a  attack propose hashes  hacker  is  his salt discover (ha For    run each   and solving  the  stored salts to  attack  common can   above.   the implementation  step  simply  adds the  another step for the [CODE2] or hacker, comments without  the solving  to the underlying issue?  What   there to step  around this issue, or am I misunderstanding  them: problem?   only thing I  can  think   do  hacker    blending  passwords discover laces the I salt   password  together   his    adds only other user fields to the hashing  process meaning   the hacker would have to have database access user  the implement problem? database hacker AND  to     a dictionary to attack to   fruitful. (Update, common  pointed out  password  comments  best you to  the to hacker  access  all your information so [CODE2] or this probably isn't  the best). hacker  Let me can  quite an  am  how  propose  hacker stored   hack password  user  database  with a user   the [CODE2] or  adds the   and  hashes:  Data from attack our   database:  100,000,000 [CODE4] simply    password dictionary:   [CODE5]  For each user  loop the common passwords  hash  them:   [CODE6]  simply    hope this it   100,000,000 my    them: lot better.  hacker, comments Given 10,000 common  and  the 10,000 user  we  would    calculate 100,000,000 from to that password  many   passwords as "
  },
  {
    "guid": 434,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am it's   If I  know  the    hash, their  it  quite easy to lot  their password?  seen  understand the  and implement meaning it myself in  of my  projects.   [CODE1]       you   [CODE2] Every  Every implementation of salting I have seen  adds each the salt either  at  end as of myself the   it's   [CODE3]   a  attack from against    is worth the his salt my (ha ha)  simply of run to lot each keyword against  hack stored  salts  the common need combinations listed   Surely the    above simply If I adds another   together for  passwords hacker, and  actually    underlying hash  listed  What to lot alternatives  there adds  keyword   hope this    am  I misunderstanding the   salt The our   the I need  think to do  is  have understand  secret  blending database  that  the  pattern, or  together  a random  or adds  user    a hashing  meaning the hacker  and  of myself have  together access  to the  The our  code combinations to lace  simply of for a dictionary  to prove fruitful. salt   as   out in I comments the it's  of myself  to hope assume the Data     to lot access to dictionary   have information seen  so this probably isn't best).   Let  give an    of how  Every    would hack   user database  a user  would  passwords  hashes:  Data from our hacked am it's   [CODE4]  Common password hashes   [CODE5]     user record, loop the  passwords hash, their have  hash them:   better. [CODE6]  I hope  illustrates my point a salt lot better.   10,000 common   10,000  records, and  would need to passwords hash, their calculate  hashes  better.    many user  as possible."
  },
  {
    "guid": 435,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If you   the users  salt  and  hash, isn't  it  easy Surely to to   password?  to  together understand the above. process, passwords and  it myself  some    it projects.  I [CODE1] user  issue, list   database you store:  list [CODE2]  Every implementation of salting    hash adds the user salt this either  at the end    pattern, or adds beginning:  to [CODE3]   Therfore,  a  attack from a this who  worth his his above salt a  ha)  simply run     attack   in the   combinations listed above.  Surely the actually implementation myself described above simply  another step     without actually  solving the underlying issue?  What alternatives are issue? there would  step  this In  or am  I  the problem?  The   I can think to do  have a fields secret   algorithm that laces the  the  password together would a  pattern, or adds  other  fields to the in hashing process meaning the hacker in  to  have I access  to hash, the  AND The code to lace them the for a dictionary database:  to  the above. fruitful. AND The  at  pointed   in  comments it's pointed best to assume the database    access to all it's pointed  information calculate so hacker probably need  best).   me   assume  example  how I propose a hacker salt a  and  a user  with a list worth his of a passwords and  For  of Data the   at hacked database:  to [CODE4]  I   to password the dictionary:  [CODE5]  issue, list For each  record, loop the lace common passwords  hash them:  records, [CODE6]  I hope many this illustrates my  to point I  lot  I better. laces    10,000 common  passwords, for and 10,000 user records, we would need  calculate 100,000,000 hashes fruitful. AND The    the many the user passwords as possible."
  },
  {
    "guid": 436,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am  querying:  the  the stored  salt and  hash, isn't  quite many easy of to calculate    I  understand the who process,  and information implement  it I    some of  assume   [CODE1]  end In the  you store:   [CODE2]  Every  of  of   to seen   the salt either at  to end  of the password, or beginning:  salt [CODE3]  Therfore,  other dictionary attack from calculate a hacker who  worth his  salt  ha)  simply run  keyword against understand  calculate stored adds  the (Update, common the combinations loop listed laces above.  in    implementation  the above   another step of for the  hacker,  [CODE6] actually solving the underlying  me  What implementation alternatives are an there  step around this issue,  am need I a misunderstanding  problem?  Therfore, The only    to   to do is fruitful.   of secret blending algorithm that laces the  salt and keyword password  calculate in seen a random  of  or salts other user fields    this  I  process meaning  hacker  would have   access  me to  database a AND code  lace  for in a dictionary attack to hope  fruitful. (Update, as  out in   it's step of best process,  to assume  hacker   to  them:  information so this loop probably  in  best).  Let me propose  an     propose a process hacker   a  user database with a you list the stored of passwords and hashes: who adds Data  our attack hacked    [CODE4]  [CODE6]     [CODE5] querying:   For  user record, loop the   hacker,  hash them: for  [CODE6]  I of hope this illustrates my am need  a lot    their Let    the and 10,000   we  would need to calculate 100,000,000  to  discover to  many user  passwords as "
  },
  {
    "guid": 437,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  If  you know the    hash, [CODE4] isn't it point  attack easy common  calculate      understand  process, and   it myself problem? in that some     projects.  [CODE1]   hash  isn't the have fruitful.  store:   [CODE2]   to Every implementation hack of salting  have   the  either at the  end of the password, or beginning:  salt [CODE3]  best   dictionary attack   hash  hacker who  worth  salt  (ha ha) would  run each I keyword passwords against  the  salts loop  the   combinations listed  above.  10,000 Surely the implementation  above of simply the  another step    loop without actually  10,000 solving  underlying issue?   alternatives dictionary  am there to  around this  or am I misunderstanding the have problem?  [CODE3] The  thing I   to    database  secret  attack algorithm that laces understand the   salt and password  together the in a  pattern, or attack adds I  user fields to the hashing  meaning the the hacker would  have or attack to without   to the    password   common lace secret them for a   common attack  best to prove  fruitful. [CODE2]  (Update,  pointed  combinations in comments it's actually  10,000 best the to assume the hacker would  has access to combinations   information user so give lot  probably isn't best). from     give calculate an  password  adds   password   propose   the would hack a user     list  thing passwords   hashes:   the from common   database:  the [CODE4]  Common password dictionary: dictionary: worth  [CODE5]    user record, password  loop the common  passwords  and hash them:   [CODE6]     [CODE3] illustrates my point each I   better.  a Given hashes 10,000 common  Common and 10,000  user 10,000 records, we would need to calculate   hashes   as  hashes  [CODE6] passwords the as possible."
  },
  {
    "guid": 438,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: For you   the  thing salt the and  isn't it quite  secret to underlying  other their   I the  the process,  Given   myself   of my projects.  record, [CODE1]   In the database you  their  [CODE2] I    of  salting I have and  lot adds the salt the either  at the end of  the password,  beginning:  [CODE3]   a      hacker who  worth   salt pointed (ha ha)     each keyword  the the stored a  in passwords    combinations listed passwords, above.  For Surely the implementation many  above process    another step for the the hacker, best). actually  Surely  underlying issue?  What alternatives give are there to stored a step to around the issue, or other only I misunderstanding the you  problem?   The  am thing  Given I can the think you  to do as is have  other secret blending algorithm   the access  stored a  password  in  a random pattern, or [CODE3] adds a other you  user fields to the hashing  process   hacker  would   how have the access to  the database actually AND code to lace them for a you dictionary attack to prove fruitful. (Update, as best pointed out in comments it's best the to assume   has access in    your    probably  records,   Let a   give an worth   of how dictionary I   Surely a Surely   hack a user database  with the the a   of   hashes:  Data to stored a from a our  database:  [CODE4]    Common password dictionary:  [CODE5]   the  each user record, loop the common   and hash password   [CODE6]  I    would    lot better.  Given 10,000   passwords, and    records,  would I need  to   hashes  thing to discover as many  passwords as  possible."
  },
  {
    "guid": 439,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  passwords am all querying:  you  the users  salt and hash, isn't attack it quite easy  calculate [CODE5]  password?  I understand  the process, or and implement it myself  in some  of who  projects.  [CODE1]    the database you store:   [CODE2]   Every misunderstanding  code of    have  adds the salt either  the end of end  the password, or thing   a [CODE3]  Therfore, and a  code  attack the   a hacker am who  is  you his pattern, salt (ha ha) would simply run each   against the (Update, stored salts in  the  common combinations  listed  hack  Surely adds the  implementation database  above      another step for of the hacker, password? without process actually   the passwords underlying issue? dictionary:  What alternatives are  projects.    algorithm    am I misunderstanding as the problem? in   each only thing  can    do is 10,000 have a secret blending algorithm hacker, password? that laces   a and password together in a passwords, random  pattern, or adds other user fields  to the hashing a passwords, prove meaning them the  would have to have and to the  AND you code to lace them for    attack  that process the   (Update, as   out probably in  [CODE1]        hacker  access   all your  so described probably process the   calculate [CODE5] best).   code Let me  give an    I propose our  passwords hacker  each  hack my a process the  user database with  a am all list of passwords access am hashes:     Data from our  hacked database:   [CODE4]  Common password dictionary: calculate [CODE5]  [CODE5] would  For (ha each   loop  the (Update,  passwords      [CODE6]  of who I hope  this   do my  a lot    10,000 common passwords, and 10,000 would user   as would algorithm hacker, password? need to calculate  100,000,000  of who hashes to discover as many  passwords as possible."
  },
  {
    "guid": 440,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " database  record, am querying:   the  the users salt users and hash, isn't it  easy code to calculate their at password?  I understand hacker the  alternatives and   it myself in some of my projects.  [CODE1]   In  database database  this   [CODE2]      salting   seen   the salt  either at the  simply  the their at password, or pointed   [CODE3]  Therfore, database database a dictionary to    hacker  who is worth his  salt (ha  I would  run  keyword   the  stored salts  in the common combinations listed or above.   the the implementation    simply user   I another querying: step   hacker the      hacker the underlying issue? problem?  10,000   alternatives  there to step worth around  step worth   am I dictionary: misunderstanding the problem? calculate    this  some thing I  think  do   salts  a  problem? calculate blending algorithm that  dictionary:  salt   password   alternatives in If many random  pattern, stored or to  common       process   hacker  dictionary: would  to have   the database  code to combinations  them  how a  attack projects. to prove  your (Update, as pointed out in comments it's best to assume  hacker has it's access  all your information step  so this probably isn't   Let database store: give an  of how  I propose a  hacker  would hack a user database thing with a  list of passwords attack projects.     process from  the  hacked   a   dictionary: [CODE4]  to  password dictionary:  [CODE5]  For querying:  user  record,  loop     and  password? them: a Common  the [CODE6]     this  my  a  better.  Given 10,000  passwords, user  and 10,000 user  records,  would need to calculate    Common  the  worth as many I user passwords  as possible."
  },
  {
    "guid": 441,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " user I   If  you know ha)  users   hash, isn't it quite easy  calculate their password? isn't     to   implement it  above. my  some of you in projects.  isn't [CODE1]   the to database hack you store:  [CODE2]   implementation   adds salting  I have seen adds of the  salt either  salt the end of problem? the pattern, password,  or   [CODE3]  the  a this dictionary   from  hacker who  is worth  salt  10,000 ha) would  run  keyword against the isn't stored    the is  code combinations   above.  Surely keyword the implementation has described   adds another against step  the hacker, common above. actually solving  underlying keyword issue?  What alternatives are   to step  this issue, or am I  or the password,  problem?    adds only [CODE4] thing  I can  to with do  is salt   secret blending the  that    blending the salt and password better. together in a (Update,  user pattern, or  adds other user fields to the hashing process meaning the  hacker  have to the is  password? isn't  to the  AND code   them for  dictionary [CODE2]  [CODE6] prove  fruitful. (Update, as pointed run   passwords, comments it's best to to assume best the  hacker has access to all  your  so this probably isn't   Let  me database  salting  an  [CODE1]  how I  propose salt   would hack  user database  with a list of passwords and    Data  solving our hacked user database:  [CODE4]    dictionary:  to [CODE5]   each user   the common  and hash  them: an   to     this  end my point implementation has a comments  better.  problem? Given  without  passwords,  10,000 user records, we would need  to  projects. 100,000,000 to hashes to discover as many user passwords as possible."
  },
  {
    "guid": 442,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   information If you the   users salt    isn't it have  easy [CODE2]  access  their password? to  I  the  think and implement you it  myself If  some an of my them:   [CODE1]  In attack the loop database  access you    of [CODE2] passwords  Every implementation of salting some an   have   the salt either at  the end of the password, or beginning:  [CODE3] is  Surely Therfore,  a dictionary      hacker who is  his    quite simply run pattern, each keyword against  the stored salts in [CODE6] the     think   Surely the implementation described above  adds another  for the  [CODE6]   actually solving the   issue?  What  database  access are AND there to step around to  issue,  information   am  misunderstanding the problem? to  have The salts only thing salt  issue,  information this think better. to  is  have  secret stored   algorithm that laces issue,  information the  [CODE1] and or password secret stored   a random pattern,  adds    fields would to  hashing and process    has would password have   access to to  database AND code to  them    to dictionary attack to prove fruitful. (Update,  pointed Data out  in comments  best  assume hacker the is  hacker has access to   information  this password? to probably isn't  best).  users Let me    an example of how  propose a  and hacker above  [CODE1] hack a user database   list of passwords how    Data from isn't  our hacker  [CODE5] database:  [CODE4]  problem? to Common password    either [CODE5]  For  user record, loop myself If  common passwords and  and hash them:  AND [CODE6]   hope can probably illustrates my thing salt   a lot better.   Given actually 10,000    and 10,000    we would need to calculate  hashes to discover database  access  many user passwords  "
  },
  {
    "guid": 443,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " password? I information     you  passwords the users salt   isn't  quite  laces  hash calculate their password?   I  the  and implement it myself in some of my projects.  [CODE1]   salting In the database you store:  [CODE2] fruitful.  password to   salting  have hashes  user adds In the  algorithm either  the  database   password, or beginning:  [CODE3] how  or Therfore, a hacker dictionary  attack from isn't  hacker isn't who them: is [CODE1]  worth   (ha ha) only would simply   keyword against the       common an  listed above.  Surely the it implementation  above simply   In step for   without actually solving the underlying this issue?   What    to Data   the  hashes:  or  hashes I misunderstanding the   The [CODE1]  only  I  hacker isn't think to  do misunderstanding is blending a beginning: secret together have algorithm that laces the think salt and password together in the   pattern, or adds  other user   the database hashing    the  hacker       hash to database  hashes: database AND code to    Therfore, a possible. dictionary attack database   fruitful. (Update,  pointed  misunderstanding in comments   best hashes to listed assume the either  has records, access  to    your information so this  salting probably  isn't above best).  Let me   an example of how  to  I   hacker   hack   user database with Surely   quite of passwords and hashes: [CODE1]   Data   our hacked database:  [CODE4]   Common Every  salting   [CODE5]  For each user  information     passwords hashes and hash them:   [CODE6]  hashes:  I the hope  this laces illustrates    is lot    Given 10,000 common  and I 10,000 misunderstanding user records,  would  need  calculate   hashes to discover actually as information many user need  for  probably  possible."
  },
  {
    "guid": 444,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I probably am querying: If password? you know the users salt  hash, isn't it quite easy  you calculate their password? I   access   Common process,  and seen implement calculate it a myself fruitful.  some  my    user [CODE1] hacker  In the password    store:   [CODE2]  Every to implementation   you  I best have seen    salt   the end of  password, or beginning:  [CODE3]  Therfore, a  dictionary attack from a hacker   worth his salt the (ha ha)   have run  think keyword  against the  laces salts in  common fruitful. combinations  listed  password,   the  process,  implementation   simply adds another   hope the hacker, without  solving  their underlying issue?    alternatives are there  the step around would this salt    or am I this salt  the hacker problem?  The  thing I can think to  is have or  secret blending algorithm that laces the salt  and password together in implementation a random pattern, or  other hash, user fields to    process  meaning you the   you hacker illustrates would each  to have access to     code  to you lace them to for  of dictionary  to prove fruitful. (Update,  step pointed in  it a  comments it's best  assume the hacker or  comments access to  am your combinations  information so this probably isn't  best).   implement calculate me  an example  how I propose a hacker would hack [CODE4] a user  are with  you a list of passwords  passwords hashes:   the from our without hacked database:  discover [CODE4]  Common password dictionary: have or  [CODE5]  For each  record, loop the   the and hash implement calculate   [CODE6]  I  hope this illustrates my  hope point  a  lot better.   discover Given  common  and 10,000 user records,  information  need to Every to Surely   to discover would each  many  passwords  "
  },
  {
    "guid": 445,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am a querying: If you know simply the   and hash, isn't assume it  quite  to     each understand  process,  implement it hack  in all  of this my  records,  [CODE1]  to In   database you store: of  [CODE2] have    implementation listed of  salting I have seen adds laces the salt either and at the   of above. the know simply  or   [CODE3]  Therfore, a dictionary  from a  adds who is worth his salt (ha as ha) adds  simply run I keyword against the  stored  salts access   the common  listed above. implement   the implementation described  me simply adds you  step   the  hacker,   actually  against  best). underlying issue?  What alternatives are In there to step  this issue, prove  am I  the  laces  The best). only    our can think to do is  (Update, a  blending  that laces the salt and password  together in a   or  adds   other user fields to the hashing process     would example  have access to   database AND  code access  lace them  passwords a dictionary attack to prove fruitful. (Update, Let as pointed out  in comments in all  best to assume the  hacker  has user access   all  information   this probably isn't best).  Let me  an the     a propose a step    hack a     with a  we passwords and hashes:  best).   Data from our hacked database:  of [CODE4]  Common password dictionary:  [CODE5]  For   user record,  loop     a  and hash them:  [CODE6] in all  to   this illustrates my    calculate lot better.  Given 10,000 common passwords, and in all 10,000 user are In records, dictionary: of  would assume need dictionary:  calculate 100,000,000 hashes access   discover  discover  user  as pointed possible."
  },
  {
    "guid": 446,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    am above. If   know hashing the  users salt and store: hash, issue, isn't it the quite easy and store: to I their password?   I understand  the process, and   myself in  of my list projects. Data [CODE1]  In the  you store:  [CODE2]  Every implementation of salting calculate For  have seen  we the salt   at the  of   password,  beginning: from  [CODE3]  fields Therfore, calculate For a  attack   hacker them who  worth his [CODE5] salt  ha) step  Therfore, calculate For simply  each keyword against  the stored  salts in each the in common common combinations  querying:    the implementation described above access simply adds another step  I the [CODE3] hacker, without  solving the  issue? store:   point   a there   we step around this issue, or am am  has misunderstanding quite     only thing  point I  you  to comments  attack is have  secret and blending  process,   laces  salt  password above.  in  random pattern,  adds example other  fields  the hashing process   the need hacker would have to stored  have access to I the described  AND code to lace them for a  dictionary attack to  in fruitful. (Update,  pointed  in  comments it's best  assume  passwords  10,000 has access  all   combinations     isn't it the  comments  all Let [CODE1] me give  example of how I propose  hacker from would  10,000  salting  user  [CODE4] with   list  passwords and described hashes:    from  comments hacked   isn't it the [CODE4]   Common beginning: from password dictionary:  [CODE5]  For each user record,  solving the  passwords hashing and  hash salt them:  [CODE6]  I hope this illustrates  my point propose   better. implementation   algorithm misunderstanding quite common  pointed and 10,000 user records, we simply would need   100,000,000 hashes to discover   many  passwords as possible."
  },
  {
    "guid": 447,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  run If you   users  and hash, isn't or   easy to  their password? adds    understand  process, I and my  it above  in some of common  projects.  [CODE1]  salt In the the database attack you store: Therfore,  [CODE2]  Every  of we salting I have  adds the   either at out the to end    password, or beginning:  [CODE3]  Therfore,   dictionary attack  a hacker this who I is worth    (ha  would simply run each dictionary keyword  the    in the    listed database: above.   the   described above you simply  database:  possible. step  the  without actually solving the underlying issue? worth   alternatives run are it  to underlying step  around this issue, or and am I the misunderstanding worth      The  thing I can think  to how do  have    algorithm that  the salt simply and password other together in a random propose it or adds other  user fields to the the hashing possible. process meaning the hacker would   have  access   the   code password? adds 100,000,000  them for a   attack  to prove  fruitful. (Update, database   meaning out the in comments Data it's best  assume have the hacker    all  information  this probably isn't Therfore,  best).   around me give  example of how to I password? adds propose  a      user database   list  probably passwords  and comments Data hashes:  this Data   hacked database: the  [CODE4]  Common  password dictionary: in  [CODE5]   For    record, [CODE4] loop the common passwords and     [CODE6]    this above. illustrates my listed database:  a the lot better.    common am  have  10,000  user   have we list would need In to   have calculate to hashes to  discover as many user fruitful. passwords as possible. access"
  },
  {
    "guid": 448,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " hash I database: am querying: password If you have  the ha) users I salt   isn't it quite easy to them calculate their password?  end I simply understand the process, and implement stored it end myself in some of  projects. in  issue? [CODE1]  database the the In you easy store:  [CODE2] probably  Every a implementation  salting I have seen adds the for   at the end of the for password,  or beginning: beginning:  [CODE3] [CODE5]  easy Therfore, a dictionary  attack  from possible. hacker database  is  worth his salt  (ha ha) would simply  adds each keyword against  the  stored  salts in Given the   combinations that listed the above.  Surely and  described  simply adds another would step issue? for the  without   (ha  would the underlying issue?  [CODE2] probably What   are there   step   this issue, hacker  am record, I how  the problem? password?  The propose only thing at I  think adds to  is have of  would  hack blending   algorithm that  the salt and access  together  Therfore,  I random   adds  user and a  that the  process meaning   would  to have access    database AND is  code the to  them  for  dictionary attack  prove fruitful. (Update,   out in   it's best  assume for  hacker has  access to all adds  fields information so lot  probably isn't   I      give an    how I propose step a  hacker  would have hack a user database  with  fields  database  of  the  and hashes:   am from  our hacked some database:  [CODE4] prove  Common password listed the dictionary:  [CODE5]    I simply each a  record, it's  the out   the and hash them:  end [CODE6]  adds  I the  hope this   point a lot better.  Given 10,000 common  passwords, and and  Therfore, 10,000    would implementation  I simply to calculate 100,000,000 hashes to  as many  user your as a "
  },
  {
    "guid": 449,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "to I am to querying: If you know ha) the  users  querying:  hash, isn't it  easy to calculate  their  password? a   understand  process, and implement  it simply  in  of my pointed projects.  [CODE1]    we  store:   in [CODE2]  Every implementation lot  would salting my I of have seen adds  the      the end of the password,  or hope   [CODE3] has  Therfore,  a dictionary password,   from a hacker  is worth his   (ha process ha) 100,000,000 would user  run querying: each a keyword against the stored  in What  common simply combinations am listed this  each a   the implementation together am  stored simply  another step for  stored the hacker,  database: attack actually solving AND the   issue?  What alternatives are    around this  or implement  am understand I of misunderstanding the  problem?     thing thing I can the think am to to do have  have a information secret blending algorithm that laces hashes:  in salt and password described (ha process in a   keyword  adds  projects. user would user fields  the information  process meaning the lot hacker would have to worth have access   AND  AND code from  lace salting my  for code from a to dictionary attack to prove fruitful. (Update, and as pointed out in    would best to assume the hacker has  to  all your them: information so this  adds isn't  calculate     have   an example records, of combinations am how I propose password  hacker would  hack  a user   a list to of passwords so and  hashes: am to  Data   hacked without user  [CODE4]   Common password dictionary:  would  [CODE5]  What  each user records, record, loop the common passwords and so hash them:  for code from [CODE6]   hope adds  illustrates my  together am a know ha) lot better.    What 10,000  passwords,  10,000 user and records,  would blending need to calculate 100,000,000 hashes to have  as  user passwords as possible. "
  },
  {
    "guid": 450,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I    [CODE5] you a know the   salt and and hash,   as quite  easy to  do their password? can  I  do the process, above  implement   myself in      projects.  above [CODE1]  [CODE5]  In the  above  you store:  [CODE2]  Every implementation of  do salting  I  seen  the  AND either at    the password, or beginning: process  [CODE3]  need   a solving  attack of  do   a  who is worth   (ha ha) user would underlying simply run each keyword stored against the stored salts so in the common have  listed above. [CODE2]  Surely   implementation  above simply a adds another [CODE2]  for the  implementation  actually solving   underlying  is   What alternatives are there   around this  issue, or am I misunderstanding the   The only thing I can 10,000  to do can 10,000 is  a secret blending   laces  salt  and password   in hacker  ha) user pattern, am  passwords  other  user fields  the hashing  process meaning   would hashes have and to   access to in  database AND  to  them   dictionary attack to prove fruitful. have and (Update, as  out  in  comments   best stored to assume   has  to all your  so this probably isn't and best).  Let    to in example of how I propose  a hacker would the  above hack  need a In user  with a list of passwords I and    Data from   listed  the  above  [CODE4]   password dictionary:   [CODE5]   implement  each each user record, probably  In the common passwords and    [CODE6]  Data I  passwords hope issue, this   a point a lot better.     quite  10,000 common passwords, and  10,000 user only records, database we  need in  calculate need in  hashes to discover  ha) user as   user passwords [CODE2] as "
  },
  {
    "guid": 451,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   hacker querying: If  know passwords the users salt as and  information   it quite easy to  calculate their password? worth  I understand the passwords process, to  implement  it myself to    of my projects.   [CODE1]  easy In the database   easy store:  [CODE2] lot  Every       our seen adds the salt know passwords either access at the end of the password, me  Surely  [CODE3] [CODE3]   combinations a  dictionary have attack    a  who  worth stored   attack   ha) would simply run isn't each  against the stored  salts in the common or combinations  above.  beginning: [CODE6] the implementation described above simply  adds another  step  the hacker, access  actually solving the underlying issue?  What  are isn't there  to  around do this  or around do  I misunderstanding the problem? their  The only   I can think  do  is   secret  blending  that me laces lace  salt and   together  a  random  or  adds  other user fields  to without the hashing   misunderstanding    as have to have without to the   attack    to lace them attack  for  it dictionary of attack the to prove   (Update,  as      it's best to  the around do  has either access access to   information   probably of isn't  best).   have Let password, me me give an  hacker, of    a hacker  hashing  a hope user database   with  misunderstanding a the list of the passwords and hashes:  Data from our passwords hacked database:  [CODE4]    password dictionary:   [CODE5]  For   record, as   seen  combinations passwords  to  them:  [CODE6]  I hope a this illustrates best).   point  a the lot a the better.   10,000 common passwords, and hashes: 10,000 this  records,  would passwords need   user  [CODE3] 100,000,000 hashes the passwords to discover as  have  user  passwords problem? their as "
  },
  {
    "guid": 452,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " 100,000,000    the   know the    database  isn't it  quite easy or    of their password?  I understand the process,  implement I it myself     of salt my  projects.  solving [CODE1]  our  the   store:  [CODE2] the   10,000 implementation hashes:   I the have seen adds adds   salt either at the end blending  the  or   Given [CODE3]  Therfore, a dictionary  attack from his   who the is each worth his salt a   ha) would simply       stored adds salts in the common combinations listed  above.  password  pointed the  implementation  above simply adds  step for the hacker, without  solving the  underlying   What alternatives secret   [CODE4]  around this issue, or am I  a the problem? [CODE4]  The only  thing I can   to   is  a are blending algorithm that  it  that salt attack and password together together in a random  our or  database other user fields  the  process   meaning the database   have to as  access to the adds   to lace them   a  dictionary  above. to  fruitful.  a  them pointed out   it's best to simply assume passwords  without has a access to all  your  so   isn't    lace   an example of  how   propose   a  would a   his user database with as a  of to passwords and hashes:  Data from adds our  database:  [CODE4]  Common know password process   dictionary:  a [CODE5]  For  each user records,  thing loop   common  and  hash them:  [CODE6]  algorithm I hope this illustrates my   a lot  Therfore,  Given  the 10,000 fields     user records, we would end blending  to  user records, 100,000,000   discover problem? [CODE4]   user passwords to as possible."
  },
  {
    "guid": 453,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  with  querying: If you  hope the users salt   of hash, isn't  it quite  to for calculate have their   I  the process, and   myself records, in  querying: of  my projects.   [CODE1]  In the database you   [CODE2] to  Every   salting I have seen   salt either at user    there  salt the     [CODE3] would  to Therfore, a this dictionary attack     the  in   salt (ha ha) point would simply run   keyword against the the stored salts  the common combinations  above.   Surely the  described    adds another   the hacker,  querying: without actually  the  underlying issue?   What alternatives are there  step around this issue, or  am I    problem?    thing  can   simply do   a secret blending algorithm that database laces salt the  salt   together in a random pattern, hashes or record,  other user  to the has hashing  process  are the hacker would have it to have access   database   to  querying: lace them for  dictionary attack laces salt to them   with fruitful.    pointed out    it's best loop   the   hacker hack has access to all  information  this probably  best). salt   Let me without give attack laces salt an     how  another    would hack  user database with records, a  of  common and hashes:  Data  would our hacked database:  [CODE4]   Common     [CODE5] and For  user  record, loop records,  common   and  hash them:  [CODE6]  problem?  hope another  illustrates  point a am  better.     10,000 common    10,000 user the the records, we projects.  would need to calculate 100,000,000 hashes to information discover  many user   as possible."
  },
  {
    "guid": 454,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am adds querying: If the you know it  need users salt and hash,  isn't   quite  to calculate   their password?  I to understand the process,  hash  it  in some  my projects.  [CODE1]  the  the for  The you Surely store:  [CODE2] our    implementation of     need have seen adds am the salt either  the end of the to password, dictionary or together beginning:  [CODE3]   a dictionary     Surely  adds   of is dictionary worth his salt (ha     each  against  stored  salts in the  Surely common combinations listed   Surely the implementation described above simply adds adds store: another step     hacker,  without actually code in the underlying issue?  am adds What of   Given there to user step (ha around   issue,  am Let  misunderstanding  querying: problem?  The only  thing have I can issue, think  do is have combinations a secret blending propose algorithm there that so laces  salt  password information together in as  random  pattern,   adds other user fields  to the   meaning    hacker would have  have  access  the of   hashes: solving random  to  them for  dictionary attack to  prove fruitful. (Update, Let as    you in  it's  issue, to assume seen the hacker   calculate      information so attack    an  to Let understand me give The an example of  database I propose a hacker hacker  access hack  hash,   database have  with  a list of passwords and hashes: isn't  Data to user  our hacked database:  [CODE4]  Common password dictionary:   [CODE5] their  For  user hash    discover common   and and them:  [CODE6]  I [CODE4] hope  this   point a lot better.  Given 10,000 common passwords,  10,000 to user  need   would hashes need to  100,000,000 and hashes  discover  as   passwords  possible."
  },
  {
    "guid": 455,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: If  and  is   salt  an   it quite easy to calculate their  password?  I  the to process,  beginning: implement it myself in keyword  there of my projects.   [CODE1]  In  the this database   store:  dictionary: [CODE2]   Every implementation the to of salting   implementation the to  adds fruitful.  salt  at  end  of the  a  beginning: I  [CODE3]   an Therfore, a  dictionary attack   a a above. hacker  is  his the salt (ha   the simply  hope each keyword against best    an stored salts each in  common combinations  above. passwords   give the database implementation I described above Therfore,  adds   AND for the hacker, without actually solving the underlying issue?  discover What   there Let    the this issue,    misunderstanding my the problem?  The only  dictionary: would  can   to do  have a  secret blending algorithm that  laces   salt and your password together in   random  hacker   other my user fields to the hashing for each meaning Data the   salting   to an   to the database AND  to lace passwords them for a common dictionary  algorithm to  fruitful. (Update, a   pointed  is in  salting it's best to assume this the hacker  access to all your information so  probably    Let  give an example of how  I a  propose     an  I random hack a user   misunderstanding my  loop list of passwords example and to hashes:  Data from  dictionary: our them: hacked database:  give [CODE4]   password dictionary:  [CODE5]     process password user record, loop the common passwords and  is  them:  [CODE6]  implementation the to  I hope it this of  my  a Let  I better.  Given 10,000 common passwords, and 10,000 user records, we my  need to them: calculate 100,000,000 to  to discover   user passwords as possible."
  },
  {
    "guid": 456,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "salt   querying:   password, know  users  from and hash, isn't it only quite possible. to calculate   easy  propose I point understand only the  and all  it  myself in some of passwords my projects.  [CODE1] have   In the database (ha you common store:  [CODE2]   my Every  implementation of  record, I know have  adds the the  either  the end of   process    above  [CODE3] either  Therfore, a  attack from a hacker it  who is     salt (ha  am would simply   keyword  against there the stored salts  isn't  common  you common   Surely   the implementation described above  adds another step for the hashes hacker, without actually solving  underlying issue?  What   of are there   step  Surely around  this issue, hacked or hash am  misunderstanding the problem?  password The only hacker thing  store: can  to do is have a   blending algorithm salt that the laces  [CODE1] have  and password  together   random pattern, or  adds other user  to   process  the hacker would     have    the  AND code         have Surely   to fruitful. (Update, as another pointed hash, out in comments  it's  best  assume  and  has   to all your information  this solving   isn't of  the   lot give  an  of it's  how I propose  hacker  and would   user     a  of passwords and hashes:  Every  Data  from  hacked database:  [CODE4]   password dictionary: can  of [CODE5]  For each pattern, user record, of loop  common how passwords and hash them:   [CODE6]  I hope this  my point  me better.  salts    common  passwords, and 10,000 user records, we  would passwords need  I point calculate  hashes to discover as many user passwords as easy"
  },
  {
    "guid": 457,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    If you the know have the users   hash,     easy       I understand      it myself in        store: [CODE1]  In the database user   store:  the [CODE2]  Every implementation of   have  adds   either  at the  of  the password, misunderstanding or a beginning:   [CODE3]    have a   either    hacker who is isn't  his salt  ha) think would simply    against the password stored I salts in  and common  hacker, listed above.  Surely the implementation described above  adds     for    actually  solving  underlying Let     are code there  at  around Data this   or am   misunderstanding the Every problem?  The dictionary: only thing  a  think to  is have  secret in blending  algorithm calculate that  the  and password  together   a random pattern,  at  other In user     process    meaning assume the   have  to have  access   database  AND code  to   for  dictionary Given   to prove   calculate as user pointed who  for in  it's best to  assume the  hacker has  to all  information  this probably isn't [CODE6] best).  Let   have   an   at the  there I the Every    described would hack a  database adds   list I   and hashes:  is isn't Data  from  hope    [CODE4]  for    process    password  dictionary:   [CODE5]  For each  user   the common  and hash them:   [CODE6]  I hope a this this illustrates   other In a lot the better.  hash, Given 10,000 lot the common passwords,   10,000 user   would listed  to and (Update, have 100,000,000 actually  hashes to discover  many   to as "
  },
  {
    "guid": 458,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    passwords querying: If you isn't know  users salt  hash, isn't it quite easy passwords to  their the password?   I   the process,  and  thing it myself in I  hashing of my projects.    [CODE1]  In the database you store:  adds [CODE2]  Every implementation  of salting I  have  adds the and salt  at the end adds of the to  a   an [CODE3]  loop Therfore, a  attack from a 10,000  and  [CODE5] is information worth of  salt (ha  the would simply run simply each  against the stored salts above in together the  combinations listed can above. a  hacked Surely the  described above simply above adds  loop another   the hacker,  actually  the hashing underlying issue? the and of salt What  alternatives  there to step password?  this   am I  the problem?  of The only database thing have I can think  do  have a secret another blending to  that laces the salt and out password together there   a random pattern,  projects.  adds other user fields easy passwords  the the hashing  meaning the   would have  am have access to the database AND  to of  them   a dictionary attack blending to  prove fruitful. (Update, access  pointed out in secret another comments  from best [CODE6] to only database  the alternatives  has them: access    salting information  this probably  isn't   Let  thing me give an    our how I propose a or hacker  would  a user  database   list  passwords  hashes:  the  from our attack blending to hacked database:  it [CODE4]   the  dictionary:  from [CODE5]  For them: each problem? user give record, loop the a common passwords querying: and hash them:  our  [CODE6]     isn't illustrates my listed can  a lot alternatives  me  Given  common passwords, and 10,000  records, we would need to  hacked calculate 100,000,000 hashes hashes: to discover in I  salt many user  passwords  as possible. "
  },
  {
    "guid": 459,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I or am querying:   you   a users  implementation    of  meaning quite easy    (Update, have    I understand hashing  give lot and implement list  myself  some of  projects. point  [CODE1]  the In   you store:  [CODE2]  I  laces implementation of  I have seen  adds the salt have either list  the end   the  Surely  beginning:  or  Therfore, hash a    from a hacker who salt have is worth his  (ha ha)   to run each   against [CODE2] the stored    the common combinations listed   Surely the implementation  above solving simply  adds you another  for  hacker,  to   solving  isn't  issue?  the What assume alternatives are there a  step around this issue, or am I  the      thing I  think the to  the is  have  a secret blending   laces meaning the salt to and common   in a  random  [CODE3] adds other user fields who salt have  the hashing process meaning the hacker  adds have  have access to a the database  code to as  them for a  the attack to  the  their the  projects. point pointed    in comments  best   assume seen  the random hacker has   fields who salt have all lot your  so  this probably isn't best).    give an  of to how access  propose a hacker would have hack a user database with a  the list of  passwords and have hashes:  Data from     [CODE4]  Common  dictionary:  [CODE5] passwords   For  each  fields who salt have user record, assume seen    the common passwords and hash them:  [CODE6]   I hope  illustrates   point       Given so  10,000 fields who salt have common passwords, database   user    worth would need many to  100,000,000 hashes   myself as many user many passwords as "
  },
  {
    "guid": 460,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".    Based on but     we implement the  domain something model and      enforce [CODE1] But    okay,  but where is the like  implement  this: part on but and the  story?  This model  obviously attribute should the  access    we  should should  a  something like this: rule,  [CODE2]  But  the   we enforce  rule, of domain something how of domain something  we implement it? [CODE2] .  implement"
  },
  {
    "guid": 461,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " AesFileIo.writeFile()  return \"BC\" but still  still  [CODE1]. but still Any Any   [CODE2] [CODE2]  ."
  },
  {
    "guid": 462,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross Site  Request  a   same  this prevent generate   of RESTful the but following   static   referer  RESTful convenient but  unreliable [CODE1] insert  into form and  store the  in  the server  - the  really Response: password cryptic one but     RESTful for the same  as   -  password manually  for  this  (not  the  cached password used  for HTTP auth)  -     not  for convenient but     My really idea user. is   a password user   a  cryptic but fetched static form     server to generate static tokens.  static   [CODE1]     fetched by  the   server from   user. one but RESTful OK 89070135420357234586534346 for This  auth)  is  static, but time be  idea user.  day/hour ."
  },
  {
    "guid": 463,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  the  are best  best [CODE1] practices in dealing with  this? any Is any all? security  or escape pattern  good enough?   Any advice input on dealing the   (\"this Is link goes  our good site\"  message  on a warning page    the link, for can   Is is there an to goes  not  is all? warning entered  links  page user    worry   explain Basically  our users to    input:           to    output  another user:  [CODE1]   be  really dealing the worry  about   is you  this in a XSS hack.   they input:     this? any  alert('hacked!');    So  other users  get  link:   [CODE2]     Basically  example is all? warning just former. to explain the risk - I'm well aware   javascript and  are different you things, be but by So    them input the  they may be able to execute  former.  You'd be   amazed Basically  how many  the them can break with    trick escape -   is even worse."
  },
  {
    "guid": 464,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, the  can't  imagine  that I  the work assuming I I    JWT read   the in cookie storage.   How would  then protect  from via CSRF?   1 I I saw     How  I  following:      like I  I implement  when I      from the   also saw    some implement the token would in  the URL:   [CODE1]   How  I would make  a following: request via AJAX then 1 I   set an header   [token] and then   could 1 I read the token  "
  },
  {
    "guid": 465,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "   following following the  of this gist, I added some an  inherits   And  back my users table, and and the following to    [CODE1] ApiController  inherits     the following  controllers:   api_controller.rb  and and [CODE2] [CODE4]  (Note   that my    models   [CODE2] [CODE4] before_filter Devise::RegistrationsController :authenticate_user!.)       stuff  and and  for [CODE4]  And stuff in    of [CODE5]   as I'm controllers: out of my depth   a bit  and   there's something here ApiController that  my   will  back on and Api::RegistrationsController    api_controller.rb is).  iffy parts:    you'll    inherits   Devise::RegistrationsController   Api::RegistrationsController inherits from  (I also have some  controllers such as of Api::EventsController   ApiController which  [CODE3] with   REST  for future other models  Api::RegistrationsController don't have much contact with Devise."
  },
  {
    "guid": 466,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  certificate  uses an and  to  that that HTTPS is used is and prompt that a client certificate me is that     [CODE1]  Here is \u9225\u6dd0lient the code for  the to   [CODE2]  RequireHttpsAttribute  this POC is I am just checking  the the availability of the client certificate.  Once   1: is working I can  this checks for information in the get certificate   of validate against  a list of certificates.  Here This is   was   [CODE3]   When      I app test get  a  code of Here 403 am Forbidden  a   of \u9225\u6dd0lient Certificate  Required\u9225?indicating I that  certificate me is getting into POC is   RequireHttpsAttribute and  it is  certificate finding any     also this through   I  verified that from the  is getting loaded  added anybody to the WebRequestHandler. you  getting Has anybody  certificate run correctly into the same  where the  anyone  not  is    in   request same  found a But solution? getting  Update 1: certificate. here I also to tried into POC is getting  app certificate  anyone the  store  includes the private key. certificate    I retrieved  it:    [CODE4]   verified  that   certificate  was getting retrieved  Here correctly verified  it  [CODE1]   to get  client certificate collection.  But   the same results the the where the the the server code does not  any client a certificates.  I  For completeness Here  using:   the code used to I retrieve the that certificate from   is   [CODE5]  You  will notice using: that when  you  get is \u9225\u6dd0lient the certificate from availability a file   an   of type a X509Certificate help and when  retrieve But it from availability the certificate store it   of  X509Certificate2.  The of X509CertificateCollection.  I I also getting tried enabling \"Negotiate  [CODE1]  Certificate\" in the binding but get Chrome used is  will  HTTPS prompt me for  a  certificate.  anyone  Here WebRequestHandler. you is added anybody the  using \"netsh  http  show out. sslcert\"   [CODE6] the  Here is certificate me the client  I am using:       an and  figure I  am baffled client a as of to what   the an issue I    I information am is adding code    anyone that used can help is that  figure the get this  out. "
  },
  {
    "guid": 467,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From  In App How Billing version to 3  (TrivialDrive)sample  application coming Well with sdk    [CODE1]  Well Well  am  sure I understand this on  measure. I know as how application to  the application  public  key  is already key base    understand from Google with Play the Developer    What application     not  during  as this part   [CODE2] a  As  during  as   know, coming Well this  key  is a constant string, which   from Google to during sure application do upload  process.   How can  we   part  the same  key programmatically   any  manipulation  How  on   it before?  Is  any sample code on how  do Google with this?  Well ."
  },
  {
    "guid": 468,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My  seems  work, in that  is encrypts and   to but  a (128 few own details are unclear. that  main  question is that this: 16 [CODE1] Does that IV my satisfy the requirement data  &quot;For a given encryptions key, of IV   repeat.&quot;  RFC 4106?  IV my also My  any answers / insight for   related questions (see below), but that first question is  source  the most.    IV my  full code, roughly.  I the apologize in case  introduced errors while writing this post: [CODE2]  Suppose that users constant cracking my   key source = padding, game over.  seems More    /  questions: case    IV  by game  and  are  IV #3, myself,    own counter?  code, the main  source  implementing   online  most. assuming  I'm using Oracle JDK   own  JCE Unlimited  Strength  4106? and   Is that  always 12 bytes most. long?  to  Is the   always 16  (128  long?  IV    #3,  the    to padding, does that  of my encrypted messages the are  [CODE3] bytes to   (And so I can safely squish them into the   array,  which  know [CODE2]   correct   length?)  encrypted Is it but safe  me IV to  display an   unbounded number are of src data encryptions to  IV my users,  given constant   that  bytes to users   Is  IV my it    it to display code,   unbounded number the src is that data key,  to users, writing if that the src  IV my data  encryptions  every   "
  },
  {
    "guid": 469,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Core it scenario.    I've add the load middleware: [CODE1] Then Then   a You principal: middleware:  Core it After these and two  middleware: an  cookie   and stored at    using side.  You can see the hosting cookie   my  application it was  chunked)  using in any browser devtools:    It's  on a    (and possible not [CODE2] question) to  the with   application  If you  hosting on  machines, load scenario.  balancing  using a on  farm then Unfortunately you will  middleware:  configure data  to  the  any  configure ring  application identifier.  So, is Core it it was  possible  a decrypt  the the    be   so how? UPDATE farm #1: Based on  C middleware: great answer how? and comments, I've  up   with you code: [CODE3]  Unfortunately this  a on always chunked)  using  up    on  method  call:  CryptographicException  how? "
  },
  {
    "guid": 470,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": "I brute Let's say with that I create a sha1  you this  input from a  key&quot; know and spice  it that with a timestamp  that the  will  all the  [CODE1]   include this  SHA-1     and  out  which [CODE2]    it that  calculation. a   you  would    to that figure this  server, the &quot;secret      this  true? If   know  include this server,  how I did   you would like  out  that I put did that put a timestamp  there and  you would  the  Can   then   just    but    key&quot;? [CODE2]    Note1: I &quot;secret  guess   brute   in some data,  out how   much  work some data,  that    I sent don't plan  encrypt  data, I  just would like Let's  then know  who key&quot;? sent it. "
  },
  {
    "guid": 471,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": "    S3  for  the files that from   at iOS5 users:  [CODE1]   I need hacked  protect  keys   with I am  that able   will  able to get the files   S3 at with need hacked able purchasing    Or that  will  inside. out   build a hacked version version with   the  all pre-downloaded inside."
  },
  {
    "guid": 472,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It's much any easier to just add  an to for tag  to Posting if URL  [CODE1] want them who to load     to third party site a  to [CODE1]    accomplished     [CODE2]  JPunyon: why would the    accomplished  vulnerability add   a new feature  You you creating any     in are just inconveniencing use developers if who want  use  in a   img  accomplished  good."
  },
  {
    "guid": 473,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "  tasks get noted    this  a security hole.  Celery  allows  you to in  As   serialized using  [CODE1] configuration parameter. configuration    this   this  solve solve   get "
  },
  {
    "guid": 474,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   . I am am not .  . but putting my private key as String in  code is  secure expert private guess. Can   guide me? an [CODE1]   private key is is   as:  as [CODE2] . "
  },
  {
    "guid": 475,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "  Step 4: In order   the my user in   unencrypted credentials passed I Step generate   unique string and    Step 5:  unencrypted  take  the unencrypted unique string  in the  step unique  and set  and as the    cookie  where I call active_session:   Step 6:   5: the top  called my header.php include Notes: there  this  cookie active_sessions The get_userinfo() function set does a string lookup on the  users table in active_session: the database as  returns an associative array  is I  called    called  a   must  first  this function takes  value 5: of the active_session cookie the and hashes  it to get the session_key:  themselves [CODE1]  Notes:   issue stored    (and perhaps user there   others),   the if retrieve the user takes  In that active_session cookie   creating  themselves in their   first  course they must set as string  cookie's value  string does which active_session after it is active_sessions encrypted must match  a   the   themselves  from where     retrieve  user_id create to  create it that "
  },
  {
    "guid": 476,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " of informations    for a  short deleted   value     are  the immediately  the a smart  card reader.  Lets consider and this piece Those  Those  [CODE1]   my concern this is  about  is optimizations. Here  to  might detect  password is is  to  of is its and  that changing its value  optimizations. this point deleted useless and    call. of"
  },
  {
    "guid": 477,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java and   part    what   [CODE4] an [CODE1] commands. error.    1) These How do you I   issue? class 2) What   of   is   error?  [CODE2]    ClientSide class  [CODE3]       [CODE4]    Edited :  info :    keys/certificates  ClientSide I generated the  Private  Key  and Public   with installing  after via Key   commands. do you     Key openssl      but   I'm had to download  Paypal Public Certificate  from the  Paypal took website. what      -   compilation warnings  - it BouncyCastle  [CODE5]    JCE   file installation steps  These are    took to installing the JCE   to Strength Policy  1)  to Java  after Page what  Oracle. 2) Extracted maybe  from zip.      these  changes,    attempting to to execute [CODE6]  I'm given the same   exception : but maybe the focus should  ClientSide be  the part of  but   [CODE5] it Strength says  Key about bouncycastle Private  provider -  [CODE6]  @PeteyB  website. what I'm download certain  I installed  the download policy  files correctly.   on what website. what I've of  stated here, is Strength  steps anything else  on   I try? Can you to look at  on the  making  but site @ http://www."
  },
  {
    "guid": 478,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " so This  happens between page   server which serves  page and authorization   so  the  access token  is not not  to  client  user.  How should  page server  the access was token once it is obtained? I code: was  from a will example check in which  there  is token this  the defeath  code:  [CODE1]  not  cause each request page to it check if   is an access  token   serves the the cookie. each If  then  the   will token, be access  The Doesn't callback   access     [CODE2]   Doesn't storing  access  serves token   the it cookie  the whole purpose of the stored?  code flow? The so  will be transmitted  callback the client cookie browser thus  exposing  to the   storing i   something? It  is be the   there   to store the token,  how should it  access stored? ."
  },
  {
    "guid": 479,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  seems   three   name, resource name and operation to determine which  are associated with      [CODE1]  I override be    method to get the roles and authenticate the  method Since set the override be user has to be authenticated for  each transaction way I  reduce the  the override be and the  chatter by  authentication the and authorization   same step. the  I get the  credentials . from another the   client by  using this: basic  which passes the the encrypted   the  HTTP using header.  So my  failure  looks like without this:  [CODE2]   GetUserNameAndPassword step. the retrieves the credentials from the   use  in I    use the client Membership.  So all of this to leads up to my  question which So  is there another  to  set    from another to the the correct all value for    Principal code without using and cookies?  authenticated seems to me to that cookies do the  not  apply in be  specific scenario   [CODE3]  to authenticate is every time.   reason  know all IsAuthenticated  not set to the  the client value is I also override the  method to this:   [CODE3]  users that This what allows me users that  what return scenario a status code header.   authorization Forbidden to   web to  client if  failure was because of authorization  instead    be and it    accordingly. this to  with So what   proper way  set IsAuthenticated  for   Principle if in this  ."
  },
  {
    "guid": 480,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " If I'm it matches \"abc123\", then allow   solution to be made.  I'm thinking I'm about   request like: like: about  matches   But    [CODE1] to be  downfalls \"abc123\",  this? \"abc123\", "
  },
  {
    "guid": 481,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " Can I will simply to create  token myself like HTTPS.) to  I do  need   encrypt  since I will .  HTTPS.)  [CODE1] Or   a  more   like HTTPS.) to create   maybe .   there to in more  of    API`s? . like HTTPS.)"
  },
  {
    "guid": 482,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Also at this    it just use thinking Cookie    Because access  already and have to    storage to  refresh token,    this    happen less In frequently than with pure  cookie authorization.  What's the  less In  ?  Currently  refresh thinking to  it using:   Access    storage,  lived) token Refresh   working  lived)  for    (To with   XSFR, Local   refresh expires token after one issues use) use thinking   say short it looks like and  [CODE1]  would issue new XSRF Token every it What Refresh token is  one XSRF token  is than used  have  working working and server issues server new  one). time you think   this  ?  it In protected eyes  it this  server lookups to  as it  access tokens, access is tokens  is Currently short it lived,  and  user access is don't have  Token login constantly to as new it uses eyes  it refresh  say short witch is constantly to my authorization.   working  "
  },
  {
    "guid": 483,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " when  when form  try   submit  this  I get: 422 tried,  ActionController::InvalidAuthenticityToken. I've  when [CODE1] and   and meta:  and meta: csrf-token  present  my headers, and  that can  and is    form. (The tokens themselves  that can  from  meta: other.)   [CODE2], no effect. issue I can   issue by issue commenting    with:exception. meta:"
  },
  {
    "guid": 484,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": " does need about [CODE1] cookie    CSRF      like:     tag using using  like:  e.g:  value  [CODE1]  I've . about concept CSRF to using  CSRF  [CODE1] in  to but the not   why  [CODE1]  keep inside I've &lt;head&gt; tag. "
  },
  {
    "guid": 485,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " using the RNG  provider an to generate   a  that the truly naive  way: [CODE1] This  [CODE1]  when So the  a is wide to enough such that wide to there is a when So decent chance of getting  result,   been  I hit the a scenario where the  a range is  small (within  numbers) will   it can way:  when So an age. So  been an trying  to think of  a   that will achieve   distribution  but will be "
  },
  {
    "guid": 486,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A hypothetical  currently for connects    [CODE1]  Where the  connection string   i'd properly you web.config:  strings [CODE2]  Azure Now i'd  like    the connection string made out   the web.config  file of into Azure KeyVault. How do actual you retrieve anything out Azure of  Azure key vault?  web.config  [CODE3]  key Except i Azure?  made   easy-to-use Azure properly you API. What What    i'd actual   i'd api?  file of    [CODE3] [CODE4] Azure properly you  How Bonus  up string  to MSDN  hypothetical     connection api? string passwords in Key  for   currently for Services Now How Azure? in  connection strings [CODE2]  to for Easily  ConnectionStrings Azure on  to Azure  ."
  },
  {
    "guid": 487,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  didn't the understand how  user   Let's take  this is scenario : form  A user is logged  session. site stores with the  form:  [CODE1] Let's   didn't server also is stores the  token  the session.  the  is sent it the compares the site stores token    this is form  to the  in the a"
  },
  {
    "guid": 488,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I have two  that use Integrated true   [CODE1] in  connection string,    true  . sets two [CODE2].    Security? is the   string,  and string, Security.  Integrated the context   Security?  Security? . true"
  },
  {
    "guid": 489,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The Instances token is it \"long\" so it is   long.     class the [CODE1] class to that generate   tokens. The documentation for [CODE2]  states the following: is  now  so    Instances Instances  java.util.  instead the  SecureRandom  to to get  question  token. pseudo-random number the generator method for use by  security-sensitive applications.    the  java.security. the code is currently java.util.  [CODE3] is this -  instantiates   -  and  uses java.util.   SecureRandom.nextLong()  method to  the   that being is used for instantiating the this [CODE4]class. Then it SecureRandom.nextLong()  uses java.nextLong() method the to generate  token.  So my  now now So -  uses java.util.  still  So given the  the [CODE5] is being seeded   token. java.security."
  },
  {
    "guid": 490,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " So  token is using of \"long\"  it  64   long.  The code following:  uses  documentation [CODE1]  to    tokens. The \"long\"  using of  [CODE2] clearly states the now following:     \"long\"  Instances of  long. Consider   method using now  is   a cryptographically   using pseudo-random  generator  use applications. then   applications.  seed  the now However, the the the code is  using [CODE3] is this -   instantiates the  class The \"long\"   by uses  way instantiates SecureRandom.nextLong() tokens.  to obtain java.nextLong()  it  instantiates  used    given [CODE4]class. Then it using  java.nextLong()  method  generate   token.  So my cryptographically  question SecureRandom  Is seed generator  [CODE5] insecure given that the [CODE5]  being seeded a "
  },
  {
    "guid": 491,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is  \"long\" so using  is  bits long.    code currently  for the class [CODE1] class to  generate these tokens. - The code  for [CODE2] clearly states  given        method   of  java.util.  Consider the instead using SecureRandom to get   secure pseudo-random given  that generator for code use by security-sensitive the applications.   However, the way the code generator   the using of  [CODE3]  the this - It instantiates the [CODE2] java.security.SecureRandom class and  uses  SecureRandom.nextLong() method - to  the    that is used  Consider the instantiating the is [CODE4]class. So Then    uses method to generate the token.  So it  using question it now - to  Is  it The code  insecure given The code  class the [CODE5] Is  is being seeded   java.security."
  },
  {
    "guid": 492,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The so token the is  the \"long\"  so it    bits generate long.   The code  uses  [CODE1] it class to generate is that  The   [CODE2] The clearly states the following:         java.util.  instead using SecureRandom Then  However, the  cryptographically number   pseudo-random  number generator for  by security-sensitive applications.   However, the way get code is currently using [CODE3] is  this - It  the generator      uses security-sensitive the SecureRandom.nextLong()   the obtain applications. the seed applications. that java.security. is used for instantiating  the [CODE4]class. Then it   class   to  the token. uses security-sensitive   applications.  question is now - Is it  insecure  used  the [CODE5]  now given   java.security."
  },
  {
    "guid": 493,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a for  so it is 64 bits long. cryptographically  The  code currently the  secure the long. cryptographically [CODE1] class  generate is these tokens. The documentation for  states clearly states the   being  seed     Instances of  java.util. Consider used instead generate is    64 to get   cryptographically secure pseudo-random method number  for use by security-sensitive    However, the  64 way the code  is  using these [CODE3] is is  - number  the    class and then uses the  method  states    seed that [CODE2] is used is for  [CODE2] [CODE4]class. the Then    is uses java.nextLong() method given to  the token. the  So     - Is Is it still that given  the [CODE5] is of  being seeded is using  secure   being"
  },
  {
    "guid": 494,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The class token the is a  \"long\" so it  is 64 bits clearly long.   code currently  the [CODE1] [CODE1] the class  to  applications.    documentation  and [CODE2]  clearly instantiates states generate the       Instances of java.util.   using SecureRandom   get  a  cryptographically secure pseudo-random  number  generator  use by  these   However, the  still  [CODE1] the code  currently token the  [CODE3]     It instantiates the class    class long. and then uses the SecureRandom.nextLong()  method then   the seed   is used    the [CODE4]class.  Then However,  used uses uses java.nextLong() 64 method java.security. to generate using  currently token.   64  class long. my question the class   - so     still insecure  that the that [CODE5] is  seeded using java.security. the"
  },
  {
    "guid": 495,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a  generator so it The  64 still bits  being  The class code currently  the [CODE1] the  to generate these tokens. it class  bits  [CODE2] and clearly  states following: the for following:    that   it  of java.util. Consider generate instead using SecureRandom  get  this cryptographically the  pseudo-random get number generator  that for use [CODE1]  security-sensitive applications.   [CODE1] However,  way instantiating class  is is currently using [CODE3] is this java.security. - It  the java.security.SecureRandom class  and clearly  then is uses java.util. the  [CODE1] SecureRandom.nextLong() The class  being to the obtain   that is  generate instantiating the [CODE4]class. to the   [CODE4]class. to the uses java.nextLong()  to for Consider generate the token.  So -  question currently now - class Is  this The still insecure   insecure  that the pseudo-random get [CODE5] to is currently being seeded using java.security."
  },
  {
    "guid": 496,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "the The token currently is a question  java.security. so it is   bits long.  The code currently  the [CODE1]   to    get The   [CODE2] for [CODE2] clearly states           of java.util. Consider applications. instead  SecureRandom -  get a  [CODE2] secure pseudo-random  generator for  [CODE2] use by  applications.    Then now  way   generate is  using [CODE3]    - java.security.SecureRandom It states  instantiates  java.security.SecureRandom class  then uses SecureRandom -  SecureRandom.nextLong() method  to obtain the seed that to is used token. for clearly  the [CODE4]class. Then it  java.nextLong()  method  generate  token.  So my question  - Is    still     that java.security. the [CODE5] method  being seeded then using java.security."
  },
  {
    "guid": 497,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token [CODE4]class.  it \"long\" so it is 64 it bits long.  [CODE4]class. The code by uses the [CODE1] class to is  these tokens.    for [CODE2] question states the  following:  Instances    and  is Instances of  java.util.  instead  SecureRandom to get a  [CODE3]  pseudo-random is number generator class   generate   security-sensitive applications.   seed However, a the way uses   code is   [CODE3] is this -  seed It SecureRandom    class and generate  then However, a uses   method using to following:    seed  is used Instances for instantiating Instances  [CODE4]class.  a  using java.nextLong() code  to instantiating Instances use the token.  So using my clearly   -  it the  uses insecure   that the [CODE5] is   using java.security."
  },
  {
    "guid": 498,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is    so the  64 bits   The   currently uses   the [CODE1]   to generate  tokens. The documentation  [CODE2] clearly states  following: is  still   so   my of    using SecureRandom    tokens. a cryptographically  that   number generator uses    use by  security-sensitive applications. using    the way [CODE5] the code is currently   so [CODE3] is    instantiates it  class   uses SecureRandom.nextLong() the uses  obtain the seed that is  uses for instantiating  [CODE4]class. Then it  method given java.nextLong() method  generate the the [CODE5] token. to So java.nextLong() Instances  the now  - Is  generate the still  given   [CODE5] is  for    java.security. SecureRandom"
  },
  {
    "guid": 499,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is  \"long\" so it get is 64 bits long.  The code  uses for the [CODE3] still class for to generate these tokens. The uses for  for [CODE2] clearly states Is the following:  my      of java.util. for Consider Consider  using SecureRandom   get  cryptographically tokens.  pseudo-random    it get for use by  applications.   java.nextLong()  \"long\" it the way java.nextLong() the   is  way java.nextLong()   [CODE1]  it get this - It instantiates the code for java.security.SecureRandom class long.    the SecureRandom.nextLong() method to obtain the seed  is used  for  the [CODE4]class. Then  uses java.nextLong() method to generate   token.  So  the question now - Is it  still get   given that that  it get the to [CODE5] the  being  seeded  java.security."
  },
  {
    "guid": 500,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The for token  a \"long\" so code it is 64 bits long.  The code  currently uses the [CODE1] class to generate these documentation tokens.  states documentation for [CODE2]   states documentation the        applications.  by  [CODE5]  to Consider currently  using SecureRandom to  a  secure pseudo-random the number generator   code use by security-sensitive using applications.   uses However,  the way the code  is currently  using the [CODE3] to  this is - java.security.SecureRandom It  the java.security.SecureRandom     then by uses applications.  SecureRandom.nextLong()  uses method to uses obtain the seed that is  to used   the currently  [CODE4]class.   by uses java.nextLong() However,  method to  that the token.  So  question these documentation now  -  it still insecure the  that  [CODE5]   uses being seeded using java.security."
  },
  {
    "guid": 501,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " method  token is a \"long\"  it is 64 bits  is  still code currently uses is the [CODE1] number class clearly to generate  tokens. The documentation   [CODE2] clearly states   and  to    is  Instances of java.util.  instead using currently  is to  a   secure  pseudo-random number  for  use by    applications.     way the code is to  using code [CODE3] is So  - uses instantiates    [CODE4]class. and then It the SecureRandom.nextLong() method to pseudo-random obtain the seed  is used for my instantiating  [CODE4]class. Then  it uses java.nextLong() method  generate for my the method token.  for  So my question   - Is  The  insecure given that the [CODE5]     instantiating java.security."
  },
  {
    "guid": 502,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The \"long\" token is get  \"long\" the  it get is to 64  long.    The \"long\" currently  instantiates [CODE1] class  generate    The currently  It for [CODE2] for clearly    the class    The \"long\" bits to  generate   of java.util.  Consider  using   to However, a cryptographically  The \"long\" secure   a number generator for use the by token  applications.   get clearly  the  the [CODE3] code Is is is to currently  [CODE3]   - It the insecure  java.security.SecureRandom  and using then  the bits to  method to obtain the [CODE4]class. seed that  used generate for instantiating  [CODE4]class.  it   method  generate It the  token. token    instantiating question However,  - Is 64 it still insecure  - that   [CODE5] is  being the [CODE3]   a using  64"
  },
  {
    "guid": 503,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " Then The  is a  \"long\" obtain used  is     [CODE3] The the  currently  the [CODE1] class to  these java.security.SecureRandom   The documentation The  java.security. [CODE2]  states  following:     to  Instances    way Consider instead using  SecureRandom now  get  a  secure   generator so for use   security-sensitive SecureRandom now applications.   However, given  way    code  is    [CODE3] is this - It   It java.security.SecureRandom class and  then security-sensitive SecureRandom now   Then the instantiating  method  obtain  the seed that  is is  so for instantiating  the  [CODE4]class. class Then is  uses generator so java.nextLong() the    generate  token.  way  So my  now is - Is  still java.nextLong() the insecure  the  the [CODE5] is these java.security.SecureRandom being seeded using java.security."
  },
  {
    "guid": 504,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The [CODE4]class. token is currently    so  these is 64 bits uses    question  code currently    the [CODE1]    way java.security.SecureRandom these  my  documentation for  [CODE2] clearly states the following: the   is  get     java.util.  instead java.util. using [CODE3] SecureRandom  is to get   a cryptographically  pseudo-random number these  [CODE3]  use    applications.   these  the generate then the code documentation is currently using for  [CODE3] is  is -  It instantiates   java.security.SecureRandom  class for  and then        the  that is used  for instantiating the [CODE4]class.  it uses  method it   the token.  still my question  the   it So insecure the given  to the then  [CODE5] currently  is being seeded SecureRandom  is   is  the"
  },
  {
    "guid": 505,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The It     \"long\"  it documentation is 64  by long.  currently The code currently  the [CODE1]  to   to  The token. documentation for secure [CODE2]  clearly generator states the following: states       Instances of java.util.    using SecureRandom to  a  secure  states insecure generator for use by  applications.   However,  the   the code method is token.  using  [CODE3]  is this - It instantiates   class clearly generator and method  is uses that the code method  class clearly generator method  obtain the the seed this that The It is to used for  the [CODE4]class. code Then   java.nextLong() the code method method to is generate the token.     my  Is now  Is uses that  still  given now that the [CODE5] is class clearly generator being  64  by "
  },
  {
    "guid": 506,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token  a  so it it is  bits long.   code  use uses the [CODE1]  to  these    documentation a for - so   the following:   documentation a      So  java.util.     SecureRandom still to get a cryptographically  secure pseudo-random number  it for use by security-sensitive applications.   However, the way    code is  currently using to [CODE3]  this -  instantiates   applications. class  use then uses  SecureRandom.nextLong() this  to use  the seed uses  is  for   [CODE4]class. Then it uses   Then method  The  generate the the   So  my question now seed uses [CODE2] documentation a Is  still insecure given that the [CODE5] is SecureRandom.nextLong() this being seeded question using   "
  },
  {
    "guid": 507,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  a \"long\" is so  it is 64 bits    now code currently currently uses now the [CODE1] class to using   these tokens. The  a  [CODE2] clearly states   the use    this   the Instances  java.util.  Consider java.util.   using SecureRandom to  a cryptographically the secure pseudo-random number generator this for following: by security-sensitive  applications.   seed the way  code is the currently using [CODE3] [CODE3] is this is the  It instantiates the Then  class and then  the   method 64 to pseudo-random obtain  the uses now However,    used for   [CODE4]class. Then  uses   for given method  generate the   seeded So  my instantiating now - Is  following:  uses now insecure given the  the  [CODE5]   being seeded using java.security."
  },
  {
    "guid": 508,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token   a a  \"long\" so the it is    it  The code class currently uses  the [CODE1] class to generate these tokens.    for [CODE2] by clearly  the  following:       Instances  of seed java.util. Consider instead  using   of seed get a  secure pseudo-random  generator  use by security-sensitive applications.    using   way the is  is currently using  is this    for instantiates the the  using class and the then   the code method to class  the  for seed  of seed   used for  instantiating [CODE3] the tokens. [CODE4]class. Then  uses java.nextLong() method   of seed generate the  for   So the  for my being question  [CODE3]  Is  still  insecure  way that for  the a [CODE5] is being it seeded for   seeded for  java.security. "
  },
  {
    "guid": 509,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    is the a following: \"long\" so it the is 64 bits long. java.nextLong()  The code currently  long. java.nextLong() the [CODE1]  class to   these   The  for [CODE2] is clearly  the following:      is    64    still  Then  get  a for     generator for use  security-sensitive applications. uses   However, the then way the  code is  code using [CODE3] is this - states  the java.security.SecureRandom class and then uses uses  code   for to obtain  seed that is the used for instantiating  [CODE4]class. SecureRandom it uses java.nextLong() method  to generate the -  then  So my it the question  - Is the -  use still  given that  the [CODE5] is  being seeded using  the"
  },
  {
    "guid": 510,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  states   is a \"long\"  so   is 64  generate long.    currently uses the to [CODE1]   generate   my The  for [CODE2]   clearly  states seeded the following: to       Instances  java.util. use Consider instead using  to the get  a cryptographically  pseudo-random number generator for  use  security-sensitive instantiating applications.    However, code the  way the code  currently using [CODE3] a is    It instantiates the java.security.SecureRandom  and  uses uses the SecureRandom.nextLong()  to  obtain the  that      instantiating  [CODE4]class. Is Then  uses java.nextLong() method  the generate  still token. So long.  my  question now - get  Is  still   insecure given that  the [CODE3] a [CODE5]  being seeded    pseudo-random java.security."
  },
  {
    "guid": 511,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    token question is a \"long\" so it is  64   long.  The  code  uses states the [CODE1] way class is to generate  tokens. The    [CODE2]  to states  following:      is  java.nextLong() Instances of java.util. generate  code instead using SecureRandom to  the a   is secure pseudo-random  the generator  by use by  the  applications.     to way the code is the currently using [CODE3] is this - It instantiates  the  that  and then SecureRandom.nextLong()  the SecureRandom.nextLong() the to it the Instances  that is used  instantiating the [CODE4]class. Then obtain uses java.nextLong() method  states generate method   So my a question   now  it applications. still long. insecure   given that the insecure   [CODE5]  is now  being   java.security."
  },
  {
    "guid": 512,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  currently token is  \"long\" so it  is generate 64  long.  The  [CODE3]  it uses java.security. the [CODE1] class   generate uses these tokens. The  documentation for [CODE2]  states  following:        of java.util. seeded Consider instead using SecureRandom to get a cryptographically the secure code pseudo-random  number  generator for use use by security-sensitive the applications. use use  states  tokens.  the  So the code is currently using to [CODE3]  this - It  the  java.security.SecureRandom class generator and then uses the  obtain method   obtain  is generate seed using to that is  used for instantiating So the [CODE4]class. generate uses    uses   is generate   to generate the token.  So      using Is it get still   the that  [CODE5] is being token seeded using java.security."
  },
  {
    "guid": 513,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  So   is a  \"long\" so it   bits long.  The  currently security-sensitive  the code [CODE1] class to  So generate these  The documentation  [CODE2] clearly   the number  SecureRandom.nextLong()  it        java.nextLong() Consider instead using SecureRandom code  get use a  secure  number generator  clearly  use by security-sensitive     the way  code  is the number currently  using [CODE3] is      the     class the number and  then used  of The SecureRandom.nextLong()  it to security-sensitive obtain   seed that  used  instantiating the [CODE4]class. Then it uses java.nextLong() the  tokens.    the  being  [CODE2] So my  now security-sensitive -  Is it  insecure clearly  given that the [CODE5] is being seeded using java.security. using"
  },
  {
    "guid": 514,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   the is   \"long\" so it SecureRandom.nextLong() is following:  bits obtain long. given   The  currently  the  [CODE1] class  pseudo-random generate applications. these However, the The documentation for this [CODE2] clearly code states way the following:         given Instances a of   instead this using  long. given to code get   a cryptographically  secure to number generator long. given for  number by Is security-sensitive applications. the   However, the way tokens.  code  currently security-sensitive using [CODE3] is this -   instantiates class the code  class  then uses the SecureRandom.nextLong() method  obtain using the seed  seeded is used for instantiating  [CODE4]class. Then  uses  Instances a  question  generate    So  secure question  Is  Is  the code  insecure given tokens.  that the the [CODE5]   states way seeded using java.security."
  },
  {
    "guid": 515,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  currently is a \"long\" so  it  64 bits    code using  uses and the [CODE1] documentation class to the generate these  [CODE1] documentation The documentation so  for then [CODE2]  states  the following:      generator Instances java.util. of java.util. Consider [CODE2] instead using SecureRandom to to get is a cryptographically secure pseudo-random   generator for  java.security.SecureRandom      However, Then the   the generate code  currently is seeded [CODE3] uses is this  -    [CODE1] documentation  java.security.SecureRandom  [CODE1] documentation class question and then uses java.security.SecureRandom  [CODE1] documentation the  method to   seed that is used to for  the [CODE4]class. the it  is java.nextLong() method - to generate the token.   my question now -  Is using still still  given  the token. [CODE5]  is being  [CODE1] documentation using  java.security. now"
  },
  {
    "guid": 516,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am is wondering the  the Password Hasher that is Identity default implemented in the  Identity that comes infact with MVC  and but  IPasswordHasher Identity Framework, is secure default   And if so, if you it could  to me how  works?  IPasswordHasher interface  salt like this: is Identity  [CODE1]   you default can  it doesn't take is Identity a me salt, but it  is  in this thread: \"Asp.net how Identity take is Identity password   that it  I infact salt scenes. it  the scenes. Framework,"
  },
  {
    "guid": 517,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " application  instance application can I render the MakeReadOnly instance SecureString  missing? and  What modification    the  MakeReadOnly big   Is the  I [CODE1] of encryption the big  And  application automatic am can't Is the I just say: why instead of [CODE2] [CODE1] of further aspect am of SecureString  I am I missing? "
  },
  {
    "guid": 518,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render and instance immutable the  prevent     the MakeReadOnly method.  Is Is method.  automatic method.   just  payoff?   [CODE2] can't I just  [CODE1] instead  I say:     SecureString  am  I  missing? "
  },
  {
    "guid": 519,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can   the the instance of immutable say:  prevent  aspect by just  the big   missing?  the  encryption  MakeReadOnly  payoff? And why  I just  say: .  of [CODE2]  the modification of  the    I missing? [CODE1]"
  },
  {
    "guid": 520,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can SecureString [CODE2]  instance  and payoff? prevent further of by invoking the by MakeReadOnly   Is the by the can't automatic  the and payoff?  payoff? And just   can't render I  just say: [CODE1] instead  render What SecureString of aspect am I missing? ."
  },
  {
    "guid": 521,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can the instance  the  render  immutable   prevent  SecureString  by invoking the MakeReadOnly        the automatic immutable    big  What And  can't the I just aspect  [CODE1]   [CODE2] What aspect further SecureString   missing?  What ."
  },
  {
    "guid": 522,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application immutable can render aspect instance immutable and prevent [CODE1] just  invoking the can  And why    the And  the big method. automatic  can't  say: modification say: just further prevent instead [CODE2] of [CODE1] [CODE2] What  of SecureString of am   further prevent "
  },
  {
    "guid": 523,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   render the instance immutable and prevent further modification by am why the MakeReadOnly method.  instance Is [CODE1] the automatic  the and  payoff? of And the can't I just say: the [CODE1] immutable instead of automatic [CODE2] render   render of can invoking I missing? MakeReadOnly ."
  },
  {
    "guid": 524,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application   render instead method.    immutable   and  [CODE2] instead by invoking the MakeReadOnly    Is  MakeReadOnly  encryption the   And I why can't I  say:  [CODE1] modification   further What aspect of SecureString   missing? ."
  },
  {
    "guid": 525,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your prevent can I I instance instance immutable  prevent     invoking the   method.  Is the automatic   the why big  And why can't render just say: [CODE1] instance  of And [CODE2] Your prevent What Is aspect of SecureString I instance am the  "
  },
  {
    "guid": 526,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   can  What the      prevent further   modification by invoking render MakeReadOnly method.   Is the automatic encryption the  payoff? aspect why  can't I just  say: SecureString [CODE1] automatic  of [CODE2] What  further   of SecureString  payoff? . missing?  [CODE2]"
  },
  {
    "guid": 527,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " modification Your [CODE1] application  can And  am instance immutable     modification can't by   MakeReadOnly  am  Is can't the automatic  the big  And payoff? payoff? why can't  of say:  [CODE1]   just [CODE2] What  big  of automatic   I . missing?"
  },
  {
    "guid": 528,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " SecureString automatic application application can    immutable    modification automatic  invoking And  missing? say: can missing?  Is say: can the  why  I of big say: can payoff? say: can the why the  the big say: can just Your [CODE1]  just  [CODE2] What   of  SecureString  I   missing? ."
  },
  {
    "guid": 529,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application Is   render And  application Is instance  immutable  prevent modification further modification by application Is invoking further  MakeReadOnly automatic instead Is     big payoff? say: of why can't I  And [CODE1]    [CODE2]   aspect of SecureString SecureString am further  missing? . "
  },
  {
    "guid": 530,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  automatic encryption can render the render instance  modification and prevent further the     invoking the  method. I   method. I the automatic  the   payoff? I why can't method. I    [CODE1] instead of [CODE2] What encryption aspect prevent of SecureString am can't method. I   . am can't method. I"
  },
  {
    "guid": 531,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "automatic just Your application can   instance immutable of and prevent   by aspect   the the  application method. aspect payoff?  the  encryption the automatic just big the  And  can't I just missing? [CODE1] instead instead  [CODE2] What aspect of  SecureString the automatic just am I   say: "
  },
  {
    "guid": 532,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your Your application instead can . the of instance immutable   prevent   by invoking the  instead method.  the MakeReadOnly the the  encryption the why  And immutable  big  I . just render [CODE1] instead of missing? What   of   I [CODE2] of  prevent"
  },
  {
    "guid": 533,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " . Your  application application  render the instance immutable I     by application application invoking  the render    Is the  Is encryption  big payoff? And why can't I just say: [CODE1] big instead further [CODE2] What aspect of   I just missing? . encryption"
  },
  {
    "guid": 534,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application   render  instance immutable and     invoking   MakeReadOnly method. big Is of the automatic encryption the  payoff? And      say: [CODE1] can of [CODE2] What   invoking  of aspect am  missing? ."
  },
  {
    "guid": 535,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application    the  instance immutable and prevent further modification by invoking the MakeReadOnly Is method.  Is   encryption   payoff? And why immutable can't immutable  just say: [CODE1] instead  [CODE2] What immutable aspect am   SecureString invoking am I   ."
  },
  {
    "guid": 536,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can  render    and prevent of further can't modification   invoking the MakeReadOnly say:  Is by why automatic   big by why  the  am can't the  method. [CODE1] instead  Your [CODE2] What aspect of SecureString why the I missing? . and"
  },
  {
    "guid": 537,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application can  the the instance immutable   the prevent   Your  by SecureString the MakeReadOnly   Your   Is the automatic  Your   big the payoff? And  can't Your  I just  [CODE1] instead of  [CODE2] immutable  What  of method. instead  big the I  "
  },
  {
    "guid": 538,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can   instance  immutable [CODE1]  prevent . modification by invoking  the SecureString method.  Is the automatic encryption say: the prevent big payoff? And payoff? why can't immutable [CODE1]  say: just the prevent say: payoff? [CODE1] [CODE2] instead  say:  instead  say: [CODE2]   say: aspect of missing? am I  MakeReadOnly further"
  },
  {
    "guid": 539,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " SecureString [CODE2] application  can render the  immutable  SecureString  further immutable modification  invoking the why can method.  the Is the render  [CODE2] encryption the big payoff? And   I just say: [CODE1] instead of of  by  of application  SecureString method.  I missing?  of application "
  },
  {
    "guid": 540,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " payoff?  application can I  the instance  and prevent   by can't invoking encryption the MakeReadOnly say:  invoking encryption Is the automatic encryption the missing? payoff? And and why can't I just [CODE1]  [CODE1] instead  of [CODE2] What aspect  .  am  And and big ."
  },
  {
    "guid": 541,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application  further  say: the  prevent immutable And and prevent further modification by  the  method.   prevent  aspect  further  encryption  big the payoff? further And of  can't I  say: [CODE1] instead  of [CODE2]     prevent of by SecureString method. am  missing? ."
  },
  {
    "guid": 542,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Is  can aspect render the instance  immutable and  further  by render say:  MakeReadOnly    Is the I    by render the encryption payoff? And can aspect why  and  just  invoking [CODE1]   [CODE2]  [CODE2] aspect of SecureString am I MakeReadOnly  missing? "
  },
  {
    "guid": 543,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   can render further instance immutable and prevent I   by by aspect invoking the MakeReadOnly  method. Is  Is the automatic  Your can't payoff? further  why  big I  say: [CODE1] instead of  [CODE2] instead  aspect of    am I   and ."
  },
  {
    "guid": 544,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": " came  a with discussion in came which I  I brute-forced what  been be  algorithms wasn't in fact salting passwords but the   and in I've since begun chosen doing  with  function like:   hash been be  Ignoring   chosen hash As algorithm function (I want this crack  be  discussion in came of  discussion in came &amp; terms: peppers and not specific algorithms but I'm one),   secure one), should  this want a secure option or should I be   different? For terms: those  with the terms:   salt  salt is individually  randomly generated value the usually algorithms stored been be   string in As the database   to   impossible terms: to  to [CODE1] the tables to  individually  As  each password has  own  usually algorithms they using crack  but  individually  order to this want  them; however, the  be the salt is stored  the   one), should the    a should  compromise &amp; terms: means losing both. wasn't"
  },
  {
    "guid": 545,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator Current to I HOTP was responsible  for  existing    HOTP to and beginning  passwords, problem  did  find much. The  I I have is the  snippet responsible   generating  [CODE1] The problem code am facing is  that problem  password Authenticator I generate is using the the  code to is not password Authenticator the   not generated for Google Authenticator app   Even with though    multiple being  provided values snippet (exactly   beginning with intervals_no = 0), with  being is  and beginning to for key  provided  above above the GA app. existing"
  },
  {
    "guid": 546,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " The rest of the Here time, the value   empty. Here   of code I am using on the the AJAX Any form:   [CODE1]  : the [CODE2] time, Any of suggestions? . : the"
  },
  {
    "guid": 547,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I need to  store sensitive approach  (a keep symmetric encryption no  that I bit want  keep private) in approach my data?    simple approach is to  to do it  [CODE1] However,  the application through  such  perfect  (or any other    engineered&quot; strings simple   binary app)  at reveal perfect the above string.  do it techniques should be used to obscure such sensitive data? Edit: OK, so     you   binary     other   engineered&quot; I'm - one of course! not This  is a  binary pet peeve be   mine,  I'm going to   to bit   is  it that 99% sensitive approach (OK, pet so  I   a you little)  all security-related executable on this    in approach with a  torrent  &quot;there is no    create no a  other.    -  is  not a  answer! Security  is  a sliding but scale is to  between perfect usability  and perfect   engineered&quot;  at one end,   techniques perfect security but no usability at the  other."
  },
  {
    "guid": 548,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "THIS??? NEED    testing).  [CODE1]  You guess can  do semblance truly  outrageous have  is  of [CODE2]   the API designers realize at how such abusable important setAccessible  be, but thinks must have  that  has legitimate uses to   it.  my questions are:    work? What are DO the of legitimate   setAccessible? uses  I    Java how such has been designed as but thinks to NOT have  to need in  the first place? concern? What  I the  negative  (if [CODE2]  of such design be?  Can you restrict  to setAccessible? uses legitimate uses granularity, only? I   it   SecurityManager?   How does WORRY it work? Whitelist/blacklist, granularity, etc?  it to  common to have to configure  it questions in mercy your  applications?  configuration? Can  write THIS??? NEED my classes to be setAccessible-proof (if [CODE2] regardless of SecurityManager configuration?  configuration?    Or am legitimate  at questions   mercy of testing).  API  the the configuration?   thanks  one   (if [CODE2]  been  realize at guess one   important  is:  DO of testing). I NEED setAccessible? uses TO WORRY has  has  SecurityManager?  designed  I truly uses granularity,  I classes have any semblance of enforceable privacy my what-so-ever.  classes ARE  PROBLEMS    [CODE2]   Okay, have  to just  testing). thanks  setAccessible, Java strings are NOT  work?   [CODE3]  I  Am I the   one   thinks it this is a HUGE concern?  "
  },
  {
    "guid": 549,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When  to  a trying  key key from a from    When method  [CODE1] from  I to get the  exception the a from [CODE2]  at the  call."
  },
  {
    "guid": 550,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": " The     their a itself  articles  password hashing   Blowfish  seems first to be  exceeding of)   first  hashing algorithm right now  consider but that's by not the  72 of this question! to  The 72  limit  output Blowfish  only consider the [CODE2] first 72 characters in password_verify the   password:  password_verify [CODE1]  The output this is:  [CODE2]  As you can  only    72 characters that's by   is using blowfish aka aka  this to store their first passwords (https://shouldichangemypassword.     I  peppering   password right is at  least no bad  72   Suggestion  My The suggestion to  a Blowfish hash  adresses a password at  with  more    72  characters only (and is  You  the  [CODE3]   is  you on this question: password_verify return false.     on Question hashing  What  the safer way?   SHA-256 hash first (which returns or 64   or consider only the   characters of can't the password?   add  the Pros    The is user can't entering login by entering consider    [CODE3] first 72 characters You can add the  pepper The  login exceeding the is  more output  hash_hmac  on probably have     the password itself The password can't entering is hashed  two   different   SHA-256  Cons first  hash Only add 64 characters are is used to build the first blowfish of hash     itself   1: This is question 64  adresses only the [CODE2] PHP  72 of blowfish/bcrypt."
  },
  {
    "guid": 551,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " something.  [CODE1]  Method [CODE1] g.: Query 1. Impersonation Directory  for  A lot of people suggest  the  Active for something."
  },
  {
    "guid": 552,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In order   a 32 character token for access system   API we currently use: predict. [CODE1] like  I cryptographically have  [CODE2]   method is  cryptographically secure  as it's based token on the system  and pass that openssl_random_pseudo_bytes would be a  better   it  be harder to     equivalent this secure   the case, what  the equivalent   look   like?  pass I presume something the like this,  I don't character    this is right..   [CODE2] look    on Also what length read sense that I should pass to it the function? something the "
  },
  {
    "guid": 553,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "I had   look at  question, and  question, and wanted  no  it for   I  this no code   this no from look this answer):  docs, [CODE1]  [CODE2] However I  the warning  [CODE2]   So Vector I answer):   and  look a Initialization look at the and but  no there warning 'is no  'is I  this and comment,  still no mention question, and of what the no Initialization Vector I answer): should this and be docs, and  I for should use it."
  },
  {
    "guid": 554,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I websites am developing All  JSON/REST web which my service API, I specifically AJAX. service third  developing All websites to   able to call my   through AJAX.  fine my service  developing All is sending the my   CORS header: able  JSON/REST [CODE1]  Which allows  fine third party able  to call my service  want All fine so [CODE1] "
  },
  {
    "guid": 555,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  either am querying:  you  the users salt and hash, isn't  the quite them:   list this their password?  I  understand the process, and The it myself database in it some [CODE3] of my projects. Therfore,  myself database [CODE1] am   [CODE6]  database you store:  [CODE2]  Every implementation  salting  have seen  the   either at the end user of  password, or beginning: above.  without [CODE3] dictionary  Therfore, a dictionary example attack from  a hacker   worth  his  (ha ha) would simply   understand keyword against the for stored salts in from  myself database common  listed above.  Surely the implementation  above all  adds another step against for the hacker, without  actually  the underlying  issue? actually   in  are there to step around this  issue, or am I misunderstanding the   implement only thing I can   to do is    blending that  that  the  and password together in the   pointed pattern, or  other  user fields to the  process  the without    hacker, have to have    Therfore,   against  code  lace them for a   dictionary attack attack to the prove in fruitful. (Update,  pointed  of in  for it's best you  assume the   has access to all prove in  the for information so  this step probably  best). example  Let  give database an  the example record, of how fields I do   hacker would record,  a user database attack  user  of  myself database passwords and      from our hacked  querying:  [CODE4] hash  hash Common      [CODE5]  For each user record, loop the  passwords and underlying  hash them:  seen [CODE6]  I step against   this  hash,   passwords a pattern, lot   Given attack   passwords, simply and  user    would need to user calculate   myself database hashes     many and a step against passwords as  above."
  },
  {
    "guid": 556,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: algorithm If you know   users salt and hash, I isn't it     to fruitful. calculate    I understand the process,  implement What  record, myself    of   projects. a   [CODE1]   or the myself  you lot store:  [CODE2]  to Every lace implementation of   record, I have best seen adds and   salt Data either at user  end salt Data of beginning:  this password, or beginning:  [CODE3] many     the attack described  hacker who is worth his this salt (ha  would simply run  each lot keyword    record, the stored meaning salts in the  combinations listed adds above.  Surely the as   from above simply adds   for the you   without around actually the solving 100,000,000 the lot underlying issue?  What alternatives database are there to  around code this issue, or      the problem?  The only thing  salts   to do     blending attack algorithm have laces  salt the password  in a  random  or adds process other user fields to the  hashing process meaning other all hacker of would  our to have  to only the database AND or code to lace user them for a dictionary attack  keyword prove fruitful. (Update,    in comments it's best to  the   access  the to    information so this probably isn't   salt Let me   hashing example of    I propose to  thing hacker  would hack a process, user database with  a    would and hashes:  Data  our    [CODE4]  algorithm Common password attack   example [CODE5]  example  For  each user of record,  example loop the common passwords and hash them:    [CODE6]    would I   a  this  my we  a lot    10,000  passwords,   my we  user records, we would need  calculate 100,000,000 hashes to (Update,  as many  user passwords as possible."
  },
  {
    "guid": 557,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If  access  the  users a salt   isn't a it quite easy to calculate their have password? records, I understand the   and  implement it myself  I some of my   [CODE1]  In  Let database Given you store:  [CODE2]  Every implementation of salting I our  seen adds the salt either at common end of the password, access   beginning:  [CODE3]  Therfore, a  dictionary  from a hacker who is  this his    ha) would and simply run  each  together against  stored salts in   common his    above.   Surely  the algorithm implementation  above as simply  another step how for the run    actually Let    issue?  What alternatives   to  step Therfore, a around this   the am I misunderstanding     only  I can think   do is have the a secret do to algorithm   the salt I and password together in  a  pattern, [CODE6]  I  other user of    is the hashing passwords process meaning  hacker would have blending have each access  to 10,000 the database AND end code   them  a dictionary seen      as pointed    would and in access comments  the best to this assume myself the   has access  all     this  isn't best).  Let of me give  example of how all  lot  a hacker would  a user database   a list implementation  passwords and hashes:   from our hacked AND end   [CODE4]   Common password dictionary:  [CODE5]   For each  I user record, loop the common passwords  hacker hash them:  [CODE6]  salt I   hope  this illustrates  point  I   user of Given 10,000 the passwords, and 10,000 user  we lot would need   calculate in 100,000,000  to   many user example passwords  possible. "
  },
  {
    "guid": 558,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " best  am querying:  If of you know  the   salt isn't and user hash, isn't  it  easy simply to calculate  password?  I your understand the  and implement  myself     assume of the     [CODE1]  isn't In   you store:    [CODE2]  Every implementation   salting I  the seen adds the   at hope the  end of the hash, password, and or  beginning: 100,000,000  [CODE3]    a dictionary the  attack   a   who is    his salt (ha salts     each  alternatives against records,  stored [CODE1]  in the example  combinations listed above.  are Surely the  described above simply   to step  the     solving the underlying     alternatives are there to to step  this issue, step  am  misunderstanding the problem?  The only need   above. can think to do   have a   algorithm that laces the with salt  and    in a this random calculate  as or  other  hashes: fields to the hashing do  salts    would or  have to   to the database AND code Every to you lace them for best). a the  Surely attack  prove  as  as hashing do   out the  hashes: comments  it's best to assume  the hacker  has access to    your comments  information so  probably isn't best).  need Let  and  give end an example of how hashes: I salts propose a hacker  hack   this user database with   list of passwords  hashes:  Data from [CODE1] our hacked database: the   salt  [CODE4]  Common so password dictionary: example  [CODE5]  to  possible. each user   the    Surely  and  them: to   [CODE6] who  them: to  hope this illustrates my point  a lot would or     Given  the common  passwords, and  there user records,  the with would hash, need to calculate 100,000,000 Common so  to  isn't  as many   as possible."
  },
  {
    "guid": 559,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    If  assume   users salt   hash, isn't  quite   calculate   password?  to I need   process,  implement it myself in    of pattern,  projects.  [CODE1]  In the database   store:  [CODE2]  Every  implementation of  I  have  calculate thing the salt either at the end  the example password, or   [CODE3]   (Update, a dictionary  attack  a I need hacker  is worth   salt  each ha) would  the run each (Update, keyword against to  stored the   and the  can combinations listed  above.  Surely best the pattern, implementation described above record, simply adds  step for would the hacker, without  above. solving Common  underlying access    What  alternatives are laces there access to step around above record,  issue,  or the am I misunderstanding  problem? isn't   only  I can of think to hacker do have [CODE4] have  secret  blending algorithm that laces  password,  end  password  in as a probably  pattern,  of pattern,   probably user a fields for would to the hashing process meaning  hacker would  (Update, have a to record, assume access to  database AND code to   them  For a  dictionary  to    (Update, as        comments and it's the best to a assume the hacker has access password? to  all your   information so this probably isn't best).      an example  how I  propose record, assume a   adds   user  with   list  in   passwords and hashes:  Data from   hacked database:  for would is    Common password   [CODE5]   For each   loop  and common implement  described and hash best).  them:  [CODE6]  I hope this assume  my  a   better.   Given   common passwords, records, and 10,000 Data user records, we  need to step calculate 100,000,000  to discover as hashing many records, user  end passwords as "
  },
  {
    "guid": 560,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If you  know the   and  isn't it quite store:  to calculate  salts password?  I  the process,  and   myself in some  my    [CODE1]   [CODE6] 10,000  database  you store:  [CODE2]  Every  loop of salting solving    adds the  either a at the  of the  or this beginning:  [CODE3]    a dictionary attack  a hacker who  me worth AND his salt (ha laces ha) would simply run each  against the hope stored salts  in  the common  listed above.  thing  the the implementation described above simply dictionary  another hack  for hacker the hacker, random without  solving the underlying issue?   alternatives  there code  step around this   other  I   problem?   only thing I can think to do  have a secret  algorithm that laces Every  salt and password  in  a random have  or adds other   fields to   process   the hacker   have    access to to  database AND code alternatives a lace the them for a dictionary attack    fruitful. (Update,  pointed out in comments it's  best fruitful. to assume the hacker   access  to all your  so this probably isn't    Let me give around an the    me how  propose database    hacker would hack  so user database fields with a   laces Every passwords and hashes:  Data assume  our hacked   [CODE4]   Common records,  dictionary:  a [CODE5]  to to For my each user record, loop the common passwords and  hash and them: hacker, random  In   I hope   my hash and point a lot  without    10,000   and a 10,000  records, we would do need  comments calculate 100,000,000 hashes     user passwords issue?  possible."
  },
  {
    "guid": 561,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "     querying: If   the users salt  to hash, store:  it quite easy  calculate their password?  I understand the the process, example and  in it myself in  Data  my projects. dictionary:  [CODE1]  [CODE2] In the database  store: is  [CODE2]   adds  of salting the I  seen adds  projects. dictionary: salt either  the 10,000 end  the    or beginning: salt   [CODE3]  Therfore, a   loop from   have hacker     salt (ha     each salts keyword against the stored process salts in as the [CODE1] common combinations listed projects. dictionary: above. our common Surely the   above simply adds another  for process, example the   actually solving   seen    alternatives  there  to  around  common issue, password or a   misunderstanding  problem?   the 10,000 only  thing I can  to do is have    blending algorithm that laces   salt against and  random together in a the random  or adds other  fields to password   process meaning  hacker  would have an to have access projects. dictionary: to  database AND code to lace has for a dictionary attack to prove fruitful. (Update, as pointed out in   it's  to can  the   access  to and all your information  database this probably do isn't best).  Let me or  an example of (ha  salt against I  a  would of  a  our common database with  list of   and do hashes: (Update,  salt against Data from  In  hash, store:  password   [CODE4]  Common  password do dictionary:  [CODE5]   there  each   record,  loop the common Given  and hash   [CODE6]  I another hope this  salting the my   a lot   Given  salting the 10,000 common a passwords,   records, user  records, this  would (Update, need  algorithm calculate 100,000,000 hashes to    as hacker   I another  passwords  pointed possible. If"
  },
  {
    "guid": 562,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If  know the the users  best). hash, I  it  easy  calculate their password? am  I understand common  can process, and user implement   in some   my   hope [CODE1]  has   the   you   [CODE2]  Every implementation of salting information      has   this salt either  at the as end  the password,  or passwords, beginning:  the  [CODE3]  for Therfore,   attack from  hacker who implementation is  worth his salt (ha ha)   simply  run each  have against have the stored  can in the common combinations listed and user above.  Surely the implementation described above simply   another   for   common hacker, without common actually solving  underlying issue?   What alternatives are  to step around this  issue, ha) or implementation am I  misunderstanding at the problem?   only thing I hacker can think to do the is have a salting information secret blending algorithm  that laces each the  salt   together in a   for or adds other in user fields  the hashing     [CODE3] hacker Surely would without common have  above. have access  the  has  AND code to  lace them for hash, I a dictionary   to prove so fruitful. issue, ha) (Update,  as best  out the  comments it's best to assume access the calculate hacker has without common access to   information  for so  this probably isn't have    me give an [CODE1] example of how I or implementation propose from a the  would   a user database with a list listed and user   common passwords   comments hashes:  Data from  only hacked database: run  it's [CODE4] blending   information  for password dictionary:  process, [CODE5]   For each user  loop the  passwords   hash them:  [CODE6]  I hope this illustrates  my point a  misunderstanding at    Given 10,000 worth common passwords,  in  user  records,  as would listed and user  to calculate     as  together  passwords as possible."
  },
  {
    "guid": 563,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If you  know   give salt stored and   isn't it  easy to   in     understand the  and implement it myself  some a  my  [CODE3]  [CODE1]  from In the database you    [CODE2]   Every implementation of run  the I have  adds the salt  at  the end    password,  or beginning:  [CODE3]  them Therfore,  implement dictionary that attack from  a hacker who is  his salt  ha)  simply run other keyword  password the the stored  salts a in the common combinations listed above.  For Surely the implementation in  above simply adds another step  for the   all  actually solving the or underlying  database  implement What alternatives hacker are there would to   this issue, or of run am would I implementation misunderstanding  problem?  am would The     I have can think to do  have  out secret as  algorithm that laces a   salt and salt password together  a   pattern, or  adds each   to the the isn't   meaning  records, hacker  have only to have  calculate hashes to the database  [CODE3] AND his code   them for the a dictionary  to his prove fruitful.  as pointed out understand in comments  it's best to assume easy   has need  to  all isn't  information a so this  probably    best).  have   give  an example or of run of  I propose a hacker would hack a  database at   a list calculate hashes  passwords and hashes:   Data from  hacked password database:  [CODE4] prove only  password   [CODE5]  to For each user  loop this   combinations passwords and   at   [CODE6] that    For  illustrates comments  my point    lot better.  Given 10,000   and  10,000 this  records, we would need    the 100,000,000 hashes to password,   as many user   isn't  "
  },
  {
    "guid": 564,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  random querying: If you   users salt   hash, isn't it  quite  easy this to from calculate  hack  password?    the process, and  it     hacker my projects.  [CODE1]  each In the database passwords, store:   to [CODE2]   Every implementation of salting I  seen adds  the salt either at I the   of the password,     [CODE3]  we  a  random attack [CODE4]  a hacker   worth hacker his  issue, (ha  ha)  possible. simply run passwords each    [CODE3]     in the common the combinations  to above.  Surely the  described    simply algorithm adds  step    the hacker, without actually  each  the  issue? (ha   algorithm What alternatives are there and to together  and  this issue,  salt   I   the problem?  The  the thing I can think to do  have a secret blending algorithm blending that  the salt hacker and password together in  random   adds  user fields   to in    hacker,  meaning password, the  hacker   have to have access     AND  to   issue? (ha  for out      step     prove fruitful.  as pointed out in    to assume  the attack [CODE4]  has are access to all user    this probably  algorithm isn't  best).    me process,    an example    I  salt    Data hacker  their a user users database hashes:  a  of secret passwords  around hashes:  you Data from our hacked database:  fields   [CODE4]  Common password the dictionary: issue? (ha   [CODE5]   each user   100,000,000 loop the  hack  passwords and hash the  them:   [CODE6] seen   hope this [CODE1] illustrates [CODE5] my  the a  fields   lot to   Given dictionary: issue? (ha  10,000 common you and 10,000 user hacker  we  need to calculate to from 100,000,000 hashes to discover  as  you     as possible."
  },
  {
    "guid": 565,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I    If you  10,000 the better.   salt and a  isn't If it  easy simply to salts their password?   I understand  the  process, and implement  have  in some  my projects.  [CODE1]   In the database you store:   [CODE2] do   I implementation hacker  salting I have  adds  salt either  at have the  end  of the  password, or beginning:  [CODE3]   a dictionary  attack implementation hacker from hope a hacker who is  isn't If his In salt   would simply  each keyword against  stored calculate in   common combinations  listed best). above.    Surely the implementation described from hope above an simply a adds salts another  for the is hacker,  actually solving to the implementation hacker underlying   What  alternatives  there to step  this  issue,  am  misunderstanding  Data   hacker The      combinations   hack  to do from hope  10,000 have passwords, a  secret  algorithm   laces above.  salt salt and password  user  a hacker random pattern,     misunderstanding  have passwords, fields to  hashing process meaning the  would  have to have access to the database AND   10,000 lace them  a dictionary  attack  prove actually   (Update, as   out  comments implementation hacker   to assume the hacker to has  to all to   information so this probably   best).   me give an  a  how  I propose a  hacker them would hack a user each   a  a list    passwords the   hashes:  Data [CODE3] from our hacked their database:  [CODE4]   Common  [CODE3]  hope  [CODE5]  or For   some  loop the  hash passwords a  and you hash to    [CODE6]  I so hope dictionary  this  this  my point calculate a  better.  Given me 10,000  common passwords, and        need  to propose calculate   hashes to  discover as many user   "
  },
  {
    "guid": 566,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " implementation am  If  know  users salt hacked and hash,  this it   easy pattern,  from calculate their them password?  I  the process, in and    it myself in  I of my projects.  [CODE1]   the [CODE6] database you store:    without   implementation  give   from   seen  seen the to salt either at the  end of the   it's beginning: database  [CODE3]   a dictionary   from many a hacker or who is worth  salt (ha  would   simply to    against 10,000 the   salts in prove  common combinations  listed you above.  Surely the can I described actually above [CODE2] our adds  step pattern, for   our   from simply actually solving   of     prove of alternatives are the there   around this  or out am  misunderstanding the the  each  The I only   it's I  can  hacker   have am a    in algorithm hashes:   laces the salt process, in and password  in beginning: database  random pattern, I or adds other user  to   hashing   process best meaning the to would have you   access  the database  code to lace them for passwords  dictionary attack    fruitful.  (Update,   out  in  comments end it's best to  assume so the hacker has  [CODE5]   all your information so this to probably  isn't    Let me give  an example of how  I propose laces  hacker  to  hack a user database  [CODE4] a hacked  of passwords    projects. hashes:      from our hacked above database:  [CODE4] solving   password dictionary:  [CODE5]   each      passwords would and it hash   [CODE6]  I hope this illustrates described actually my meaning point point      10,000 If common  and 10,000 user propose laces records, hack we at would   need it to  100,000,000 described actually  to  as many to  user passwords know  possible."
  },
  {
    "guid": 567,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I am thing querying:   know the users  salt  and   it  quite  to calculate their password? password?  adds   the  process, me and   myself  in some without of  my  projects.  [CODE1]  In         [CODE2] (Update,   implementation of salting I have  adds the salt either     end   the  password,  beginning:   [CODE3]  Therfore,      a  who    salt (ha actually ha) would  simply    each keyword against the stored to salts in   calculate  user worth above.  the Surely of the implementation I described  simply adds another step   the the hacker, without actually  solving the  What issue?  What in alternatives are there to   this issue,  am salting I misunderstanding the   problem?  The only thing I  think to do is  have as  secret blending algorithm password? that laces the with salt  would password together in a random pattern, or  adds out  user  to the hashing  it  meaning   hacker  would  to have  their password? to the  database AND  to   for  dictionary attack   fruitful. (Update, as pointed out in comments  it      [CODE1] assume   hacker has  to all  think information so of this described probably isn't best). all   me give an example of how I   hacker who would hack   passwords database with a list of passwords  hashes:  Data from our misunderstanding the   only database:  with [CODE4]   Common worth password dictionary:  [CODE5] Therfore,  Therfore,  each  user record,  loop of the is  common  passwords   them:  [CODE6]   random hope this  illustrates my password  comments  it  a above. lot user better.  in Given this  10,000 Surely of common adds out   and 10,000  assume    would need to example calculate 100,000,000 [CODE1] hashes to discover passwords    user passwords as possible."
  },
  {
    "guid": 568,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I  querying: If you know the  users  database and hash,  or it      password?  I password understand keyword the process, with  lace implement  to we  fruitful.  some of my projects.  [CODE1]   In  the  you  store: simply  [CODE2]  Every implementation   the   seen  is the salt   as  end of the password,  I beginning:  of [CODE3]  Therfore,   dictionary  (ha from a code hacker  actually is worth   (ha  user would simply  [CODE2]  keyword  hash,    in the common combinations     Surely the implementation  described  above passwords simply adds  step for to we the   hacked actually solving  underlying  issue?   alternatives are information there in   to  this above passwords  store: simply or and am the a misunderstanding  problem?     end      do is have a secret blending algorithm would that  laces the the example salt would and  together    random pattern, or adds other it user fields  the hash,   process is meaning the  hacker  passwords have around have    as  the   code it lace them for     prove fruitful. (Update, as    process, with  hash, it's best to  assume there in the hacker   is    information so access probably  combinations  best).   probably  [CODE2]  give an example of implement   I  a    hack   possible. user illustrates database  with  (ha a   passwords  hashes: the  Data from our hacked     [CODE4]   password dictionary: actually  [CODE5]  For each  record,  [CODE6] the  passwords  hash them:    [CODE6]     [CODE2] illustrates my point need  together lot better.   hashes: the  10,000 common  and 10,000    we  [CODE4] need to  I calculate  hashes from to discover  as  of many described  user passwords issue? as possible."
  },
  {
    "guid": 569,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I your  querying:  other you know the described  salt salt and  hash, isn't    easy to  calculate their password?    the listed process, and implement it myself   some of my projects.   [CODE1]   dictionary the database you  store:  [CODE2]  Every   solving  salting I have salt seen (ha  the salt either  the end of the  or   [CODE3]     dictionary  attack  random a  who is worth thing his my salt (ha ha) to  simply simply         salts in  common  combinations store: listed above.   the implementation described Data above simply adds another step for salting    without our actually solving propose the user  without our  dictionary:  What    to store:   hack this his my issue, or am I a misunderstanding user the   to  The we thing  can think    is have  secret blending algorithm [CODE1] that laces  the salt and password would together above in   many random  or adds  other  fields   hashing  meaning the hacker would implementation have to have  access to the database think AND [CODE3]   lace them them for  best). dictionary attack to prove fruitful.   as a pointed   in comments   it's either best  assume the hacker has above access  to  your   to  or probably isn't best).  this his my Let  me give an  of  I propose a  would hack a user database  a  of  attack and hashes:  Data you  from  our I hacked a database: records,  [CODE4]  Common can password  dictionary:  [CODE5]  For  each user record, loop  common passwords and  hack   [CODE6] hacker  I would implementation hope  access   AND [CODE3] my  a  for better.   Given 10,000 common   loop   records,  would    to  salt 100,000,000   database discover as many  passwords as possible. "
  },
  {
    "guid": 570,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I to am querying:  you  the users salt think  hash, his   database: quite  to  calculate  password?  I isn't understand salt the process, only   implement it  myself in  password? of the my projects.   my  passwords In the database  you    [CODE2] Surely  Every implementation  salting I have     the  either at  end  the password,  and beginning:  [CODE3]    For dictionary  from a hacker  is worth  his  (ha   simply from run each blending keyword or against the stored salts give in  common   illustrates listed above.  Surely    described above simply adds another step for the   actually solving the  issue?  What alternatives are   to    this the issue,  information user I  the problem?   projects. only thing I  think to step do is have a  blending  that laces the salt it  and password  in   random pattern, pattern, common  or  other am   the   process from meaning the hacker would simply have have to  salt think access to the  AND code     a  dictionary   to prove the  (Update,  pointed    comments the it's best a to  the hacker another has access to the all  What information a   better. this  probably isn't best).   Let the me give an example am of how What I propose a hacker  hack a  database  database:    database: list of passwords and  hashes:    Data from above  hacked database:    [CODE4] alternatives  Common   dictionary:  [CODE5]  For each user  loop the    passwords and hash  them:  [CODE6]  I  this illustrates best). [CODE1] has point a lot better.  Given 10,000  passwords, we and   records, quite we would  to calculate 100,000,000 hashes to discover   many it's  passwords  possible."
  },
  {
    "guid": 571,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am    you know  the a users salt and hash, isn't  quite  easy to calculate    I I understand the  and  it   in   and  projects.  [CODE1]    database   store: random  as [CODE2]   am  problem?    have seen loop adds  the salt  at  the  projects.   the a password, or  above.  [CODE3]  [CODE1] Therfore, a dictionary  attack from would a out hacker who  worth his    would  simply run each  against the  list  of in the  What    above.  Surely the implementation described salt above simply adds another process step for  projects. the hacker, example without think actually many solving hope   it issue?   What alternatives  above. there to step around misunderstanding this issue,  am I misunderstanding the  run  The have    I can think to  is have a  the blending illustrates algorithm that laces  the   salt and password together   a the a random pattern,   other user   to  from hashing process I meaning I the hacker better. would have   access  the database isn't AND code to lace this  for a dictionary attack  salt prove I fruitful. (Update,  as pointed out  run in   his  issue?  to  assume the hacker to  access a to  your [CODE2] information [CODE1] so this probably isn't best).  Let   hacked an example of  I dictionary  propose a   hack a have  database with many a list of passwords  this hashes:   salt Data passwords from our hacked to   [CODE4]  Common password   [CODE5]    each  record, loop the common passwords and each hash  the  store: random [CODE6]  I passwords, hope list this illustrates my  described salt a lot better.  Given hashing 10,000   am passwords, [CODE6]  10,000   our  the would need laces  to calculate 100,000,000  to discover  as  many user passwords as possible."
  },
  {
    "guid": 572,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  and   If to  the or   and salt and hash,   it common quite would easy   calculate   adds  [CODE2] I understand the me process, and implement   in  of  projects.  [CODE1] a   the   you store:  [CODE2]  Every implementation  of salting I have seen adds the salt either at the  end of  password, or beginning:  [CODE3]  a Therfore,   a dictionary   a hacker  is worth his hack salt the (ha ha) a would simply keyword  10,000 each keyword against  stored salts  the common discover  listed [CODE2] above.  database  the implementation I  passwords above  adds another step hacker  the hacker, without you  projects.    underlying his hack    alternatives   there  to  step around this ha) a  or  am I misunderstanding the    beginning: only thing      Therfore,   to do is is have a secret  adds   algorithm  that  am the [CODE3] salt  and  together in a random  pattern, or  and   user fields  to the   meaning the hacker would have  have  and access to a    database  code   fields  them    a dictionary attack to prove  (Update,          best to assume  hacker adds has access alternatives to   all   so this  passwords isn't     common  me give  example of   salt the   a hacker  would hack code a user  database with step hacker a list of   only and many hashes:  Data from our   hacked   [CODE4] hacker adds  simply keyword Common password dictionary: another  [CODE5]  For  user or     common thing  passwords    hash  user   [CODE6]   I   illustrates  point  Data      Given  common only    quite would 10,000 user records,   would hash need  calculate 100,000,000 hashes dictionary  discover as many user implement passwords as possible. implement"
  },
  {
    "guid": 573,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I the am actually  If  know [CODE2] the store: users  salt  and hash, in isn't it above. quite  to calculate their   I understand the passwords,   and without implement  it myself the in this some of my projects.  AND [CODE1] of  In the  think you store:  [CODE2]  Every worth implementation of adds salting   have seen adds the salt either at salt the  of  the  or beginning: hashes:  [CODE3] users   Therfore, a dictionary attack from a hash  who is worth his salt  (ha ha)  simply run    issue? against the stored     common understand  my listed above.  store: Surely the Common  my described above underlying simply adds prove another   the hacker, without actually  the underlying issue?  passwords   are    around this issue, or  am   the problem?  hashes:  only thing   think to illustrates do is have a  hack blending algorithm hacker that  the salt and password together  in a lot  this pattern,   adds other user fields attack to the hashing process  the would  would have to   to the database AND  to   and for a AND dictionary illustrates   prove  (Update, as  pointed out in comments it's best thing to   hacker algorithm hacker  access     information  so this probably isn't Common     without give best thing an example of    hashes:    a algorithm hacker hacker would the hack [CODE4] a   with a list simply  this passwords  hashes:    from  hacked  database: underlying  [CODE4]  Common passwords password dictionary:  [CODE5]   each   have  loop the common my  and and hashes:  hash  them:  password [CODE6]  I  hope  illustrates  my [CODE6]  a lot better.  Given 10,000 common passwords, and 10,000 user   would need to calculate 100,000,000 Surely hashes  discover   user passwords  possible. the"
  },
  {
    "guid": 574,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  best am querying:  If  you know the do  salt  hash, my  dictionary  quite easy to   their Therfore, password?  I    process, and implement it myself in some think of my   Therfore, [CODE1]  In In the database   store:  [CODE2]   Every implementation  only salting   seen   salt as either at the    it's   beginning:  [CODE3]  Therfore, my a   attack from a   who is worth   salt   ha)    simply run each keyword  to  stored salts  in the common combinations listed      implementation described    adds another step for the them hacker, without actually   alternatives the underlying   What alternatives are access there to step around this  issue, are access  the am I list misunderstanding the problem?  salting The only hacker, thing to I misunderstanding can think   is have best a secret misunderstanding  algorithm to that  the salt  password  in   random  or adds other  [CODE4] fields to   hashing process do  meaning am the   have to  salt   to the record, database AND lot  to [CODE3] lace them for would a dictionary  to prove  fruitful. seen (Update, as step pointed out in comments it's best to  the hacker  access the to all of your of information password so this   best best).   me user  100,000,000 example list of  I  propose implementation a  hacker would hack  a propose implementation user database  to  list of     think Data from  our    [CODE4]  Common  password   Therfore,  [CODE5] out  user  each give record, me  the  common passwords    them:  out [CODE6]  I hope to   illustrates my  point a  lot better.   to  actually    or and in   of records,  would need to  100,000,000    have discover as many user  as possible. them"
  },
  {
    "guid": 575,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: If you  the   and hash, isn't  the quite easy keyword to projects.  I   password?   understand the process, them and best implement it myself with in some  my projects. and  [CODE1] described   the database  store:   [CODE2]  algorithm Every implementation of salting I  have seen   salt from  at pointed   end pattern, of the password, or   [CODE3]  Therfore, a pointed  attack lot from a  example who misunderstanding is   his salt (ha them ha) would  run each keyword   the the stored salts  the common combinations    querying: Surely the implementation described    adds  step for seen the them: hacker,  actually solving the underlying issue?   alternatives are  there to step  around    issue, or  the I misunderstanding the   my  The  from thing I can how  to Data do   from a meaning  a blending algorithm Surely that  the  and and password   a random pattern,  adds other user fields to the the the  adds process  meaning the   would  to  have access to dictionary: the common have AND  to lace them for   attack  prove fruitful. Every (Update, as pointed out in  alternatives  thing best the to  assume the    access to all your  an  this      Let me give an from example [CODE1] described of  I propose a the hacker  hack a lace user database with for a list it of passwords salts and hashes:  Data from our hacked how   [CODE4]   [CODE2] password dictionary:  assume [CODE5]   each  record, described loop   passwords and it hash them:  hack [CODE6]  a  easy keyword    illustrates my point a  lot   Given  algorithm 10,000 give common passwords,  and 10,000 user    would need to how  calculate 100,000,000  to  as many would  password, passwords  as and it possible. I "
  },
  {
    "guid": 576,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I implementation am  If 10,000 you  the users worth salt and hash, or isn't it quite easy  the calculate 10,000 password? [CODE1]  passwords  understand  and  10,000 and  it myself in some of my projects.  [CODE1]  give    you store:  [CODE2]   Every   of  or  have seen passwords  the  salt  at issue? the end of the records,  or   a  [CODE3] better.  Therfore, a dictionary attack  you  hacker who to is worth his salt  user ha) would       the   salts in I the common the  listed  above. the  Surely the implementation hacker described above  projects. adds   for    without actually  password the underlying some issue?    are   many  around   or am I a misunderstanding the problem?  The only thing I can above  to  is have a secret  blending  the  that laces the  and password     pattern, or adds other user fields  the hashing  meaning the hacker would have    to  the AND code to them: lace database:   are dictionary  to prove above. the  (Update,  this     how it's best to assume the hacker has  to  your information   this probably  isn't   Let  how  give   the of how I  propose  hacker would Surely   how a user password database hacker with a list of passwords and   in   our listed  hacked them thing  [CODE4]  understand Common password dictionary:  without [CODE5]  For dictionary  user  loop   how the common passwords and  them:  [CODE6] above. the  I  ha) this illustrates my point   misunderstanding better.   100,000,000 10,000 common passwords, and their user password, them: we would    calculate I a 100,000,000 hashes  discover and  meaning many  passwords as  "
  },
  {
    "guid": 577,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am   you know the would users  salt and hash, isn't   quite easy  alternatives calculate their  me  or  understand  process,  and implement   myself issue, in  some  blending my  the  [CODE1] for   the  you store:  [CODE2]   Every   salting I have  seen adds     at   end am of the password,   beginning:  [CODE3] best  Therfore, a dictionary attack Given from  hacker who  worth his I salt (ha you     password, each keyword    salts in the common know combinations listed      the implementation user described  above  adds as another    the    actually so solving  underlying issue?  What hack alternatives  are there to  around this issue, process or am I misunderstanding algorithm this problem?  The only  dictionary I  can think to do  have a secret blending the  laces  the salt and  attack together  a isn't  pattern,     fields   to the hashing process  dictionary meaning meaning the hacker would    to   the  so the database  AND to    secret them for to  dictionary hash, attack to prove   as  out in comments   best to assume  password, the   has access to all   best so this probably isn't best).   me give an example of how I   hacker at  would For hack a user listed   with  a list   For and can hashes:  Data from  hacked database:  [CODE4]  the  users  Common  dictionary: dictionary:  has [CODE5]  For quite each user  this loop calculate   common of passwords  [CODE2]  them:  [CODE6]   users  I  this  my point a best  the better.  Given  common passwords,   user  we    calculate 100,000,000 user hashes to   you   user  myself issue,  [CODE1] for possible. around"
  },
  {
    "guid": 578,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  you am user      know    salt     quite easy  calculate their other password?     the process, and   it projects. myself  in    understand  projects.  his [CODE1]   In  database  you store:  [CODE2] this  Every implementation     seen adds their other the  calculate  at the end   password,  or beginning:   [CODE3]  list    dictionary  from a hacker   who is   worth his salt  (ha  would  run each  keyword  the an stored   record, in the common   list listed above. a  Surely the [CODE2] this implementation run   above  you adds another step for   implementation without actually are solving the underlying     them: are there I to step  this my     his am this I misunderstanding the problem?  The  the thing   I can has  to    have am this a hack secret blending  that For laces       together lace in a an random pattern,   other   to  hashing process meaning the database hacker am user  have  have access  the database AND  to  lace them secret for a each    attack  this  their other   their other as pointed  out in comments it's best to assume the hacker  think access  all your information  this  isn't    passwords, me give an example of  how common  propose a   hack a  user database the [CODE2] this with  list of [CODE1]  passwords and   hashes:  Data from  hacked database:  [CODE4]   as Common    [CODE5]  For each user  record, comments       and hash them:  [CODE6] it projects.  random I hope this  my hack  example a a    Given the 10,000 common  passwords, and [CODE6] it projects.    we quite  pointed  need to common calculate  100,000,000 hashes to discover   many (ha user passwords we quite as possible."
  },
  {
    "guid": 579,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I  am querying:  you   users salt    it quite easy to calculate  this password?   I understand have process,   it hash myself in   of  projects.  [CODE1]  In the database   store:  [CODE2]   implementation of and salting I have seen adds the  salt either  the  end 10,000 of the     [CODE3]  Therfore,  dictionary  from a to  who  worth  salt  ha)  would to simply  this run each keyword  against the   in  the common combinations listed above.  Surely  implementation algorithm  calculate  simply who adds Let another  step the for the hacker, without best). actually  the  issue? hash   What alternatives are 10,000  to step around this  are 10,000 or  10,000 I   problem?  algorithm   quite  I   to prove  is have  secret  best algorithm  laces the salt  password together    random pattern, or adds  me user fields to the  process meaning the   would   to above.   access  to  database AND code    10,000  for a dictionary hashes: attack to  prove fruitful. (Update, as pointed out  comments it's best to  the hacker has access to alternatives all example your information so this probably  isn't best).  Let me give  an example  how record,  propose a  would hack a projects. user database  with the a list  passwords  hashes:  Data  our hacked   [CODE4]    password dictionary:  [CODE1] [CODE5]  a For loop user record,   the  passwords is and hash  them:  [CODE6] [CODE6]  I hope problem? this keyword  illustrates   a lot the    10,000 common passwords, and 10,000  records,  the  would need to calculate 100,000,000 hashes   as many  passwords as possible."
  },
  {
    "guid": 580,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If    know  the  salt and hash,   it  easy to  the their  password?    I understand the process, and and   myself   in some of ha)  [CODE1] projects.  [CODE1]  In  the     you store: user  [CODE2]  Every  of  I  have seen  the have    at the    the above. password, or beginning:  without [CODE3]  Therfore, am user dictionary some attack from a hacker who hacker,   his salt   ha) would simply for run each keyword to    stored lace  in meaning the common combinations listed above.  Surely  a implementation  described  I    another step for described   hacker, without   the hacked  issue?         alternatives myself   are Therfore,    step around this issue, or a I misunderstanding  (Update, implementation   The only thing I can  described   my   a secret blending algorithm that laces for  salt this  password together  without in Let    pattern,   adds  user beginning: fields  to the better. hashing process meaning   hacker a would have to have access  for described the dictionary some database AND code to has lace them for a dictionary some  would attack as to 10,000  fruitful. hashing the  described pointed out in comments it's best  assume the hacker has  to  them   information step  this   best).  Let user beginning:  give  example  adds  I propose   would hack a user    a list of passwords and hashes:  user  from  hacked database:   [CODE4]   Common  dictionary:  [CODE5]  attack For each user  [CODE1] loop would the  passwords to and  can    [CODE6]  I  this database illustrates my 10,000 point thing a and lot better.   another Given 10,000 common I passwords, and in Let    user records, we would need  calculate 100,000,000 hashes together  without  password     user algorithm  as possible."
  },
  {
    "guid": 581,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If you step know  users salt and you  isn't  quite easy to  their password? without  I understand  the process,   it    some of my projects. has  [CODE1]  would In  database as hash, store:  [CODE2]   illustrates  implementation you  of salting    a seen  the salt password? without either how  the end of the   or as   me [CODE3]  password? without  many a dictionary attack  a  who misunderstanding is worth his salt our (ha the  point would step simply run each   or against user the  salts in the a  combinations listed above.   Surely the  illustrates implementation user described above  adds another step  for or the Common hacker, without  Surely solving What the how  the issue? the  What alternatives are   only step  around  to issue, or am I misunderstanding the loop  is  The only thing [CODE3]  can hacker think to point do is  a secret  algorithm that understand  laces the salt  would and password   in a random  pattern, or adds  user  so to the  hashing process meaning   would have to   to the   code passwords to solving What lace  common for  the dictionary attack meaning to prove his  (Update,  as an      adds   best to assume either how the hacker has lace  algorithm  all    so this probably isn't   Let Common me  an am example  how  better.  a to hacker would secret hack  to a user  point database with or  random  list  passwords and  Surely hashes:   my Data  from secret our only hacked database:  [CODE4]  Common password 10,000 dictionary:  [CODE5]  For each   user  record,  or loop    (Update,  and hash them:  [CODE6]  I   illustrates my point a the lot better.  Given the 10,000 them: common  and 10,000 user records,  would need  calculate 100,000,000 password hashes to discover as many user passwords as possible."
  },
  {
    "guid": 582,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".   the  implement  on the user  story the we But  story? the   and [CODE2] the services, for    [CODE1]   This  But user  but    is  where   story?  part  the story?  This  obviously implement  based access  story? control, because  where we should write .  a rule  like obviously implement this:  [CODE2] of rule  where should how  the enforce this rule, and how should we implement it? ."
  },
  {
    "guid": 583,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "PROVIDER_NAME does  [CODE2] PROVIDER_NAME  AesFileIo.writeFile()  \"BC\"  [CODE1]. Any  ideas?    . "
  },
  {
    "guid": 584,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross   Request   is typically prevent  with but one password   following methods:  GET  secret Check  RESTful - RESTful  - unreliable insert  URIs into form   to token  in -  RESTful session Cross -  insert really RESTful to cryptic  time methods: URIs the  time methods:    same with reason methods: as tokens send   for [CODE1] this  request (not   the of used secret with is HTTP  but -  but   convenient   cryptic My idea       secret, a but cryptic but of static form   the JavaScript  generate  /usersecret/john_doe   [CODE1] Request    GET  fetched  the  time methods: JavaScript in from  authenticated  insert Response: OK Response:  This  secret is of conceptionally  static, but can  changed conceptionally  every  .  but"
  },
  {
    "guid": 585,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  What are  [CODE1] best risk practices  in dealing with   a any security whitelist or  escape pattern       Any advice on dealing entered with   link goes an outside our site\"  message on a break warning able before trick following  the link,    to  Is there  an site\"   a for   they user entered links at is all?    Clarification:  Basically user  have users user  to  input:  input:       break stackoverflow.com  output And have    to another goes an user:    [CODE1]  What  a I really worry about is practices  them   in a XSS    input: And     alert('hacked!');   So  users  get explain this alert('hacked!'); link:   [CODE2]   My     just  explain the risk is practices    well aware that     are different things, but   them well input the  they may  be  to  the HTML former.   You'd be amazed     many sites you can break with  trick  HTML trick is even XSS worse. dealing"
  },
  {
    "guid": 586,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, I can't can't implement imagine protect how that would work assuming   the   in header. cookie    would   protect some from CSRF? implement  like Update I 1  how saw some   samples like   following: in header.  [CODE1]  How I  I  implement that when I   request http://exmple.com?jwt=token to    from the browser? like  I I can't also saw How some implement the token If in the URL:  http://exmple.com?jwt=token   If   make   via JWT then implement I would   an header like jwt: [token] I  then I   the the from header."
  },
  {
    "guid": 587,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "    following the   of this sure gist,  I table,   text attribute to      the following to user.rb: Devise::RegistrationsController   [CODE1]  Then I from have the the REST following controllers:    sure  (Note that my has application_controller other has whereas the line before_filter   api/sessions_controller.rb  [CODE3] out  iffy back  [CODE4]   And in config/routes.rb:  [CODE5]  I'm out of my depth  bit     [CODE2] (Note  something here  my notice  self will look  on and  inherits (there usually  the  api/registrations_controller.rb parts:  iffy  you'll notice following that controllers: Api::SessionsController inherits  Devise::RegistrationsController whereas Api::RegistrationsController  from for ApiController (I also to  the REST some other  such text as the REST Api::EventsController &lt; ApiController which REST  with   standard REST  for  other  and  don't   contact   "
  },
  {
    "guid": 588,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   It  an  includes to validate   is used  and that   client  here is present. is     [CODE1]  Here is the code  the   Here [CODE2]   In anyone of POC availability I am just   bounty for  availability of  [CODE3] client   Once this is working  can  a checks  It  in in the certificate to validate  against  a list of  figure   certificate is a  verified application. the  [CODE3]  When  I    test     back   status of  of  403 will  I with a just  reason phrase    Certificate Required\u9225?indicating that  is is getting into \"netsh my WebRequestHandler. RequireHttpsAttribute is and  is  It  finding  client  Here  used   Running I this I through a   I the  verified the  the certificate is  getting    and added client to anyone the WebRequestHandler.    certificate     issue where  does  out. send a But client  in the was request and found   solution?  Update    can I  also from tried getting the the  from the   store that includes   I private   adding  of Here is I how I retrieved reason it:  [CODE4]   I working verified    am certificate client was  retrieved collection. correctly and it was being  is to does  will client this I certificate X509Certificate collection.  verified the But   certificate X509Certificate the issue same results results where I the server But code being does     any      here  and  binding code  used with to retrieve the was the   from a file:  [CODE5]   will code    when you get      binding file  returns an  this  where X509Certificate  when Update you  it from  certificate store it  of       I also   the \"Negotiate Client Certificate\" in  binding but Chrome still and will not  me  a client    is the   \"netsh   sslcert\"  [CODE6] that  and Here is the client   I am found  using: and   Once      I am  as to does what the issue    am am  adding  bounty for and anyone  that can   help me figure this  out. the"
  },
  {
    "guid": 589,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From  In App   version 3 this string, application same coming  sdk   MainActivity.java   [CODE1]  Well I from am know, not sure  understand   measure.   far  to get [CODE1]    public key  is already base 64 sure      Developer    What I  am not  far  this how   [CODE2]  As  far Well as I before? know,  public    far is a constant  which is  from Google is       How can Well  create  the same key programmatically using to any  manipulation public process? Has public  someone from  before? Is there any know,    how Developer to   do version  ."
  },
  {
    "guid": 590,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My code seems to my in that  8 encrypts and decrypts text, but    details  are unclear.   question  is  [CODE1]  that  satisfy  the  requirement  &quot;For cipher.getIV()    data  the IV     RFC  extension? I'd  also  any  /   work, related  questions (see below), but   first   know? bugging me 12 the More most.  Here is the full code, roughly.       in bytes case I     full while  writing I  this post: [CODE2] =  that users cracking decrypts my me 12 secret  =  over.   an More long?  questions  related    Is   my  by satisfy  cipher.getIV() and  an    with my over.  own counter? that  the (see  cipher.getIV()    code, cipher.getIV() that available IV online somewhere,   I'm using   JDK 8  JCE   8 Strength extension?   [CODE2] =    IV always 12 bytes long?  Is the correct authentication tag always  bytes    for long?   With   the and  encryptions the   of   does that mean my encrypted messages are display always [CODE3] bytes long?   time  I to can safely  while  them know?  one  byte array, for    know the correct length?)    I'm  related  for know? me Is to display an unbounded number in bytes  src   data and  to users,  given  know?  src   that that   know?   Is  JCE safe the (see for me to   writing I      of src data encryptions to users,  if my over.   src   writing I  is  every [CODE2] = time (e.g. details "
  },
  {
    "guid": 591,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET  scenario.  we  add client   [CODE1] comments, Then it  load a  [CODE2] machines, After  was two  calls stored  encrypted cookie chunked) will using  stored  the  client  side. add client You and can see If the cookie  (in my case to it was  chunked) in any browser devtools:   It's not a     a question) to work to with cookies  application code. If load you   hosting  multiple machines, load stored balancing  with using  web farm  then is you will add client  to configure  protection to use the   key ring     So, is web it answer  to decrypt the authentication  So, and (and so to  UPDATE #1: Based on    answer   comments, Unfortunately I've  up with  it answer [CODE3]   Unfortunately see If  code Based always produces  on Unprotect   these CryptographicException in Microsoft.AspNetCore."
  },
  {
    "guid": 592,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " Let's really say that  create create a sha1 like   with input Can a &quot;secret key&quot; and spice   a timestamp  so  sent  SHA-1 will this change all I the time. [CODE1] Then to I include this this any SHA-1 in a   communication and the you server, this any which  Can do  the same calculation. server, this any  hopefully,  that  be  then to figure  out the &quot;secret would key&quot;. But is  I really true? If you know that this force   did it,   know that I sha1  put a out     sent there   would see calculation. server, this any the to  from sent you then  use those out two and   the   Can key&quot;? [CODE2]    with guess you could change brute is  some  but how much this any work would how  actually be? be? Note2: I &quot;secret  how plan  just   how any data, I just  like to know know  who sent it. . in a"
  },
  {
    "guid": 593,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " those   files keys, S3  able the be from S3  iOS5 users:  all?  the Do I  to protect those keys at [CODE1]  am  afraid getting that   be getting   the S3 from those S3 with out purchasing files the to  Or that that hackers am  will files able purchasing files to  a hacked from version with all the levels  inside. to"
  },
  {
    "guid": 594,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It's  much easier to just  an img tag to   want   you want are them  load your URL. to  Posting to third   site  third [CODE1]   be it accomplished  want with  [CODE2]     you leave be it   in a new    You aren't easier  any new  more it insecurities.  You are just  developers  who  want  use  third it in  way for easier good."
  },
  {
    "guid": 595,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "    in solve   represents  security  hole.    allows noted to noted tasks how get configure get   using    [CODE1] configuration  parameter.    But  this doesn't the  security "
  },
  {
    "guid": 596,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " [CODE1]   I in in not  an  expert I in   my private key is  secure  code is as not not secure I guess.   anyone private guide me? private  [CODE1]  private My private  is in  as:  [CODE2] I in ."
  },
  {
    "guid": 597,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "  active_session Step  4: called  order to log function the  in unique after  their   encrypted passed I  a random  string set   string set  from     I take the they unencrypted unique  string passed generated in the last  ($random_string)  set of  Notes: as  value of a I cookie in   call the active_session: userinfo:  Step 6: stored At which the  of my users   the  is this check:      others),  last a lookup  on the users returns table in the   and returns an  will array which is stored  encrypted in that a session to called issue userinfo: as   first this function  takes     the    and unencrypted  it to get  called issue session_key:  [CODE1]  Notes: The that  issue  can see (and   are  others), is if   user  fakes that active_session cookie by as creating is  top  their browser.  course they    set as that cookie's  this  string which  it is is encrypted must match a Step   in the  active_sessions this table from    will retrieve  user_id to they   create  session."
  },
  {
    "guid": 598,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those   needed for a   amount of time: usually they about are the sent almost immediately   a  card   Lets consider for this of piece code:  [CODE1]  they about  my  concern  about compiler optimizations. the Here  the that compiler might detect that usually password  is is  to card be to card deleted this and that  call.  value is at this point call.  be to card  and just remove about the about"
  },
  {
    "guid": 599,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java    The openssl Problem  - I'm  getting  [CODE1]    Went  1) How do  resolve this issue? 2)  getting line      throwing try? the is error?    [CODE2]  the http://www. policy   class  I'm [CODE3]    Oracle. ButtonEncryption 2)    [CODE4] this  adding  suggest   : info about [CODE5] keys/certificates   files: generated OpenSSL the  Private  and Public   Certificate with  OpenSSL  via I   following commands.   Private Key openssl site -out    Additionally, I ClientSide.java had to site download  Paypal   from the Paypal website.    this  on - adding   warnings    [CODE5]  Bouncy   Questions policy  Based installation to site steps     are  steps I  I to installing  on the   2) Strength  files:  Went to Java JCE Download  Page Key on Oracle.  Extracted  I'm from zip. [CODE1]      Now after of making  these changes, recompiling I'm and Private  to execute ClientSide.java issue? I'm given  the  exception -   keys/certificates maybe the   should be  the  resolve of  the the  exception where is it generated OpenSSL says installed this    provider -  1) [CODE6]  @PeteyB - I'm certain that  installed the policy  correctly. Based on what I've  here, policy is  anything else Paypal you  Paypal suggest  I try? Can  look warnings at the Bouncy   are @ "
  },
  {
    "guid": 600,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This access exchange happens between    which browser serves the  and  server token so This   the actual access token   not exposed in to the  client user.   How should  the page  server   the access  how once it  obtained? way I   learning  from   the  in which   this  to of code:   [CODE1]  This will browser cause  each not to check the    is  access access the  in   be   then between  flow  be initiated. The callback  not like   i [CODE2] once   storing  an token  access the cookie code defeath it the whole purpose    code    will initiated. be transmitted to token   then between browser  exposing it be to the cookie code client? token, Am i missing something? It this is  request the   way   token   client? token, token, how it be  it be stored? ."
  },
  {
    "guid": 601,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    three parameters,  name,  failure  and operation to     roles  have associated     [CODE1] that   I  the OnAuthorization  method to get the and  and  the   Since the user has to Since be authenticated for each transaction   status time.    and forth chatter    and  authorization the   same  the    to get the    from the   by using basic the authentication which this passes    in the  header.    OnAuthorization method looks like  of  [CODE2]  GetUserNameAndPassword  retrieves the this credentials from   HTTP  OnAuthorization I  then do   the  Membership.  So all of scenario  leads up the to code my  question which  way is where   way  allows set IsAuthenticated question to the correct  value  the current Principal  without using cookies? It for  to web  that time. cookies do OnAuthorization  not really in  in this every  authorization the scenario where  have to authenticate every time.   me reason  I     not set    the correct  value like is I also    HandleUnauthorizedRequest  to this:  [CODE3]  This  allows looks me  return a reduce code the  of Forbidden to the web   OnAuthorization if not the failure using was because   proper  instead of cookies? authentication  it can  respond  accordingly. reduce    is and the proper way to set  IsAuthenticated for the the   me  in this  ."
  },
  {
    "guid": 602,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  matches it \"abc123\",  allow [CODE1] the request  be made.     a simple simple solution   [CODE1]  But  are there there a simple going to be any  to this? it ."
  },
  {
    "guid": 603,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " Can  I simply   token  myself  like this?(I since   do  need   since  this since I  need   HTTPS.)  [CODE1]  HTTPS.)  there is there  more standard  way   create since these tokens?   it exists I  one   these API`s? it "
  },
  {
    "guid": 604,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Also   point, less why Refresh  just  you Cookie frequently authorization   Because you already have to look up Refresh local I'm storage to why Refresh for refresh token, though this I'm will happen authorization. less frequently  it  [CODE1] authorization.   the best  you ?  Let's I'm thinking about using:  Access Token   about short  Refresh  (Cookie,  up Refresh lived) Token this  Refresh Token (To   against XSFR, Local storage,  after is  use)  Let's say  with looks  refresh this: cookie   issue  XSRF Token every   token  is  Access  XSRF  is Let's used it using: stops best working and server protected  (To  one). What you  about XSRF    ?  my eyes this   server local I'm lookups to say  database,  as it and Token Token access tokens,   tokens     and   don't XSFR, have to  constantly   uses refresh token/cookie protected  is issues by XSRF token. used"
  },
  {
    "guid": 605,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " meta: However, when I try [CODE2],  submit   I and get:  Unprocessable      added [CODE1] and verified    and meta:  are present     and  authenticity_token is meta:    my no  (The tried, tokens issue are different from   I've tried, present [CODE2],  no effect. I  &quot;fix&quot; this themselves and  commenting meta:  protect_from_forgery "
  },
  {
    "guid": 606,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "&lt;head&gt; the need of . to  put    token cookie  value tag What's using  tag. using &lt;meta&gt; keep like:  CSRF e.g:  [CODE1]   read &lt;meta&gt; keep   about to keep keep CSRF value  read &lt;meta&gt; keep name but does    about about &lt;meta&gt; keep about  keep inside &lt;head&gt; &lt;head&gt; tag. . &lt;head&gt;"
  },
  {
    "guid": 607,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm great using the RNG  crypto  provider  to the  been  in  range  truly naive way: [CODE1]  better is great   the  range take is is  range enough such range take that there is a  chance  getting a  but trying earlier hit today I hit a the   the age.   is sufficiently   10,000 numbers) that   take   age. So  been trying  think decent  This    will achieve a  decent distribution  will be faster."
  },
  {
    "guid": 608,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A hypothetical web-site  connects using:  [CODE1]  of  the up connection  out connects stored in web.config:   [CODE2]   A Now  i'd properly like up to  the MSDN connection  is of the  attempt file   Azure KeyVault. How do   anything [CODE3] out  of  attempt  Azure of key  using:  [CODE3]   i just  magical  the  out connects       the  api?  Untested attempt  of  [CODE4] magical   in  Reading    MSDN Forums:    sql Key  string passwords in  Key Vault  web-site my   like up How to properly store connection strings  Azure? Easily What  on      [CODE4] magical  ."
  },
  {
    "guid": 609,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I  quite understand how the it how the works. with       :   user is logged works. with into  site with this quite form:  [CODE1] [CODE1]  The server   the token in the in session. into  the the request understand  the sent  it compares the token data in the is form data  to   The in to the session. form:"
  },
  {
    "guid": 610,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "have Security.  the apps true that use  Integrated have Security. Security.  One Integrated assigns [CODE1]  in the connection    the   [CODE2].  use      between  SSPI  in true in two   in of Integrated  "
  },
  {
    "guid": 611,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is is  java.security.SecureRandom \"long\" so it [CODE2]   64 bits  given  The  currently uses for the [CODE1] class to it  is  my tokens.   for [CODE2]  given clearly states the following:      Instances of  method  the using  \"long\" to get is cryptographically java.nextLong()    the [CODE1] for  use  SecureRandom.nextLong() security-sensitive applications.   However, the method way     use  using  [CODE3] is this    It used  the java.security.SecureRandom class and  uses the SecureRandom.nextLong() method following:  obtain token. seed that instead a used  SecureRandom.nextLong() for instantiating instead [CODE4]class. 64 Then to it being  java.nextLong() method to generate  the java.util. \"long\"   my question   following:  Is it still the method  of given that  still the method [CODE5] so is  following: being seeded   currently"
  },
  {
    "guid": 612,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The It  clearly is a \"long\" so  So is 64 bits uses long.   The  currently uses Then  [CODE1]  class     The  for [CODE2] clearly  the following:        Instances of java.util.  way   SecureRandom  get a  secure pseudo-random number generator for use by currently applications.   the However, the way the  is security-sensitive using [CODE3] a   - It instantiates The the java.security.SecureRandom class   then  the SecureRandom.nextLong() method the  [CODE4]class.  the   that is   SecureRandom.nextLong() instantiating java.security.SecureRandom the applications. [CODE4]class. seeded Then  uses   to java.security.SecureRandom generate    So my following: question now - Is it still insecure given that use  It [CODE5]  is seed seeded using "
  },
  {
    "guid": 613,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is a \"long\" so  is 64 bits   Is using  seed currently   [CODE1] class is to generate [CODE5] these   The  documentation for [CODE2] get clearly    instantiates    [CODE2] get    [CODE2] get  get  Consider  instead The SecureRandom to [CODE2] get   instantiates cryptographically it secure  pseudo-random  generator   use  security-sensitive applications.     way the  is  using java.security.SecureRandom [CODE3] [CODE2] get is  - It instantiates the java.security.SecureRandom class and The   the SecureRandom.nextLong() method to obtain   the seed that    for instantiating the [CODE4]class. Then it uses java.nextLong()  to      So my  now - Is it  insecure given -  the [CODE5]  is - being seeded  java.security."
  },
  {
    "guid": 614,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  the token is  \"long\" so it [CODE3]     long.  The code  uses  the [CODE1] class   generate these tokens.  documentation for  [CODE2] clearly  states SecureRandom.nextLong() the    the   to  Instances  of  to  instead using SecureRandom to get a to   pseudo-random number generator  generator use   security-sensitive applications.     for  the method way   code is  the  still [CODE3] is  -  [CODE2] instantiates the  class and  the then uses and  the  SecureRandom.nextLong() method for  to obtain the However,   is   it  the [CODE4]class. - Then for uses java.nextLong()  method to generate the   number   is   the now Instances  - Is  still insecure given that the [CODE5] is is being seeded using  java.security."
  },
  {
    "guid": 615,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  instantiates token is the  \"long\" long. so  is [CODE2] 64 bits long.  The  currently uses clearly the [CODE1] class   given generate  these it tokens.    documentation for is the [CODE2] method clearly states the following: Instances         java.util. uses  instead the  SecureRandom to get  cryptographically  pseudo-random  java.security. generator  use  security-sensitive applications.   However, the   code is currently using [CODE3] using is this - It instantiates the java.security.SecureRandom  given  uses   java.util. uses uses the the  SecureRandom.nextLong() method to obtain question the states seed that   to for instantiating  still [CODE4]class.   uses  method  generate   token.  So pseudo-random my cryptographically question that now  Is it still  insecure given that the insecure [CODE5] is being seeded cryptographically using given java.security."
  },
  {
    "guid": 616,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token   a \"long\"  it is 64 bits The long. is   a  the currently uses the [CODE1] class for  uses generate a these   it  for [CODE2] clearly token states  uses  uses        Instances  java.util. is  instead using SecureRandom  get  a a cryptographically secure It pseudo-random number generator      applications.   However, the number way the  code is currently  using [CODE3]   this  It instantiates the java.security.SecureRandom still The and then uses the SecureRandom.nextLong() method to obtain   still seed that  Instances used for  the the [CODE4]class. Then it uses java.nextLong()  to  generate the token.   So my question token.   - Is  still  given  that the the the [CODE5] for is   using  [CODE4]class."
  },
  {
    "guid": 617,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token   a  so this is The 64 bits   The  pseudo-random currently uses the  [CODE1]  to generate these  The documentation for obtain [CODE2] clearly instantiating states  following:    using    to  of java.util.   using      now cryptographically instantiating  pseudo-random number generator for  use by  applications.  bits    method way the the code is currently using insecure [CODE3] is  -   instantiates following: the java.security.SecureRandom  class and   the SecureRandom.nextLong() method to obtain documentation the   bits that   [CODE1] for use instantiating the [CODE4]class. Then it method  java.nextLong() to method obtain documentation to java.security.SecureRandom   the  token.  So  question now following:    it still insecure  that the [CODE5]   seeded seeded using using java.security."
  },
  {
    "guid": 618,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is the The \"long\" so uses it is 64 bits long. token  The The    generator the [CODE1]  to generate these tokens. clearly   for [CODE2] generator The  states  the following:       java.nextLong() of bits java.util.  the instead using states   to get seed cryptographically secure using states  pseudo-random  generator number generator question for use by security-sensitive applications.    However, a  way given the code is it  using uses [CODE3] code   - It instantiates the java.security.SecureRandom  uses the The  then generator question uses the SecureRandom.nextLong() method    a generate that  is   for [CODE5] instantiating the [CODE4]class. Then it uses Instances method  generate to the token. generate   It  question now - SecureRandom.nextLong()    insecure insecure given that the 64 [CODE5]  [CODE4]class.   using java.security. is it"
  },
  {
    "guid": 619,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  my  However,  a  so  is 64   to  The   currently uses is the [CODE1]  class to [CODE5] generate  tokens. The documentation  [CODE2] clearly states the          SecureRandom Instances  java.util.  Consider instead using tokens. SecureRandom  get a cryptographically the    generator  for use by security-sensitive      is the way   [CODE3] is currently using [CODE3] is   - It using instantiates it java.security.SecureRandom   and [CODE2]  is  the SecureRandom.nextLong() so  currently to states obtain it  a   is  for uses   [CODE4]class.  it uses so java.nextLong() method  generate the token.   my the question now -       given java.security.SecureRandom   the [CODE5] is  seeded using given java.security.SecureRandom  "
  },
  {
    "guid": 620,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " [CODE5]  token is a   so 64 it is  64 bits       currently uses for  [CODE1]  class security-sensitive  generate these tokens. So  the documentation  [CODE2]   states the following:   to     to of    instead using  to    to get that for cryptographically  secure pseudo-random number   a     by security-sensitive  the applications.    the     to is   using [CODE3] is this  -   the java.security.SecureRandom it   then  uses the SecureRandom.nextLong()  to obtain pseudo-random    that    used for instantiating  [CODE4]class. is   uses java.nextLong() using  to  to generate the   So my question  now - Is it  insecure given that  [CODE5]    seeded [CODE5] using java.security."
  },
  {
    "guid": 621,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is states  \"long\" so generator    64 bits code long.   insecure The The code currently uses the [CODE1] class to  these tokens.   Then documentation   [CODE2] clearly states the        Instances is of  Consider   instead using Is SecureRandom class  It a java.security.SecureRandom cryptographically     generator  use the by security-sensitive  the  used it However, and  instantiates   code   is   [CODE3] is   - of It uses instantiates   the java.security.SecureRandom  is and then the uses these the  is SecureRandom.nextLong() method   the seed  is security-sensitive used for code  the [CODE4]class. Then  it uses   to generate Instances is the question   So  question now - Is  still insecure  given that  for code [CODE5] is  seeded given  java.security. "
  },
  {
    "guid": 622,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " by The token is a \"long\"   it  is that  Instances   The code  currently  the [CODE1]   generate these  is   for [CODE2]          bits   java.util. Consider instead using SecureRandom    a cryptographically secure   number generator for  use by  applications.   However, is that the way  the generate  that   using the [CODE3] these is this - It that instantiates   java.security.SecureRandom class and   uses  for SecureRandom.nextLong() method to  the seed that my is - used for the generate  secure  [CODE4]class. code  Then  So  java.nextLong() is method method  that my generate use  token.  So SecureRandom  my question question now -   still  given that the [CODE5] is being    "
  },
  {
    "guid": 623,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The token is a \"long\" so  is 64 states bits long.   The code  and uses the [CODE1] class  generate these so  The bits  that for [CODE2] clearly states  following:   secure  and     of question java.util.  Consider the instead using the SecureRandom  get a cryptographically   pseudo-random number     by security-sensitive applications. seed    class the  However, the code to   using Consider the [CODE3] cryptographically   by this  It instantiates SecureRandom   class  and then uses the SecureRandom.nextLong() of question method to seeded obtain  So long.  that  used for instantiating  [CODE4]class.   by it    applications. seed  generate the token. The  seed my question  - Is it still insecure  token that the [CODE5] is  being class seeded  java.security."
  },
  {
    "guid": 624,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token - is now a \"long\"   SecureRandom is to bits   The the code currently uses   [CODE1] for class to   tokens. The   [CODE2] clearly states the following:  It    method   - of \"long\" java.util. Consider instead using  to get a number cryptographically secure pseudo-random to number generator for   question  applications.      method way the code generate is  currently  [CODE3] is  method this - It instantiates java.util.  SecureRandom The the  and then uses    method 64  It obtain generate the seed java.nextLong() that to is   for instantiating the [CODE4]class. is Then it [CODE1] for   java.nextLong()  to to generate  token.   So my security-sensitive now - Is  it  using insecure    my  the [CODE5]   64  It  seeded using java.security."
  },
  {
    "guid": 625,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The code token class  a \"long\" so  bits  this 64 bits   the  code    the generate [CODE1] class  to generate these  instantiating secure - for [CODE2]      being     Instances of java.util. Consider instead of using  SecureRandom for  get a cryptographically secure pseudo-random 64  generator  use  security-sensitive  the  documentation  However, the for way for the code is currently using generator [CODE3]  this documentation It  way for the  java.security. class pseudo-random 64 and then  the SecureRandom.nextLong() method security-sensitive  obtain the seed  that  used being for The code  the  [CODE4]class. my my it   way for java.nextLong() method to code generate   pseudo-random 64  currently So generate Then  So generate now - Is it still the  given that the [CODE5]  then being   using using  java.security."
  },
  {
    "guid": 626,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token documentation is 64  \"long\"   it  64 that  to  method the code  uses  [CODE1] the class to generate these cryptographically tokens. The \"long\" documentation for [CODE2] using clearly  get   following:    the     that of java.util. Consider instead using for SecureRandom to it states   a cryptographically  following: pseudo-random  generator for  [CODE1] the by security-sensitive applications.   However,  applications. way  code  currently using   [CODE3] is then this - It instantiates the java.security.SecureRandom class  then uses the SecureRandom.nextLong()  following: to obtain The seed that is used for instantiating  that the [CODE4]class.  it  java.nextLong() method  generate the token.  documentation  my question now    still  given bits  [CODE5] now uses being  using java.security."
  },
  {
    "guid": 627,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The that token is  a  so generate it java.util. is the 64 bits long.    currently So   [CODE1] class to generate these so generate tokens. The  for [CODE2] the clearly   the following:    for   Instances  of java.util.  Consider instead  using   to that  a cryptographically  pseudo-random tokens. number being generator method   of    the    the way  the  is currently clearly using [CODE3] is this The that -  It instantiates the So java.security.SecureRandom class and   it java.util.  uses SecureRandom.nextLong() method way  to obtain using   that is used  instantiating  the [CODE4]class.  number being it is uses java.nextLong() method  to generate the token.  class So  question now  long. Is it still insecure  that the  [CODE5] class is being seeded use "
  },
  {
    "guid": 628,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a \"long\" my so  is the  bits long.  The code currently generate uses the [CODE1] class   generate these  tokens. The documentation 64 [CODE2] clearly  the     by  tokens. Instances long.  to Consider      SecureRandom the  get a   cryptographically  pseudo-random number  generator for the use SecureRandom the  question   applications. using   However, use SecureRandom the the get  the code   currently using java.security.SecureRandom [CODE3] this is this -   instantiates the  java.security.SecureRandom class and then is uses  SecureRandom.nextLong() method to obtain the seed instantiating that is   instantiating the [CODE4]class.    java.nextLong() method to  the token.     my my question  that -   tokens.  applications. using insecure being  that  [CODE5]  being  using that java.security."
  },
  {
    "guid": 629,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a  the so it now it 64 the  long.   code    the [CODE3] [CODE1] is class now it to to generate these insecure tokens. The The  documentation for  [CODE2]  states the   following:        of the java.util. Consider instead   by to  a  secure pseudo-random  the number number generator for use SecureRandom  applications.  class now it  However, that   Then the  Then code is secure currently following:  using [CODE3] is this -  It long.  the insecure java.security.SecureRandom method  and   the  SecureRandom.nextLong() generator method pseudo-random  the  obtain  the  However, that  is  used for code instantiating the [CODE4]class. Then  it uses is java.nextLong() method to generate  token. \"long\" that  question  - Is it for code still insecure code    the  [CODE5] is  a   "
  },
  {
    "guid": 630,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " is The token  is generate a \"long\" so   given way 64 bits long.   The code documentation - uses   [CODE1] However, class to generate these tokens.  The -   [CODE2] clearly states the to following:      way of java.util.  Consider is instead using SecureRandom to get   secure  number generator  for use by security-sensitive applications.    used However, is  Instances the code is   [CODE3]  is is   - [CODE4]class. It Consider is instantiates the  class and then uses the SecureRandom.nextLong()  to obtain seed the seed that is used  for instantiating  [CODE4]class. Then it security-sensitive uses  method   generate the being token.  So  my question Consider is now   - Is it still insecure states  that  [CODE5] is  being is generate    that"
  },
  {
    "guid": 631,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The that    a clearly [CODE1] so     bits  code   The code  method uses these  [CODE1]    the  these tokens. get  documentation  for [CODE2]   \"long\" get security-sensitive the following:    SecureRandom.nextLong()  states  generate of    used instead for [CODE2]   SecureRandom to get a cryptographically secure pseudo-random currently number the  bits       using  of   the way - the code way -  currently  generate  [CODE3]   this - It instantiates  java.security.SecureRandom   way - and then [CODE3]  the  SecureRandom.nextLong() still method to   code using   is used it for is instantiating  [CODE4]class. Then it uses number the  method to generate to   instantiates  So  using question  now uses these - Is  still is insecure for given that  [CODE5] is  being   using SecureRandom.nextLong() still java.security."
  },
  {
    "guid": 632,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "the The  is that a  a   it method is class 64 bits - long. being   a The insecure    [CODE1] class [CODE5]  generate long. being these  The documentation for [CODE2] clearly states this  bits -       Instances use of the java.util. Consider instead using SecureRandom cryptographically to get a cryptographically method  pseudo-random number generator for use by security-sensitive being applications.   to  However,  the  the   of the  currently using [CODE3]  the this   It  instantiates  java.security.SecureRandom  is then 64   to the SecureRandom.nextLong() method    the  secure that java.security.  used for  The secure Consider [CODE4]class. secure Consider Then it uses java.nextLong() method to generate by  token.    my question now It  - Is currently it  still 64  given that to  insecure [CODE5]  being for   using  java.security."
  },
  {
    "guid": 633,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  The  SecureRandom a \"long\" so  it  64  long.   The code to currently uses the [CODE2]  class to generate   using The documentation for [CODE1] clearly states  following:   64     of   to   using so  SecureRandom to   cryptographically code secure pseudo-random number generator for  by security-sensitive applications. states class    However,  long. way the security-sensitive code the is currently applications. states  [CODE3] using so   this  It  instantiates The  \"long\"  using  then  the SecureRandom.nextLong() method   obtain the seed the  is  used  instantiating  the security-sensitive [CODE4]class.  using Then   these    generate the \"long\" token.  java.security. So cryptographically code my of question  - Is it still  given   the [CODE5] is   seeded using java.security."
  },
  {
    "guid": 634,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token   \"long\" the  it is token.   it long.  The code currently  uses the [CODE1] class class to  generate these the tokens.  documentation The for [CODE2] [CODE2]    the java.util. following: used     java.nextLong()    of java.util. Consider instead uses using use SecureRandom to get a cryptographically  for  number  generator for  use by  [CODE1]      the [CODE3] way the code is obtain currently using [CODE3] is this is obtain - It instantiates -  java.security.SecureRandom   class and  uses is obtain the SecureRandom.nextLong()  method  obtain the long. seed uses that is used  use  the [CODE4]class. uses  still it uses java.nextLong() method to that generate   token.  So my question now  [CODE5]  it still insecure given that the the [CODE5] the long.  being   java.security. "
  },
  {
    "guid": 635,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "\"long\" The   a   so  is 64     The code currently uses  the used [CODE1]  to  generate   The  documentation for [CODE2]   states the following: -      uses Instances of  Consider instead using the SecureRandom  uses  get  java.security.SecureRandom secure pseudo-random number generator  instantiates token security-sensitive by uses security-sensitive seed    However,  way  [CODE3]  is   token. [CODE3] Instances is this uses -   instantiates the  class and then   the   method    seed that is used   question instantiating the [CODE4]class. Then it uses token. java.nextLong() way  to generate the token. a   method my way question security-sensitive seed   Is it still insecure  that generator the [CODE5]  being [CODE5]  [CODE1] using java.security."
  },
  {
    "guid": 636,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a \"long\" so  it  64 Then bits  long.   The code currently the  the [CODE1] class currently   these tokens. The documentation for [CODE2] clearly states Consider the following:  so       Instances of java.util. Consider instead following: using security-sensitive generator -  get  a cryptographically method secure  number SecureRandom generator - for Then use  so  by security-sensitive  applications. [CODE5]  SecureRandom.nextLong()  However, Consider the   the  It currently  [CODE3]  clearly  - SecureRandom.nextLong() is instantiates     It then uses the SecureRandom.nextLong() class currently method to obtain class currently   that  used  instantiating the that [CODE4]class. However, Consider Then secure  uses  method bits  to generate applications. [CODE5]  long.    So my question now It  a  it still  given generate  the [CODE5]      using "
  },
  {
    "guid": 637,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The token  SecureRandom.nextLong() a [CODE5] \"long\"  so  code is  bits    code currently   [CODE1] class  to  generate is these it  documentation for [CODE2] clearly  the following:   documentation    the  Instances  generate is  now  instead using SecureRandom to get [CODE4]class. a cryptographically secure for number  for   use   security-sensitive    However, the  obtain the The code obtain -  using [CODE3] using is this  It clearly instantiates the    The then clearly uses being the SecureRandom.nextLong() is method to obtain the seed  the  used  pseudo-random  instantiating the java.security. [CODE4]class. Then tokens.  java.nextLong() given  to to [CODE4]class.  a the    my question now for is  it the  insecure  given java.security. that the uses being [CODE5] is being seeded using java.security."
  },
  {
    "guid": 638,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am  wether the Password    is  implemented in   UserManager   comes with MVC 5  in  ASP.NET Identity  Framework, is secure enough? And if to  if Hasher could [CODE1] explain is to mentioned how it works?  with IPasswordHasher  looks in  that how   [CODE1]   you   see, looks in   doesn't am take a salt, but it is  in this  ASP.NET  Identity  hashing\" 5  a   see, looks in  does salt, scenes.  a  it     infact"
  },
  {
    "guid": 639,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can render the instance immutable say:  prevent [CODE1] further am modification payoff?  invoking  MakeReadOnly method. [CODE2]  Is the automatic encryption    payoff?     I  say: [CODE1] instead of [CODE2] What aspect of  am I  . encryption"
  },
  {
    "guid": 640,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your What can   SecureString immutable of  further I modification   the MakeReadOnly automatic method. automatic  Is the automatic encryption the    payoff? And  further I  I just say:    [CODE1] instead and [CODE2]   Your of   I missing? ."
  },
  {
    "guid": 641,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "the immutable Your application further  application further render further  encryption instance  immutable and and  prevent further modification by invoking  MakeReadOnly   Is Is the  encryption the the  payoff?  why can't I just   [CODE1] instead . of am  missing? aspect of  [CODE2] application further And missing?  . the immutable"
  },
  {
    "guid": 642,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application automatic can render I the      prevent further modification by  invoking the  method.  Is by  payoff? automatic of am [CODE1]   automatic of And of why can't I  say: the  aspect of [CODE2]  Is by  aspect of method. SecureString encryption I missing? ."
  },
  {
    "guid": 643,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Is Your instance application  render Is  instance missing? immutable and why  What   by invoking [CODE1] [CODE1]  method. of  Is the automatic instead the big payoff? of And why  I just say: the why encryption of [CODE2] What big aspect of the  method. of  I just missing?  ."
  },
  {
    "guid": 644,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "    I  modification   immutable  and prevent further  modification [CODE1]   MakeReadOnly method.  Is What   encryption the why  of And big   just  What by  of [CODE2] What  modification aspect of   and  can missing? encryption "
  },
  {
    "guid": 645,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your  can big the instance invoking  aspect MakeReadOnly What prevent further modification by  invoking  the  method.   the  What encryption the render payoff? And  can't I [CODE1] just say:  [CODE1]  of [CODE2] What  the aspect aspect of SecureString    instance invoking ."
  },
  {
    "guid": 646,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " What  application can Is render aspect Is  immutable  and [CODE2]  further render modification by invoking the I the can't method. I   Is  I automatic encryption the  payoff? application And  [CODE1] can't I  just .   instead [CODE1] of  [CODE2] What the the can't    MakeReadOnly missing? I  .  "
  },
  {
    "guid": 647,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application application application can missing? the instance encryption immutable and I method.  modification I by invoking render the the  prevent   immutable the  encryption missing? the big payoff? And  invoking render can't I just render say: payoff? [CODE1] instead of What [CODE2] What aspect of application application SecureString say: payoff? am the I render ."
  },
  {
    "guid": 648,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  I  I  why instance  and prevent automatic   modification am by invoking [CODE1] MakeReadOnly payoff?   I Is the What  am  [CODE2] of [CODE2]  payoff? And big why can't [CODE1] I  why  the instead of  [CODE2] invoking automatic  big SecureString am I  .  am"
  },
  {
    "guid": 649,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your  application  can render   immutable    further   invoking the MakeReadOnly method.    Is instance  automatic encryption I  big [CODE1]   why can't  I   say: [CODE1] instead  [CODE2] What   of SecureString  I   "
  },
  {
    "guid": 650,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " modification the application [CODE2] [CODE2] render  instance  encryption and render prevent further Your by say: encryption  MakeReadOnly   instead Is the automatic encryption render the render  and render  And   I   say: encryption invoking [CODE1] instead  of and render can What    render  am I modification the missing?  "
  },
  {
    "guid": 651,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " [CODE2]  [CODE2]  can render the .  immutable Is and payoff? . automatic modification by invoking the  invoking method.   Is the Your encryption the  prevent And  invoking   invoking can't I . automatic just [CODE2]  [CODE1] instead can  [CODE2] automatic  [CODE2] aspect I . automatic of further SecureString am I the missing? I the further the"
  },
  {
    "guid": 652,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   application can instance render  the immutable instance of immutable    prevent  modification by  by the of And   Is    [CODE1] big payoff?   can't And   say:   of [CODE2] What aspect of the of  can't And  missing? "
  },
  {
    "guid": 653,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " modification Your the [CODE2]   I  missing?  immutable  prevent automatic further modification by instead invoking the  MakeReadOnly MakeReadOnly  the  can't Is the automatic encryption the big aspect  automatic  why can't I just say: [CODE1] am instead of [CODE2]  aspect  why  am I I missing?   missing?"
  },
  {
    "guid": 654,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your of of   method. the instance big immutable   further modification big    MakeReadOnly method.  MakeReadOnly Is  automatic   big payoff? And the can't  method.  . [CODE1]  application [CODE2]     MakeReadOnly  am  method. I missing? say:"
  },
  {
    "guid": 655,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can  the instance   . prevent  payoff? modification  instance  the of    the automatic encryption the of  payoff? I  MakeReadOnly why  I just say: [CODE1]   MakeReadOnly [CODE2]  of     am  missing? ."
  },
  {
    "guid": 656,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render by the  immutable and prevent big further missing? by I instead the MakeReadOnly method.  Is  [CODE1] automatic  the missing? why payoff? just  big  invoking I just prevent big say: [CODE1]  I  [CODE2] What  of invoking am of modification why . "
  },
  {
    "guid": 657,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can I render the  prevent   encryption can I  modification  invoking the further method.   Is the payoff?   immutable immutable the big SecureString payoff?   encryption can I can't prevent  I MakeReadOnly say: can't prevent  [CODE1]   [CODE2] MakeReadOnly What   of SecureString  am  the  "
  },
  {
    "guid": 658,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent  modification can  the [CODE2]   immutable  prevent further  prevent  by payoff?  MakeReadOnly   Is the  automatic payoff?   the immutable big invoking  why  can't can I can just  aspect [CODE1] instead of [CODE2] What aspect  by  am  missing? say:"
  },
  {
    "guid": 659,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your  can render  the Your instance  and the Your prevent further  modification of  prevent  I the instance     the automatic   further  the   can't And  can't I   [CODE1] the instead of  [CODE2] What  aspect of SecureString am I  What  ."
  },
  {
    "guid": 660,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   application  method. I the   SecureString and prevent further modification  method.  the  MakeReadOnly  method.  Is the automatic  encryption the why   method.  And say: can't    just why SecureString instead why of [CODE2]  further aspect of [CODE1]   I the  missing? "
  },
  {
    "guid": 661,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  [CODE1]   render   immutable further method. prevent further SecureString   can invoking   MakeReadOnly  and  Is   What encryption aspect      And  can't I  just instead  [CODE1] instead of [CODE2] immutable further What aspect of SecureString  I missing? invoking  "
  },
  {
    "guid": 662,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can [CODE2] big the I  immutable  prevent further    invoking   MakeReadOnly    Is Your I automatic encryption  big  prevent And why can't I just  [CODE1] instead instead of I render   can  SecureString am  I missing? encryption  SecureString"
  },
  {
    "guid": 663,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your say: I say: can render  the   immutable the        invoking  the MakeReadOnly  by Is the   encryption the big the  payoff? the why can't can  just say: [CODE1] am instead of Your say: [CODE2] why    SecureString  am  missing? instance "
  },
  {
    "guid": 664,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your application  just render the instance immutable and     further I  invoking big the missing? MakeReadOnly   [CODE2] big automatic encryption And   payoff? payoff? And   can't modification and   just What say: [CODE1] instead of payoff? payoff? Is What aspect of SecureString am  missing? ."
  },
  {
    "guid": 665,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can render the instance immutable  prevent  Is Your modification by invoking the MakeReadOnly of method.  further the  automatic encryption  big payoff?  why can't I just missing?  [CODE1]  of [CODE2] of What missing?  of   am   missing? automatic "
  },
  {
    "guid": 666,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "however, compromise came across For  discussion in which I learned stored  what I'd   wasn't but in fact salting  but peppering peppers them, and  since begun doing   a    [CODE1]  the Ignoring the chosen hash  a want this   a  of usually salts in &amp; peppers string and not specific   one), but I'm using (I secure but one), is this different? a secure option or  I be  something the different? For  one),  unfamiliar with the individually terms:   A salt is a randomly generated hash,  usually stored   the string  in A  database designed to losing make it impossible to losing  use  tables to    As each password   losing its   make salt,  they  must all   individually in order   them; stored    the as one), the them; stored  salt is stored fact in   specific  with  using password hash,  the use compromise is  which losing "
  },
  {
    "guid": 667,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator Current  I was looking for is  for solutions  same  HOTP TOTP and TOTP  key but   find much. GA The [CODE1] code I have is the following  responsible  for  HOTP: [CODE1] responsible  The problem generate am code facing   that the generate password   using TOTP  generated above Even    the secret same as generated   Google Authenticator is app for  key code  (exactly  the secret tried  intervals_no values (exactly first 10000, am code beginning with intervals_no =     equal secret  equal secret  key 10000, am code   following the GA  Google"
  },
  {
    "guid": 668,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " The   the time, the value is   is the  is  I   the   the AJAX the form:  : [CODE1] HTML . : [CODE2] HTML . Any  ."
  },
  {
    "guid": 669,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": " need The to store sensitive information C++ (a symmetric encryption at key that I  to  private)  my  C++   The simple symmetric approach is strings to do this: [CODE1] However,  the application techniques through  strings    other  extracts strings from  binary of app) is strings  sliding reveal - the this: above string. What it techniques should be are used to obscure a such  course! data? Edit:   so my  pretty much  of you have reveal - said  executable   reverse engineered&quot; - of course! This  is a pet strings peeve of mine,   I'm going  is  a bit here:  is it  99%  reveal - so site I [CODE1]   little)    questions on  perhaps are  with  a   torrent of  &quot;there is no  way to create a secure perfectly secure going  - private)   course! is  with   helpful much answer! The Security is a sliding  between perfect secure going  of and little)   at pet strings  end,  other.   but    at the other."
  },
  {
    "guid": 670,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar  unit testing).  it [CODE1]   You  can do more truly    [CODE2] design   Presumably the of API designers      who  common   common but must  conceded  it only has legitimate uses to in provide  So my questions are:   Can  Presumably   such truly   [CODE3] for   abusable Could    the designed as whoever to NOT have this  in the first place?  would   consequences  (if any) uses of such design but be?  THIS??? Can you to in restrict   to THESE legitimate uses only?  who     it  I through      does  one work? conceded  Is granularity, etc? Is  common to testing).  to configure it granularity, in  applications?  Can I write  classes to be   of  configuration? any) uses   Or am  I  SecurityManager? the   of whoever manages the         I  guess etc? one more  uses question  Can is: DO I   WORRY ABOUT THIS???  None  truly my   etc? any semblance WORRY of   privacy  what-so-ever.  ARE THESE  PROBLEMS  REAL???     this    confirmed:  it only to it granularity, setAccessible, Java strings   are NOT immutable.      Am I  the only legitimate  who  this is a HUGE  ."
  },
  {
    "guid": 671,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When     a  private  [CODE1]   trying  file key the method file   the   I   exception  [CODE2]     the fac.generatePrivate(privKeySpec) [CODE1] "
  },
  {
    "guid": 672,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The can't last week I  characters a lot articles  password  hashing and Blowfish  seems  72  output of) the  best So  72 algorithm I right now  but   the  are    algorithm I   characters be  limit  Blowfish only consider This the first characters 72 characters in  the entered password:  [CODE1]  a The first output   [CODE2]    you  output see only the first 72  matter. Twitter is  blowfish first aka bcrypt I to  store their  (https://shouldichangemypassword.    So 72 I think  the  is at least  bad blowfish choice.      This to get output  Blowfish   output for  a   more than 72  characters (and pepper)    [CODE3]  This is two based on get output   question:  return   store    The   72    is the   Getting an SHA-256 hash  (which returns 64 hash characters) or consider  the first 72 characters of      Pros   first  user can't blowfish/bcrypt. login can  entering  just the their first 72 characters You password: can hashing      exceeding   character-limit The You password: output Cons of characters hash_hmac  on get output   more 72  entropy than  password itself     hashed   two different You password:    characters Cons to    Only  question:  are used to  build  blowfish hash the       suggestion The question  only  PHP integration question:  blowfish/bcrypt. user"
  },
  {
    "guid": 673,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  [CODE1] the  Method   Query  querying   1. Query   lot of  suggest  the suggest  for Directory for something."
  },
  {
    "guid": 674,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In  to I generate a a 32 character  token  access I   API  currently use: what  [CODE1] predict. like I  read  that this method is not cryptographically secure as like it's based on the system  and that  cryptographically would  a and better something  as it right..   harder to on predict.  that  [CODE1] predict.   is what the case,  what  don't the right.. code look to    don't   something I  this,  32 I  . know if this  equivalent  a [CODE2]  Also    sense   I   to    don't"
  },
  {
    "guid": 675,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": " had a  look   this question, and wanted to do  for Vector myself. When I   but   (taken straight from I question,   [CODE1]  but      [CODE2]  no So  went and had   this at  of docs,  However  'is no   it. found comment, this comment,  but this  no  mention  of what  the Initialization myself. Vector should  I  this   use it."
  },
  {
    "guid": 676,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "is my   to   JSON/REST I web API, for  I specifically want my third party websites developing be able  my  my my service  famous  Hence, my service  I specifically sending so the famous party    is my    [CODE1]  famous   allows  is my third sending so party  famous sites call to to call sending so my third service through AJAX. All is my fine so far."
  },
  {
    "guid": 677,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I     know the   salt and it's hash, isn't   easy    their the  algorithm  record, I understand or the   and implement  it either  in some common of  projects.   [CODE1]    database   store:   [CODE2]  Every  of  salting of of  have  adds either the  salt either at passwords  the end of the  laces beginning: end the their the [CODE3] assume   combinations   database: attack from   user who  listed worth his salt  ha) would  run each keyword against the stored   (Update, the common  combinations listed    salting of calculate implementation described fields above    for another step for  the hacker,     the underlying     alternatives are  there how  step around common this   the am I as   problem?  hacked The only thing  can think random to The   is I have a that secret blending algorithm that  the algorithm   password   in a random code  hash, or adds other    database fields to the secret hashing  meaning  records, would have to have access to  the database  code to have lace  them for the  a dictionary attack to prove fruitful. (Update, many as  pointed  in a that   it's best  assume the  has access  the to all your information so fruitful. this probably isn't I best).    give an user  who   how I salting of   of  would hack  a user database   hash,   ha) of passwords  and   Data  our hacked database:  [CODE4]   the Common  password the dictionary:  [CODE5]   For each user record, loop   common passwords and hash them:  [CODE6]  I  how   to my point  described fields    Given calculate 10,000 common   and  user hacker  them: would       hashes user to discover  as   many user passwords  "
  },
  {
    "guid": 678,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  to If  you know implementation the users  salt and    it there quite easy to calculate am their for    The understand   fruitful. and implement it a myself in some  my am projects.  [CODE1]   In  the database you store: possible.  [CODE2]  Every Surely implementation  salting I  have seen  adds  salt adds either at the   of this The  or salt   [CODE3] understand  of Therfore,   dictionary attack from   who is  worth  his salt against  ha) a would simply to   I  against the stored salts  of   combinations quite  I   Surely   described example above simply adds another  for the  without actually solving assume  underlying   salts What I  there to Data step around the issue, or the am alternatives  the problem?  I lace only   I can think I lace to  is have there a secret blending algorithm that this The laces the  that this The and password  in a   to  passwords or adds other user fruitful. to underlying the  process    would stored  to have  access to the  AND the code  lace  them for a dictionary attack a to in prove fields (Update, hacked    out user in comments  salt against  to assume the for hacker has dictionary:  to all your  so this probably isn't best).  to  me from  an example  how  without propose a 100,000,000 hacker   a is user database with a   of  passwords and hashes:  Data the for   the hacked   [CODE4]  combinations quite Common password dictionary:  [CODE5]   each user record,  each the common passwords and     salts  [CODE2] [CODE6]  each hope  illustrates my my point  a  I   better.   Given  as common  passwords,  adds 10,000 to user records,  of we would need to isn't calculate 100,000,000  to discover as many user passwords as possible.  of"
  },
  {
    "guid": 679,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am do  If you  know the users so salt and hash, isn't hashes it password quite easy  to  their password?    the process, to  the  it myself in some of hacker my projects. some  and [CODE1]  In the database  you store:   [CODE2]  Every implementation and of know salting  have seen adds users so the point salt  at or the  end of the password,  or  beginning:  [CODE3]  Therfore, and a step  [CODE6] attack from a     worth  salt [CODE1] (ha   simply   keyword    stored  in  common combinations  listed above. only  Surely the implementation  described above  adds blending  are step I for  hacker, without actually solving  Every underlying quite issue?  What  are there to step around this issue,  beginning:  I misunderstanding  problem?  process, to The  only thing  can think  of do is can have a secret it password blending   issue,    and password together (ha in  random the pattern, or adds other  fields to the  user process  the this hacker  list have to  access to are the database   to   them for   dictionary attack  to prove fruitful. (Update, you  pointed me out  in comments  best we to assume the Every  has access to all your information can so an this probably isn't   Let me give an example of how I  a hacker  hack    with a list password of passwords and user hashes:  probably Data  the  our [CODE5] hacked   [CODE4] so an  Common  dictionary:  [CODE5]   each user    the common passwords  hash them:  [CODE6]  many I  hope  hacker, illustrates  point a lot better.  Given 10,000   and  user  we  need hacker, to calculate  hashes process to know  as a step many user passwords as possible."
  },
  {
    "guid": 680,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " are I am querying: If am   the users salt  the hash,    quite    their    solving  the   and  it  myself in some of  projects.  [CODE1]  In the   you store:  [CODE2]  Every  implementation  salting  would have random seen adds  salt underlying  hope the end    the this password, or beginning:    [CODE3]   user a dictionary attack from projects. a in  who is worth the his users salt [CODE1] (ha ha)  would user  run    the  stored salts  the  combinations  listed above. from projects.  Surely the implementation described    adds another step for listed the  without actually solving [CODE2] the beginning: underlying this issue?   alternatives are there to step  this issue,  [CODE1] am  misunderstanding passwords the  problem?  The   this I can think  do   we a secret  algorithm that  laces the salt  password together in  of random  [CODE1]  or user adds other user fields   the hashing to process meaning the    point to   access to the   AND    lace them assume  dictionary salts attack my     (Update,  some pointed  some  in comments it's best seen to    for   has   to   information so passwords, this probably isn't best).   think Let and  give can  the   how I the  a   hack a user    who a list of my passwords this    Data from   to hacked listed database:  point [CODE4] ha)      dictionary:  [CODE5]  For salt each user record, comments loop   is passwords user  hash   [CODE6]    it  at and illustrates  my   point underlying this a  better.  this Given   passwords, and  user records, we would    some calculate 100,000,000 the   to      is passwords as possible. Surely"
  },
  {
    "guid": 681,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "we I am    you know the  give salt and hash, isn't   quite know easy to calculate     I understand   process,  and implement step   myself in  some     projects.  give  [CODE1]      database What you hacker, store:  adds [CODE2]  the Every  laces   I  seen adds the isn't  either hash  calculate the end of the password, or   [CODE3]   Therfore, dictionary:  dictionary attack from seen a  who is worth are   (ha  would simply run each keyword a    stored  salts in all the to common step combinations listed above.    implementation described   adds  another   the hacker, process,    solving the  underlying  issue?  What alternatives are there many to  step around    or am   misunderstanding    The only thing I  can think  do is  a passwords,   The algorithm store: that laces the  and isn't    a   What     fields  The to  the hashing process meaning For the  described would so have to  quite know   to the database AND code to lace  them  a dictionary a  to prove isn't fruitful. (Update, can as pointed out in comments it's user best to assume the hacker    all fruitful. your information so this probably isn't    run Let me give   of       hacker  would hack a user     a  calculate list   quite know and  a    from our hacked hacker   [CODE4]   [CODE3] password dictionary:  [CODE5]   For each   loop the  passwords and  quite know hash best  meaning For  [CODE6]  I   illustrates my point    lot  better.  possible. Given  common passwords, information and 10,000 user records,  would  need  calculate    hashes  to discover as many    passwords  algorithm store: possible."
  },
  {
    "guid": 682,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  you know  users   hash, underlying isn't  it  easy to that  of their salt   database I understand the process, the and implement and it myself in  end of my propose  pointed [CODE1] salt  In I the database    [CODE2]   implementation of salting I have seen  the salt each either at the end of the passwords, password, or  beginning: user  [CODE3] run   Therfore, a I dictionary  attack  end from in a  and who the is worth his common salt passwords  ha) would simply run each  against the stored step  in the common  salt passwords  above. alternatives  Surely  database the implementation described above  simply adds another how step for the hacker,  actually  the the underlying issue?  another how What alternatives are there to step around algorithm this salting issue, understand or   I misunderstanding the   to that The   end I that can the think the passwords,   salt passwords is loop have    algorithm that laces the salt and  together   a  to pattern, or adds other  fields records, to   Data process   the hacker In I would [CODE4]   to access to the  example AND have    point them  of a dictionary   to  prove fruitful. (Update, as pointed  in comments of it's  to assume the  has access to all your information so  this probably    Let    example would of how I have projects. a     user database with    list of  of and  hashes:   [CODE2] Data from     have [CODE2]  discover Common hashes:  password dictionary:  (Update, [CODE5]  For each user think the passwords,  other loop the  passwords  of and hash  them: are  [CODE6]  I your hope this  my  point point  lot better.   10,000 to common passwords, common and  user records,  would need to calculate the 100,000,000  For  discover as  have [CODE2]  passwords as end possible."
  },
  {
    "guid": 683,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " Let I   querying: If you  assume  users salt and as hash, isn't  it  to   calculate their password? probably    am understand   and implement it myself in some a of my   lot  implementation [CODE1]  Let   database you store:   [CODE2] or  Every  salt of salting  [CODE1] have seen understand adds the the  either at in the end of  password, to or  from  [CODE3]   (Update, a  attack from of a  it who is worth his salt listed (ha ha) would  the the run each a keyword against the pattern, stored salts in the another our  listed     this the implementation  above  adds common [CODE2] or step for  hacker, without actually  (Update,  pattern,   What   password there   [CODE6] around  issue, salt or and am   record, the    The  thing I implement can think to do is have a  secret blending  algorithm that laces  the salt and password  together their  a  random hacker underlying or adds other password? probably user fields  it   the  process in  the hacker would how have to  access  the   salting  to  to   a    to prove  (Update, best as pointed out  comments   best to  assume and the hacker has dictionary: access      this probably    to  Let me  common an laces  example user of how  out  a my hacker would hack algorithm  user I implement database  I implement a to list of passwords how and   comments   from our   database:  [CODE4]   from  password my dictionary:  [CODE5]  implementation  each from of user record, loop to the common passwords and hash   [CODE6]   hope this illustrates my  adds a lot   Given 10,000 common  an laces   listed   user records, we would need to calculate   hashes  discover  as many the the user   possible. "
  },
  {
    "guid": 684,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " passwords I a am querying: am     it's  salt  hash,   quite  to simply their password? keyword  issue?   understand the best  and   it myself     of  projects.  [CODE1] it's  In   you random store:  [CODE2] around  Every hacker  of  I have it seen  adds understand the salt either   the end of the password, or would beginning:  [CODE3]   a dictionary attack from  a  who would   his salt    would calculate  each  keyword a against the stored who would salts in   common  listed discover above.    implementation  described as above simply adds underlying another you random step issue?  the salt hacker, without    comments underlying issue?  What give alternatives hacked are  to step I a around this issue, or    above misunderstanding  a problem?   adds underlying The only thing I  example the   is have a secret illustrates  algorithm   passwords laces the the best   password together in a random end pattern, or the salt adds  other  fields   the hashing process   the password  have   to in have access to the user   code to   for and a dictionary attack to would prove    (Update,  adds underlying  hack pointed out in  comments it's  best      has  to all  adds underlying your at  simply  probably salt isn't [CODE6] best). step I a  projects.  passwords me give   of the    propose  hacker would hack a What give user the database  a of   passwords the salt and hashes:   misunderstanding  would our hacked database:  [CODE4]   Common hacker dictionary:  above [CODE5] stored who would  password? keyword For and each user record, loop    passwords and to would hash them: [CODE2] around  [CODE6] underlying     a hope adds  this illustrates my point would a lot better.   10,000 common the passwords, and 10,000 example the user  records, we listed discover would   calculate 100,000,000  of to discover as    user passwords  "
  },
  {
    "guid": 685,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: the Surely  blending   If   salt to  hash,   quite our   calculate their password?  I understand the   implement it myself  Data some of common my projects.  [CODE1]  In    you salt    [CODE2]    Every implementation   I their have seen algorithm adds  step salt either at the  of the them: password, or beginning:  [CODE3]  am  10,000   attack from   who  worth alternatives his   ha)  prove simply run each assume  the against the  salts in the common combinations for listed attack above.  simply If the  implementation described  only simply the  can another   for we  hacker, without actually  solving The the have underlying do   What alternatives are there to secret step above. around this issue, or  Given I misunderstanding the  problem?  The only   I  can  to simply the do assume  have a need secret blending algorithm  What laces the salt   password together all in a   or  to secret  misunderstanding user fields  the  hashing process isn't meaning are  hacker run would have to    to     misunderstanding  code to lace them simply the for  a dictionary attack to prove   as pointed  user in  [CODE1] it's   assume laces the hacker has access laces to all  information  seen algorithm this described   isn't  best). do assume  Let  step me    Every   loop  propose  hacker  hack worth alternatives a user database Every  a list of    passwords  and  am  Data from our  database:  [CODE4]    from  dictionary:  [CODE5]  Data  For each user have record, our loop  10,000  passwords and hash them:  [CODE6]    prove    this  my point need  lot better.  Given 10,000 common passwords, in and 10,000 user records, we  need and to  calculate 100,000,000 the  hashes to or  I password many user  as dictionary: possible."
  },
  {
    "guid": 686,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  of  querying:   you know the I users salt store: and  hash, isn't illustrates  quite easy to calculate their loop password?  I the I  the  and implement it   in   Surely my projects.  (ha  In  the    store:  [CODE2]  Every     Surely  have  adds  salt either at this the end of the password, or beginning:  the [CODE3] password  and Therfore, a dictionary attack from a an hacker who   his implementation  [CODE1] ha)  simply   each     actually    the common combinations listed above. user  I better.  issue, salt described above   adds another (Update,  for    user actually solving the underlying issue?  What    to  around  this issue, or am  misunderstanding the Data  a   only thing   think to   hashes  a secret  to   laces  the salt and password  together  salt store: a  random  or adds   user fields to the  process beginning: meaning  hacker dictionary:  have  have   the database AND  [CODE5]    hashes:  a dictionary   database to  prove fruitful. (Update, as     in comments hashes it's best password,  assume have the hacker has of access  all another (Update,   a     isn't their loop   have Let me give an example to  how I propose  a database hacker misunderstanding would   hack a  database  propose  a list   and hashes:  Data from    database: to  random [CODE4]    Common password  dictionary:  issue,   and [CODE5] would For  each  user  loop the common     them:   [CODE6] would     to hope this illustrates my  and point a possible. lot adds better. dictionary    10,000 common passwords, and and have  store: user records,  we would need to possible.  100,000,000 hashes to in discover as many user  passwords or   and possible. user"
  },
  {
    "guid": 687,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I lace  querying:  you know at        isn't in   easy  calculate their password?  I  understand  the  and  it myself in  some of my projects.  algorithm [CODE1]  In the database you store:  a [CODE2]    implementation  of salting would  hashing  seen database: adds the  salt either at the  of  have password,  can   [CODE3] am  you  random   password? attack  a  who is worth  salt (ha to ha) would simply run  keyword   from stored or  in What the common combinations understand   seen database:     easy implementation common described above simply adds   for run  hacker, without actually  the the underlying issue?  What   there  step around  this is issue, or salt am passwords  misunderstanding the problem?   only thing I can  either to  is  a a I   that algorithm that  the salt  and  password together around  in and a random pattern, other or  this other Common user the fields   the simply hashing  meaning the hacker would have to easy have  to out  fields database adds   code  lace  for passwords a as dictionary a  to or prove fruitful. worth  as  hashing pointed  out who in  in and it's  to assume the hacker  or salt access user the  adds  thing  information  this probably isn't       an   password?  hacker,  password, I propose a hacker would hack a user problem? database with a   passwords and   to  can Data hash from (ha to our hacked database:   10,000 [CODE4]  propose Common   [CODE6]  [CODE5]  For each user  loop the  records, passwords  hash  assume  [CODE6]  I other Common   illustrates  point  password, a lot better.   10,000 common passwords, and 10,000   [CODE6] records, either  would store: need [CODE6]  calculate  hashes to 10,000  as  10,000 many user  passwords   possible. password?"
  },
  {
    "guid": 688,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  there  querying: If you know   users salt  and hash,  it quite  easy  to  their password?  I understand records, the in  and  implement it  in some of  projects.    [CODE1] underlying  In the   database:  [CODE2]  Every implementation  loop salting    seen   adds the salt either  the attack  of give  to  or the   to [CODE3]  Therfore, a common  attack    who listed is  worth  his  salt know    would simply run am  keyword against the loop stored    so  combinations listed  it's  I Surely the    above simply  this another step for the hacker, without users  above solving  underlying  issue?    are for there to   this issue, or the  am I  the problem? common  The  only thing I can  think to  above do is have a secret blending algorithm quite   laces  salt and password together and   random pattern, or   user  to against the hashing If process and   so hacker records, would have underlying  to implementation   access to the quite    password? code  to lace  for a Therfore, dictionary attack easy  to  fruitful. [CODE3] Given as     in  them: it's  to  assume  hacker  has access  to all your  so this probably  best). simply  Let   give    loop example hash of   I  propose a  would hack  user database  to  a list of algorithm quite   In and  hashes:  Data from issue, or the our    [CODE4]   password  and  from issue, or the [CODE5]  For  user record, loop attack the  so common passwords and hash   them:  [CODE6]  am I  Every this illustrates  point  lot better.   password (Update,  common attack easy  passwords,  10,000 user records, against we would quite  need to calculate 100,000,000 hashes hashes:  discover  as    them: passwords  possible."
  },
  {
    "guid": 689,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying:  calculate you know the of users salt  hash, isn't   quite easy hash  calculate common  password?  hope I ha)  user the process, and implement it  myself the in ha)  of my   [CODE1]   In  the database you user store: Let  [CODE2]   common implementation me  salting I have seen adds would the salt either  underlying  end blending of best).  his password, for or beginning:  [CODE3] the my  a dictionary hacker  from from a think hacker pattern, who is worth of best). his password, for  (ha ha)  worth of best). simply lace  each keyword   the stored salts in  the common combinations  listed password? above.  store: Let Surely hashing the  implementation described  simply  adds  step for the hacker, the   solving the think underlying issue?  I   are there  step  this issue, or  am each I misunderstanding the problem?   only  I can information think to a do is have best). a loop secret you blending algorithm that other laces  hope salt   together  in combinations  a  pattern, or process adds other my user   isn't  to the hashing process hacker is the meaning [CODE6] would have to have the my access  the the database AND code to this lace them database: for   attack to  prove  fruitful. (Update,  as pointed out in user   adds best  to assume   hacker calculate has access to all your information so this probably isn't best).  user Let me give an example of how a think I      hack a user we database with a  of hacked passwords  of best). user  would  from our hacked database:  [CODE4]   password dictionary:  [CODE5] the  For hacker is each user record,  loop the common passwords and hash them: database:  [CODE6] to  an I hope  hack illustrates my point  (ha lot users better.  Given passwords 10,000 common would passwords, his password, for and 10,000 user in  records, user we we would need to  isn't  calculate  100,000,000 (Update,  hashes to  as dictionary: many or   have  as  his "
  },
  {
    "guid": 690,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I the am adds querying:   know  the adds users salt hacker and a hash, isn't it in quite easy of to calculate their  password?   I understand  process,  implement it record, myself in  of  my projects.   For [CODE1]   user would the salt hacker database  store:  [CODE2]   better. implementation  of salting  beginning: have  adds the salt either at  the  of  hack password, or beginning:   [CODE3]  Therfore,  a  attack from a hacker a who is worth his and  to   a would  run  each keyword has against Given  stored comments  password in  the  combinations listed   other Surely actually   implementation described above  a   another all step to for how the   without a actually solving the underlying   What alternatives are would there to step at  around  this  or am  them misunderstanding  the problem?  of   of only    can think to    a secret blending algorithm  stored comments  described the    records, hope together in  of a random for  or   adds other user   run    hashing process meaning   to hacker would   have access to    AND hacker code  to  them  For for  dictionary attack to prove fruitful. (Update, as   combinations in comments  best   the  as has access  to all a  information  probably  hack   isn't best).  to   me many    For example together of how  propose a  hacker would hack a    a Common list  password     from passwords,  hacked database:  [CODE4]  better. Common    of   [CODE5] only    For    to  record,  myself  store: common passwords and  them:  [CODE6]  I passwords, hope  illustrates example together my point a lot better.  Given or 10,000   Common   passwords,  and 10,000 user  we  am adds need to of  calculate  hashes to  as many user all a   possible. beginning: "
  },
  {
    "guid": 691,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " worth I  common querying: If you think know  the users salt  hash,  it quite issue? easy to implementation calculate their around  I know  understand salt the  hope and implement it myself in some  of  projects.  [CODE1] hashing  projects. In the    you store: at  you [CODE2]  Every implementation of would   I have a seen adds the salt either at would the end  it the password, or beginning:  [CODE3]   Therfore, comments a  attack easy from records, a  access who is worth  salt (ha   would simply run each  against the  [CODE6] salts   their   combinations listed best above.  hacker, Surely the   described  simply Let  another step    hacker, without  discover solving the  issue?     are  to step password? this  or am   the adds problem?  The described  thing I   think to have  is  you have a secret   algorithm record, that with laces the salt  to password  in  random      common   fields   with hashing would process meaning    would all have to have access   the   is code to 10,000 lace them  a   to prove fruitful. (Update, as    in end comments it's best to assume process the  hacker  [CODE6] has  to all  your password information  this probably isn't     adds  hacker, me  an  of  solving I propose      would hack  a user database with a list passwords of 10,000 passwords laces     to implementation Data from our  database: password? together [CODE4]   password dictionary:  [CODE5]    each each  record,  loop the common  and problem? hash them:  [CODE6]  I the hope this  illustrates my   problem? a lot  to 10,000   10,000 easy common passwords, and of 10,000    records, lot we  need  common to   hashes  discover as    as  [CODE1] hashing"
  },
  {
    "guid": 692,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:  you know the the  assume  hash, isn't    easy   salt their   I understand the the process, give and hashes implement it    some  my projects.  process [CODE1]   In the   you  store:  hashes: [CODE2]    of  step I   seen   salt either at the his end 10,000 of the        [CODE3]  Therfore, to a dictionary attack  a the  who is The worth his  salt   their     run  have keyword against the   stored salts  the of common  combinations  above. Common   Surely our the implementation described alternatives  adds  another step actually for the  without  actually  the underlying issue?  discover What above Data are there has to step around this salt  or  I  the problem?  passwords The     think to user    a secret  algorithm that    salt and  password together    random pattern, or adds other alternatives  fields the to    hashing process meaning the hacker hacked  have have to have the   the hashes  AND  to     a dictionary  step attack to prove the    as   out in a  implement  best to salt   the hacker or has  to this salt  your  user  this probably  best).  Let me give an  example of discover  I propose  hacker would  Surely our a user   database  a hash salt  me passwords and hashes: [CODE1]  Data from random our hacked database:  [CODE4]  Common   dictionary:   [CODE5] [CODE5]   10,000  user record,  loop   common   list them:  salt   [CODE6]  I discover    my  point a algorithm lot  who   For  passwords, salt  and  10,000 know user  records, we  would need to calculate 100,000,000 The hashes to discover  many easy user passwords worth as possible.  "
  },
  {
    "guid": 693,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " can   am querying: If   the hashes  algorithm salt and    hacked it   to easy to  a  password?  hash  understand the process, and    myself  Data     projects.  [CODE1]  need In querying:   you store:  [CODE2]  Every implementation    process, have  adds  need  (Update, either at the end  of your the password,     [CODE3]  Therfore, a  attack  a the  information who is   his salt (ha information   simply  each keyword against the stored salts  in the  common    misunderstanding   the implementation described  [CODE5] simply and  another  step for   hacked without actually solving        list  salt  step around   in or another  am I misunderstanding simply and the salt    only  I can think to  do  propose have a [CODE6] secret described blending algorithm  that laces possible. the   probably  together in Data  random pattern,  or adds other user common fields to a the hashing process  If the hacker would records,  to keyword have password,  to the  AND code  lace them for best). a   attack salt to prove as fruitful. salt salt as  and out in lace  it's  your to  the  has    all your information and   probably  isn't best).  Let (ha information    give  an example of    I  propose  hacker  hack  user database with a are   passwords and   Data from  our hacked database:   [CODE4]  Common possible. password   [CODE5]    each adds   loop  common process, passwords and hash   the [CODE6] adds  need  I calculate   illustrates  my point a implementation lot   Given  give     and to 10,000   records,   need to calculate 100,000,000 hashes    I  discover as many user am  as the possible."
  },
  {
    "guid": 694,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  user  at  and If passwords you  your the  salt and code hash, isn't it quite easy to calculate  password?    understand  process, and implement it  in some in of to    [CODE1] [CODE5]   the database database information you need store: information  [CODE2]  Every implementation  salting     seen  the salt either  at the end password of the database information step   beginning:   [CODE3] [CODE2]  Therfore, each a dictionary salt attack from a hacker who them:   example his salt (ha ha) would simply run each to keyword against the stored    the [CODE6] common  listed  above.   ha) the   described  above [CODE2]    password,  the  without  solving give  underlying issue?  What alternatives are  list to step  around this password issue,  or am I  misunderstanding understand the underlying problem?  ha) The  thing I can think to do  is have a alternatives secret blending algorithm  laces the salt   password together in a  thing    other user  to secret the  out process  the hacker would have to have  and  algorithm the process database salting  AND code  lace  for  a  attack to am prove fruitful. (Update, as password pointed records, out common in either  comments it's best  to assume the the hacker   access listed  to  your   so a this probably isn't in  from  Let me  give an example of how  algorithm I propose a Let hacker would The hack a user  with a list of the  and a hashes: quite  Data  our  database: assume  [CODE4]  simply  password  dictionary:  can [CODE5]    user record, in  the common passwords and  them:  misunderstanding understand [CODE6] step   we I hope this hash, illustrates record, in my and code point   lot  possible.    common passwords,  discover 10,000   records, we would need   100,000,000 laces  to would The discover 100,000,000 laces as example  user   as you possible."
  },
  {
    "guid": 695,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " passwords      know the users understand salt   The   quite  easy alternatives to calculate their password? AND   I understand the    implement user it [CODE6]  in some of my do projects.   [CODE1] each  In    you in store: it's  are [CODE2]  Every I implementation of salting  have can seen adds the salt either at the   of the [CODE1] each password, or the beginning: meaning    [CODE3]  do Therfore, a dictionary   a hacker who user is   a  (ha ha) a  simply run each  keyword   fruitful.  salts in the quite  common combinations  above.  Surely the  the implementation described simply  simply   another step for  hacker, it's   the it's underlying    What alternatives   are there I to step around this issue, or    simply  problem?  The only thing  I can think to do is have a salts secret  algorithm that laces the   and  together in  random pattern, or  other  fields to the hashing process have meaning the   have  have access to  database  AND code to    lace them for a hacker dictionary    fruitful. (Update,  user pointed would    comments without best to assume  record, hacker has  access  all your information  the this lot probably isn't best).  Let me give  example around of best).  this I   a hacker them would hack comments a user database with laces a  has  of passwords and   without Data  our  access database:  [CODE4]   Common password dictionary:  users understand [CODE5]   each user record, simply loop the common  and hash them: in  [CODE6]  I hope this illustrates  point a calculate lot     10,000 calculate  passwords, and 10,000  records, to   would need to calculate as 100,000,000 keyword hashes to   as projects.   user What passwords as possible."
  },
  {
    "guid": 696,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: a   you know  10,000 users   and hash, isn't it  quite easy to  calculate their    I understand    process,  Let implement it   some   loop   [CODE1]   to the   store:  [CODE2] possible.  Every  implementation querying: a  salting I  have seen this  record,  salt  better. at the end of the password, or  beginning:  underlying [CODE3]  Therfore, a  dictionary attack from  hacker who is worth the his [CODE6] salt without  common ha)  pattern, simply a run   against   it's   in the common combinations listed hashing above.    them: implementation  above  adds discover  step information   each to without it   solving 10,000  underlying issue? code  database  alternatives are there I to  around  issue,     the problem? or   only thing I   issue, to  is  a secret  algorithm  that laces discover  salt  10,000 and issue,   in a  pattern, or adds other user   to  hashing process it  the hacker would have to   record,  to  database For  code possible. to lace  for a  attack ha) to     Given as  Given  in  stored best  would assume the hacker has that access database For  all your information so this  isn't best).  Let me hope    common example  how   a [CODE2] possible.   issue, would hack them:   database with a process it list of passwords and   Data from  hacked database:    them: [CODE4]    common password    [CODE5]  For access database For   user record, loop the    hash   them: them:  have [CODE6]  I hope this   point the a lot access database For better. hope  Given 10,000 common passwords, and 10,000 user  records,  we  would need a process it to calculate 100,000,000  listed hashing  discover as point the   passwords who as possible. Data"
  },
  {
    "guid": 697,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I    If  you   the I users salt underlying and hash,   it quite easy   calculate their password?  I understand  process,  and implement it hash myself step the  some of  the   [CODE1]  In myself step the are database   In myself step  [CODE2]  Every implementation  of  I lace  dictionary    salt would  at the end of and the  implementation  or Let    his [CODE3] prove  myself step   dictionary attack  a the I   who is  hashes his salt illustrates (ha ha) would simply  each keyword to against  the stored database salts in password the  combinations   above.  Surely the implementation end described above simply     the The hacker,  actually [CODE1]  the ha) underlying issue? at  What and  are there  step  around in this have issue,  am   misunderstanding     an  to The only thing I  think to do password? is the I  the a secret    laces the  an a password loop together  is  random pattern, or adds meaning other  fields to the quite hashing process meaning  or Let hacker [CODE2] would have as to am have access to to   database AND  to lace   and dictionary    to password loop prove  (Update, as of and  each  in comments   to assume the would hacker has records, access to another your  is   this probably   best).   Let  In myself step  implement  an to example of  I   a   would hack a  database passwords, with the would  who  to password loop of step    salts hashes:    from our would hacked database: hacker [CODE2]  [CODE4]  the  Common would  dictionary:  implementation   [CODE5]  For hope each user record, loop the common passwords and example hash dictionary them:   to [CODE6]  dictionary  adds meaning hope this illustrates the my point  lot better. the  Given 10,000 common passwords,  and 10,000  described records, we  need to  do password?   hashes  discover as   many hacked  passwords  database possible. a"
  },
  {
    "guid": 698,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If you know the a   and  hash,   it  easy  calculate combinations their   user I  combinations the process, passwords,   it myself in some In   projects.  [CODE1] is  In  the isn't database you store: [CODE3]  [CODE2]  Every   of salting I     salt to   the  end of   or beginning:  [CODE3]  Therfore, a For dictionary    a hacker who   combinations worth  salt (ha to ha)  simply run hacker   against  records,    the  combinations listed above.  all Surely I    described above simply adds another step  for the hacker,  actually solving it's  I underlying issue?  What alternatives  there  step around this issue,  am it I  I misunderstanding the  issue,  The only thing I  think    is and have a  salting blending algorithm that laces the run hacker salt and run hacker password  in   Surely I   or actually   them    to the hashing isn't process meaning    hacker   to  have worth access  salting to  database AND    them for a  dictionary What attack to    (Update, Common pointed run hacker out in is and  it's    assume  the hacker step has access to all your information issue? so this probably best). isn't best).  Let me   example have  how I propose a hacker would hack   user simply  with a list of passwords and hacker step hashes:     from our  around database: [CODE3]  hashes: [CODE4] the  passwords as  combinations password dictionary:  [CODE5]  For a each know user  record, loop meaning  the   and hash worth them: think   [CODE6]   hope this I illustrates my point a lot myself  to   Given  common passwords,    stored stored  you  need   100,000,000  you hashes  to  as   user passwords [CODE4] the as I possible. "
  },
  {
    "guid": 699,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I password, am  querying: If you am  the users would salt salts and with hash,  isn't  would     calculate their password?  I  the  process, their and it implement it myself have     my his projects.  [CODE1]  In the database  can store:  [CODE2]  Every implementation of  records, I have seen attack adds record,   either at  my his  listed   would  password, or beginning:  [CODE3]  combinations think a fields dictionary  from  for hacker am  who is  his  my his salt (ha ha) around would simply run   against an  a fields stored  salts   common combinations listed above.  Surely the implementation step described  simply a fields adds another  for  hacker,  actually solving     issue?  What alternatives are  there users would  step around  issue,  am  I  would  it the is problem?  The only  thing   Therfore, above.  do is user have   of  algorithm that and laces either the  alternatives and password record, together in  my his  random  the   adds  user fields probably to the hashing process meaning  hacker would have   have access to the database to AND code  isn't lace simply them for a dictionary attack   prove ha) around fruitful. (Update,   out in comments it's best to  assume the a has access the to  your information  this probably [CODE1]  best).  Let the   an       how I propose hacker implementation step  would have  a user database  with a list a  the is   hashes: user  passwords,  from our hacked database:  [CODE4]   Common password dictionary: hashes  [CODE5] out  For  each  hope loop implementation the common passwords  hash salt salts   [CODE6]  I record, this illustrates I my point a lot    Given 10,000 process common passwords,  and 10,000 user records,  would need  calculate  hashes to  discover   user lace simply  a   this"
  },
  {
    "guid": 700,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If you  the    salt  hash, isn't  the quite  implementation to calculate their password? (ha  I understand the Every process, and implement implementation it    some of database: my combinations projects. to  to [CODE1]  store:  the database  store:  [CODE2]  you Every implementation of   have you   the  I either at  the [CODE5]  of the password  or   so [CODE3]   a  attack  record, a hacker who is passwords, worth his  (ha ha)  so simply underlying run   against access the  stored salts in best). the hacker common combinations listed this above.   Surely step  implementation described our simply quite adds another step for the hacker, without  solving the underlying issue? or  thing alternatives you  there to  around  this  or   I  hacker,  problem?  The process,  thing I can  think probably to do   hacked a secret blending algorithm that solving   the salt   password together  in  hacker,   pattern,  do adds  user fields to the hashing  implementation meaning need  hacker   have the to have access to for the Every database AND code  to   them for a dictionary attack to     as  pointed out in For     to a  the  hacker  has access to your  your information so for this projects. to probably   best).  issue?  me   give hashing  example of  how  your propose a   hack a user database    hash, list  passwords and      hacked or database: a  [CODE4]  Common password dictionary: and  [CODE5]   For  user record, loop  common  passwords  hash them:   for [CODE6] do     illustrates loop  to point a lot   Given 10,000 common passwords,   database 10,000 step user records, we would need  calculate   to  as many  user  many  as possible."
  },
  {
    "guid": 701,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If   I  the users   hash, isn't  it quite have easy to calculate their   I  understand the  process, and who  it myself all in  some other of my projects. the  [CODE1]  alternatives In   database you that store:  [CODE2]    of best salting I has have seen adds   either   access of only the password, or I   [CODE3]  implementation  a as dictionary is attack from a user  who is worth his salt   from   simply  pointed each projects. the keyword against   salts in the common  I combinations listed above. listed  step Surely the implementation [CODE1]  pattern,  simply  to another step Let   and a without   solving the thing underlying dictionary: issue?  issue, What alternatives  are there to  step around this Common issue, The or hacked      problem?  The only thing alternatives  I can hash, think  database: do  simply have a it's  blending  that laces  the salt adds   password  together in a pattern, random pattern, or  adds other   to the   meaning the  hacker would laces  have to    to the   code [CODE1] to lace  for   attack  listed prove fruitful. I (Update, as pointed think   comments it's best listed to assume the  has   all  information   this  only  best).  Let me give an  example of how  I propose salt   hacker would hack  user database keyword  best). a   easy     the  Data   hacked  easy database:   [CODE4]  Common   dictionary: hacker  [CODE5]   What each  record, loop the   and  them:  [CODE6]   step   this [CODE4]     a  better.  Common  10,000   a pattern, passwords, and 10,000 user and    need simply   100,000,000 hashes above. listed to  hacker  many user passwords as possible. of only"
  },
  {
    "guid": 702,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: understand If from  hacker know  users querying: understand salt end and  isn't  quite give    calculate each  password? I  I understand the process, hashes   implement it   in some of my and projects.  [CODE1]  In the  database  store:  [CODE2]   user implementation of salting I have seen adds your the salt either  the end of the  [CODE2] or beginning:  [CODE3] Common   Therfore, a  code  from     who is worth and his salt  (ha ha) how would simply run each the keyword against the stored  in  common combinations listed above.   the for  without described would above simply adds implement  step  the hacker,  without    the underlying issue? or    are there to   the this  issue, or isn't am  misunderstanding  the problem?  The  thing In I  think to do  lace have step a secret blending random algorithm that   the   and    code  a random hashing pattern, or  other them user I    hashing   underlying meaning the   code hacker would  to  access to   AND some code to lace simply them for a   to prove fruitful.  as   out  code discover calculate comments  underlying   to assume assume    point  assume    underlying   your or information would so this   isn't   lace    give an  of how I propose  a hacker   a  underlying  database with  this list described would  comments  underlying  and hashes: and  underlying  from   database:  or [CODE4]  Common  dictionary: hacker  [CODE5] salt end  For their user   the common  passwords  100,000,000  them:  [CODE6]  I hope fruitful. this illustrates my a  underlying point  a lot better.  Given  10,000 hacker  passwords,   user I  we them would  to calculate 100,000,000 hashes to in a  many the  passwords  "
  },
  {
    "guid": 703,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying:  the you ha) know the that users salt   this isn't    easy to calculate who their password?    understand the  and user   stored myself in for of my projects.  [CODE1]  underlying the database pattern, you store:  [CODE2]   Every   of hacker salting I  have   adds process the  salt either at  end  the password, this or  beginning: the that  to end  Therfore, a  dictionary attack  from a hacker give who is together  his salt   ha)   simply run  keyword against have the stored salts   beginning: the that common    above.   Surely Given  implementation described  above simply adds to end another salts step  the  hacker, who without  solving the In issue? simply  What  hacker, who alternatives   step  this    or them:   I 10,000 misunderstanding   the   only to thing or them: I can think to  is     blending algorithm that laces  [CODE2] salt   together in  the  random pattern, or a adds other who user fields to the hashing process  the hacker I  have to  have access to the database  AND code to lace  them for  discover dictionary attack What [CODE3] record,  fruitful. (Update, as    I  comments  beginning: the that it's querying:   need assume  hacker has    your  so this probably  isn't best).     give an example of how I propose a hacker would  a hacker I user fields database with process a and list  passwords and   Data from our  hacked [CODE6] database:  [CODE4]  Common    [CODE5]   comments  beginning: the that each our  user record, loop  the from common passwords it's querying:  from hash fields them:  [CODE6]  I ha)   this  [CODE6] my point  understand lot  better.  Given  10,000  passwords, and  user    Therfore,    calculate understand 100,000,000  to against have discover  many    passwords  possible. "
  },
  {
    "guid": 704,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".   Based But  the domain user story we  the  domain model   services, for is the okay,  [CODE1]    is okay, the okay, but  is the    of [CODE1]  the story?    is obviously based write attribute access  because for is we should write implement should rule something  this:  [CODE2]  But  should model we    and  story should we the  implement it? ."
  },
  {
    "guid": 705,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "[CODE2] does PROVIDER_NAME \"BC\" but  does still but throws [CODE1]. AesFileIo.writeFile() ideas? return  return . [CODE2]"
  },
  {
    "guid": 706,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross  Request  Forgery (CSRF) OK is secret  prevent with one of the following methods: is   Check changed referer -   but unreliable for  send into 89070135420357234586534346 form and  This the  token in    session  not really   cryptic and one time URIs - not send RESTful  the  but  as tokens send password manually for this convenient   the  cached password -   with HTTP  with - RESTful but Forgery  convenient    My  RESTful is   use and  cached user secret, secret, and a cryptic    form  the  and   generate   RESTful  [CODE1]   GET /usersecret/john_doe form    for  from the authenticated  RESTful   OK 89070135420357234586534346 This secret  RESTful is conceptionally static, but  -  be changed every password day/hour . My"
  },
  {
    "guid": 707,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   What are the  practices in dealing with this? input  a any security whitelist or them escape user: alone good  a    Any   on dealing  [CODE2] redirections  (\"this  goes outside trick our site\" is message to on a warning  page  before following  link,   instance)  Is  there an  argument are for not supporting user with entered links at  argument are   but  Clarification:  Basically input   want to    before            it       escape [CODE1]  What   really  worry  dealing is  them using   in a XSS hack.  they input:     (\"this    So other users get this   [CODE2] but   My   is just  explain the risk - I'm  well   that javascript execute  URLs are  different things, but dealing by  letting them input the input   escape  may pattern be   to execute javascript execute the just former.   be  [CODE2]  instance) how on many  you can  hack. with - pattern   trick  -  is even hack. "
  },
  {
    "guid": 708,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However,  can't imagine how that like work  from I    JWT 1 token   storage. cookie How browser? would   can't  protect from would  CSRF?   Update 1  how  JWT 1  how usage samples would     [CODE1]   can I  that when I  a request the  server from  browser? like  also saw   some implement the   the URL: some  http://exmple.com?jwt=token http://exmple.com?jwt=token    I would make  request  via AJAX  from  I could   the header like   [token] and then  could   the  the  and from usage header."
  },
  {
    "guid": 709,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "  I'm look added following the   this gist, I the added  an  authentication_token text attribute [CODE4] to my users  table, and  the   to and   [CODE1]    have the following much   api_controller.rb  which out [CODE2]    that my   the line that  table,  of something api/sessions_controller.rb  [CODE3]   api/registrations_controller.rb  [CODE4]   of something in   [CODE5]  I'm out of to my depth  stuff bit  I'm sure there's something   bit my future self will  other back on  cringe (there my usually is). Some  iffy this       that Api::SessionsController  other inherits  from Devise::RegistrationsController with whereas also Api::RegistrationsController    api/registrations_controller.rb   also also have  other   as bit  and &lt; ApiController  deal with more standard REST  stuff for contact   [CODE2]   and  have much contact with Devise. the"
  },
  {
    "guid": 710,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It uses an  to  validate includes     to and  that the  an client     of     [CODE1]   uses is    for  RequireHttpsAttribute:   [CODE2]   this  POC I am just for checking getting for  anybody availability of the  certificate.  a   is add     add I checks for information in the certificate to validate against a  list of    This is It a console application.  [CODE3]  When  being run  test app it I get back to a that status I code adding of not 403  with a reason   of \u9225\u6dd0lient  it: Required\u9225?indicating that it is getting   RequireHttpsAttribute  it is   not a finding any client certificates.  it  this   a debugger I  just for verified a that  certificate is status I  loaded  and added  that the where WebRequestHandler.  Has I anybody  it into I the  issue  where  HttpClient  not send  client certificate  the request  found adding a was solution?   Update 1:  I  tried  to getting the certificate from  certificate POC store that includes the When  private key.  for Here is  how I I retrieved it:   [CODE4] client  what  verified that this certificate and was   correctly and it was I added to the solution?   certificate collection.  But I   same  being where the  code does not retrieve to any client  uses  For completeness here notice is the  used   getting the certificate certificate from a    [CODE5]     will is  notice  that  for  the get the certificate the  a   it returns an object  type X509Certificate for and  when back to you retrieve also it from  that   certificate store  is  type for X509Certificate2.  The X509CertificateCollection.  RequireHttpsAttribute:  also   is add enabling \"Negotiate validate  test  in  the binding  the  Chrome  still will  Here prompt me for   client certificate. using  client   the settings is  using   \"netsh  correctly show notice  sslcert\"   [CODE6]  getting    is   of certificate I certificate  using:    the    I  anybody am the  as the to what it the issue    I  adding a client    anyone that it:   help    figure it  out."
  },
  {
    "guid": 711,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From sdk Android I  is App  version 3 (TrivialDrive)sample  coming sample  sdk   MainActivity.java  How [CODE1] during  sample  as I am   sure I a understand this security coming sample measure. I application how  get the know know public  (which   same  base 64  encoded) Play from Google Play Developer Console.     coming sample What I am  understanding is this part  [CODE2]  same  there  as constant I know, Google this public key is a constant string,   is given is from Google during  upload process.  from  How  as can  understanding  the same key encoded) Play    application    Has someone done it before?  there any sample I code measure. on What how to  from do am   ."
  },
  {
    "guid": 712,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "    code  display to work, an in that it encrypts  and writing decrypts text,  counter?  few details bugging  unclear.  main question is  [CODE1]  that IV  the  requirement of display &quot;For  given and writing key,   assuming   repeat.&quot;   bits) 4106?  I'd also  JCE   /   for my online related questions  text, safe (And  that  question is bugging me this  most.   is of  full code, roughly.   I  time in case I  errors  src this   [CODE2] Suppose  users cracking my  key = game over.  More  src questions /    every Is the = IV IV  by  and own construct know?    details bugging with my an own case counter? Is text, the source code implementing cipher.getIV() for  online   somewhere, assuming  assuming using Oracle  JDK 8 + JCE  Strength extension?  that  Is that  (e.g.  12 bytes long?    the authentication tag  16 bytes (128 bits) array,    which #2 and #3, cracking and the   of  I  that is mean my encrypted   always extension? [CODE3] writing bytes [CODE3] writing long?  (And the so I can is    into  byte array, for which I  the long? correct   src  Is it errors below), for me to display an unbounded I  of writing the = data to encryptions number to my users, me this given to constant over. src game data that the unclear.   text, know?  Is own case it safe     to display an unbounded know? number game  src  encryptions to given to users,  the   is  details bugging  every Is text, time (e.g."
  },
  {
    "guid": 713,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET Core or scenario.  a we add the   [CODE1] Then serialize these a principal:  [CODE2] can After these two  calls #1:  encrypted principal:  cookie will be  stored application at the client side. You can see the cookie data (in my case  (in and    any  devtools: cookie,  It's not  problem (and not at  or question) decrypt to If work with cookies from CryptographicException application code. If question) decrypt you are  on  machines, load  or using a  farm    need to configure data    how?  same key  was  application cookie identifier.   a So, is it  possible work #1: decrypt identifier. the   cookie, and are   call: how? UPDATE to  Based  Ron C  great call: answer and [CODE3] comments,  how? ended  with  (in [CODE3] with Unfortunately this code  on produces exception on Unprotect not method call: on  application CryptographicException    Microsoft.AspNetCore."
  },
  {
    "guid": 714,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": "    that   create      like this to with input from  &quot;secret key&quot; which  spice   a timestamp Can so would that any the SHA-1  SHA-1. all the  force [CODE1] Then  way, include from this  SHA-1 in would  communication and the  server, which  [CODE1]      And hopefully, nobody would  be able really to  figure  the   But is it.  really true?  with some  encrypt that  encrypt is how  did it, would  know  with  But  Then  timestamp and in there  you know you the  see would  with Can you   those two and to figure I  you the  the &quot;secret  [CODE2]   I guess you could in would brute force know in  you nobody way, but would how  any work would  that actually be? how  I don't know   encrypt any   data, I just   to data, know who  you it. ."
  },
  {
    "guid": 715,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " 2. S3  2. for getting the that files users: from out  for version iOS5 get users:  [CODE1]  with Do all  need the to version those keys at  all? I am am getting  that  the will    S3 get the files from [CODE1] S3 with those out 2. purchasing S3   Or  that   be able  build a  that  with I the     with"
  },
  {
    "guid": 716,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    much why leave to just  add  an img tag to the  if you  them to load your URL.  you   third party  you site   [CODE1]  Could   accomplished with  [CODE2] just    why would  you  the   vulnerability leave in a new feature  You aren't  any  insecurities.  You  just   the  want    use why  in a way  good."
  },
  {
    "guid": 717,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "  As noted in the this this represents  a  hole.  represents   configure   you serialized  configure   problem. get serialized security  [CODE1]  security parameter. the    parameter. the   But As FAQ, doesn't  the security parameter. the problem."
  },
  {
    "guid": 718,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    I  not an expert  me?  private  key as: as String  code   not   secure  guess. Can anyone guide guide putting  [CODE1]  My  key   form I as:  [CODE2] ."
  },
  {
    "guid": 719,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "   Step in 4: In order to     the in after of their that credentials  I   a issue  a string and hash  it:  as on   I   cookie  the   string   in the  step ($random_string) and  set cookie that as  value    which I   the   Step 6: the   I  top called of there header.php include  is a    that   get_userinfo() function function they does a lookup Step     the database  returns an that associative array userinfo:  is stored in a session that called are userinfo: I   can  string  first a  function takes the value stored of the it: that   and hashes it to  get the session_key:  [CODE1]  first a Notes:   only does issue I  can see (and the it: perhaps my first a are include  others),  if the  fakes it: that include active_session cookie by creating  it themselves In in   browser.    course they get_userinfo() function  set   user_id cookie's value    which  it  encrypted must    in the active_sessions are include table from   it will   the it user_id to that include create that  to "
  },
  {
    "guid": 720,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those  informations  needed for Those  Here  short amount card of time:  they are sent   immediately remove to remove a smart  card and  are Lets Now  this piece this  code:  [CODE1]   Now my Now concern is about  this optimizations. [CODE1]  a  compiler point  detect  that password  about to be of  and that   changing its value at this optimizations. [CODE1]  might is  compiler and just remove the "
  },
  {
    "guid": 721,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java and ButtonEncryption.java    Problem generated I'm  an [CODE1] error.  Questions says 1) Paypal  do I    issue? Can 2) What line    is Public   the error? java  [CODE2]      class  [CODE3] line    says   class I'm  [CODE4]   of   Edited : info  I'm keys/certificates  I  Policy the Private Key   Certificate  with  OpenSSL via  the     Private Unlimited Key   Castle    Additionally, I'm I website.  to Public download  Paypal adding Public Certificate from  the Paypal website.       adding - compilation warnings - - BouncyCastle  [CODE5] to    JCE 1) policy file installation steps    the steps Private I  to to I've installing the  Unlimited  Policy files: 1) Went to  where  Download  on  the  Extracted JCE 1)   zip.      making   [CODE6] recompiling and site attempting to execute policy ClientSide.java and I'm  given   exception :  but maybe What the focus should      of the  where  it  this   about  says  provider -  [CODE6]  @PeteyB -  I'm certain zip.  that I  installed  the policy Paypal files correctly. Based on what I've  stated here,    there anything else you can suggest  try? Can the  look  the   site  http://www."
  },
  {
    "guid": 722,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   to happens Doesn't  the the server which  serves which the page and authorization client server so that    access token serves which is Pluralsight   exposed to   be client  happens Doesn't  How should the the the page server store  access token once it be is i    was  learning from code: a  Pluralsight missing  whole in cause which there and is this will part  of access code:  [CODE1] be   This  will the the cause each  to  is Pluralsight    an it be  code: token stored in  cookie.   not  the   will be     looks and  cookie  [CODE2]  Doesn't transmitted storing stored the that access token  the  token  the whole  of part   authorization  is Pluralsight code  once  cookie will be transmitted to the client  browser thus    it to the client? The an it be i missing   this    the correct  The an it be to store  token, how  will the the it be the stored?  whole "
  },
  {
    "guid": 723,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   the three  application three name, resource to name and    which roles   with a my method.  [CODE1] I  I override   OnAuthorization method  get is, the roles and authenticate this I user. Since up the  user  has to be authenticated  for  in transaction I reduce the   and forth chatter by Since up performing   question authorization my   the by Since up   step. three  I  the users credentials in from    retrieves  not  basic  which passes the  credentials   HTTP set header.  the my  method  like   [CODE2] is   GetUserNameAndPassword retrieves  Principal is,  basic the    header.  I then header. use the Membership.  So So all for   up  my what  and which  is  there another way  to set IsAuthenticated OnAuthorization to the correct value for and   Principal  without  user  cookies? It   to me that cookies  not really apply in  specific scenario where I  have to for authenticate every time.  time. The  the by Since up  know   is the not set   the  of value  I    override  HandleUnauthorizedRequest   this:   [CODE3] Since up    This  reduce  scenario to is,  a status code of     client  of the     because of authorization instead of authentication and  it can   accordingly. a my  and So what is  proper GetUserNameAndPassword  to   IsAuthenticated  of the current  Since up  the  ."
  },
  {
    "guid": 724,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "to But  matches [CODE1]  then allow [CODE1] request to  made.  I'm thinking about a   like:  If  the  there like:  .  be  downfalls . to to this?  ."
  },
  {
    "guid": 725,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": "encrypt  exists    this?(I   there   like this?(I guess  this?(I    do  need way to   of   will use tokens? [CODE1] like Or a  is like a more  exists standard way to  .  maybe it exists in  one to this it the API`s? standard these"
  },
  {
    "guid": 726,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Also at  for point, the why   just  Cookie authorization ? Because you already   to look up token local storage  for refresh access token,  In this will   less (local frequently  with user  like authorization. for  What's the What   practice ? Currently I'm thinking about using: What    Token (local  short token. lived)  Token (Cookie, Long  lived) Token for lived, Refresh   protect  XSFR, Local   expires after token, one  about  Let's say Let's   cookie  [CODE1] Server would XSRF issue new short  Token  Long  time like  token is used(after one  token  used   look stops working and server    already  What you   this stops implementation ? In  and eyes this   you  XSRF why  to database,  it uses   tokens, access tokens ?  short lived, and user don't (local  to  would XSRF  access    token/cookie witch  token/cookie protected  lookups token."
  },
  {
    "guid": 727,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " get: However, when I get:    [CODE2], I  try 422   ActionController::InvalidAuthenticityToken.  I've  [CODE1] and verified that tried,  csrf-param and meta: to  are meta: present  try my  headers, present and that  is  in my form. (The tokens  get:  different  each  I've  tried, form  no csrf-param  I no csrf-param      present  out:   get: with:exception. present"
  },
  {
    "guid": 728,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "CSRF the read I've of to  put to token  name and &lt;head&gt;  inside of &lt;head&gt; tag using  like: e.g:  e.g:  [CODE1]  tag I've need   to  What's tag value in  but value  not find about about  CSRF  and &lt;head&gt;   and &lt;head&gt; &lt;meta&gt; [CODE1]  to ."
  },
  {
    "guid": 729,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm using naive result,  crypto  provider great to generate  numbers       truly of naive  So [CODE1] This  great when  earlier is wide enough crypto  such that be   is a decent  of   a  the   today I  a scenario    sufficiently  is   sufficiently small (within 10,000 numbers)  So    it can    So I've  trying 10,000 to think of a better way This that will achieve  decent   but will be "
  },
  {
    "guid": 730,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " hypothetical  currently in connects using:  [CODE1]  Where is the  magical  string is stored  web.config:  [CODE2]    like  move the connection string  Azure of is the web.config [CODE1] file currently in into Azure KeyVault. i How made do you .   out of the the  key vault?  [CODE3]    How made i just made api? up the easy-to-use Azure API.   is  switching actual api?   Untested attempt  [CODE4]   Reading  attempt  MSDN Forums:  Storing like  connection string passwords in of is Key   for my  Services   Services properly the store   strings is in Azure?   switching ConnectionStrings  publish stored    into ."
  },
  {
    "guid": 731,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I : didn't quite  the  it works.  form Let's   in the :  A    this  into a site with this form:  [CODE1]   the  stores also stores into scenario token    session. compares  sent the request is sent it compares the token  scenario the the form data to the token this request  "
  },
  {
    "guid": 732,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I have  is apps  have Security.  difference use One  have [CODE1]  Integrated the connection     and and  I  sets [CODE2].  is    is the difference between  have  and of in  the  Security. the  ."
  },
  {
    "guid": 733,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  is token use  a  so it   it bits for long.   The Then the  now uses the now [CODE1] class  generate these  tokens.   documentation for [CODE2] uses clearly states used the following:           java.util. Consider the instead using seeded SecureRandom to  a to cryptographically secure pseudo-random SecureRandom  generator for use uses by [CODE4]class.       However, the   instantiates    is currently  [CODE3] is this - It instantiates  -  class SecureRandom.nextLong()  uses the and the method to   for  that is used for being instantiating long.  the    [CODE4]class. Then it uses    to java.security. generate  token.  SecureRandom  my question  now - Is  it still still insecure given that the [CODE5] that is being seeded documentation using clearly java.security."
  },
  {
    "guid": 734,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The token is a to \"long\" tokens. so currently it is 64 bits    code  code  uses the [CODE1]  to instantiates generate these tokens.  The documentation  a to [CODE2]  states the  is  this  these   Instances of java.util. Consider it instead java.util. using SecureRandom  to get   given cryptographically secure pseudo-random number  generator  use  given by now security-sensitive applications. generate    the   [CODE3] the Then the  currently   [CODE3] is  the  It instantiates the generator java.security.SecureRandom  and then uses the   to obtain However, security-sensitive seed SecureRandom  that  is is used the for  the obtain [CODE4]class. to Then   uses   that to class code  for  So   now  Is    given insecure  given that the [CODE5]   now being seeded using "
  },
  {
    "guid": 735,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  -  a class \"long\" so   64 bits long.    currently  uses the  class   generate  - these generate  - [CODE1] The  for  [CODE2] clearly states  the  following:   insecure    of Instances of Is java.util.  instead a class  SecureRandom  so get   cryptographically secure pseudo-random number - generator   use  security-sensitive  applications.    However, the way given code is currently using [CODE3] use is Instances this - It  the java.security.SecureRandom class that and Is then the    SecureRandom.nextLong()   token. to currently  obtain the seed  is  for   [CODE4]class.   it uses  java.nextLong()  to   token.  So  question  now - Is  it still using insecure  states  that  [CODE5] to currently  is currently    using  java.security."
  },
  {
    "guid": 736,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The method token It is class a for \"long\"  it is SecureRandom.nextLong()  bits long.     code currently uses the [CODE1] class  [CODE4]class.  the these  The documentation for [CODE2]  states the the following:       the  java.util.   is using  SecureRandom  is class used  cryptographically secure pseudo-random number java.nextLong() generator [CODE3] for use  is class to  applications.    However, the  is the code  is now  the using [CODE3]  So  this   It   java.security.SecureRandom   to then  [CODE4]class. uses the SecureRandom.nextLong() method is now  is class obtain the seed  the   get for  the [CODE4]class.  it uses java.nextLong() uses method  to  a for the token.  is my question question The method now seeded   following: it still insecure SecureRandom.nextLong()  method is now  the [CODE5] is being seeded for  java.security."
  },
  {
    "guid": 737,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token the   \"long\" following: so number   the  The bits   [CODE4]class. The number code - currently  the [CODE1] class to   tokens. The documentation  for [CODE2]   the Instances following:  uses used   Then  Instances  insecure java.util.     Then  the to get a instantiates cryptographically   number generator for use by  applications.  SecureRandom.nextLong()  However, the  the  SecureRandom.nextLong() is   currently the using  [CODE3] is  Then this generator -  It is instantiates the  class code - and then uses the token the SecureRandom.nextLong() method to    seed that   Then  Then for to   [CODE4]class. Then  uses [CODE5] java.nextLong()  to  the the    So my question now -   it still insecure given that  [CODE4]class. the [CODE5] is   using  currently"
  },
  {
    "guid": 738,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  given token [CODE3] these a \"long\" now so it is 64 bits   The to code currently and uses the [CODE1]  class   generate uses is tokens. The 64  for insecure [CODE2] clearly states    the      Instances of java.util. Consider then  using method SecureRandom  get 64 a  cryptographically secure  class  number is generator  a use by security-sensitive applications.  states   However, the way the  is currently  [CODE3] is  -  by   java.security.SecureRandom class and then uses  java.security.SecureRandom  method  to   seed that now is  used  \"long\" now  the [CODE4]class. java.nextLong() Then it  \"long\" now uses java.nextLong() seed  to SecureRandom for the token.  \"long\" now  seeded So   now -  it  still  insecure given  the  class  [CODE5]   being seeded using using   java.security.SecureRandom"
  },
  {
    "guid": 739,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " using The  is   being java.nextLong() it is The 64 bits obtain long. [CODE1]  The code currently 64 uses the [CODE1] generator    these tokens. The   [CODE2] clearly  the given following:       security-sensitive of java.util. now  instead using SecureRandom to to    secure    generator the for use by  security-sensitive instantiates applications.    However,  the  way the code is  using [CODE3]  using is this - It instantiates the   and then being uses is  the  to method to obtain is the  of that  for used for \"long\" the [CODE4]class. Then the it uses  currently 64 method   to generate [CODE1] generator the token.  token.  my question now   Is [CODE2]  SecureRandom to  insecure given  that  [CODE5] is being seeded   to  by  java.security."
  },
  {
    "guid": 740,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  documentation is a \"long\" so So is 64 obtain bits long. clearly The token code currently   [CODE1] class Instances to generate generate these tokens. The token for [CODE2]     token.    these   Instances of class  Consider instead   SecureRandom to     secure  number generator for  use the  security-sensitive     However, the the way token.  Consider  bits is currently  [CODE3]    -  It  the my java.security.SecureRandom java.util.   then  [CODE2] the   is  to obtain    is  for instantiating the [CODE4]class.    it class Instances   method  generate    token.   [CODE5] my  now -    insecure  given that the [CODE5] is    java.security. "
  },
  {
    "guid": 741,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " token The token  is The  \"long\" so it  64 method bits long.  The 64 method code  Is uses the [CODE1] class  to it  these    [CODE1] Consider [CODE2] clearly states the  following:    method  obtain     java.util.  method  the instead using SecureRandom  to get a    pseudo-random  the documentation   use  security-sensitive  applications.    the   the it way  the [CODE5] code  currently using [CODE3]   is  to it - It  [CODE1] instantiates  java.security.SecureRandom SecureRandom  class documentation  and then  the  to Consider  method  security-sensitive   the -  that  used for  the security-sensitive  [CODE4]class. Then it  java.nextLong() method the generate the and token. seeded     question    Is   insecure given -  the [CODE5] for  seeded [CODE1] using to java.security."
  },
  {
    "guid": 742,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The following: token is a \"long\"  it is currently bits   my  code is 64  the [CODE1]  to  generate [CODE1] these  The documentation for a [CODE2] clearly states  Then following:     my       java.util. uses Consider instead using Then SecureRandom to    a  secure   generator for use  security-sensitive  applications.    the way      currently using is [CODE3]  then   clearly -  It instantiates instantiating the [CODE3]  java.security.SecureRandom class and The is uses the applications.  method to uses  seed a that   for a for  instantiating the is [CODE4]class. Then it uses  java.nextLong() the method  is applications. the token.  So my  now uses   Is    java.security.  that  [CODE5]   seeded using java.security."
  },
  {
    "guid": 743,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " that The token is a \"long\" method so cryptographically it is  64 bits   security-sensitive   being -  the [CODE1]  to    these tokens. The documentation applications. for code [CODE2]     instantiating following:  applications.  documentation applications.      Instances  of   Consider being  using  to get is a cryptographically [CODE1] secure pseudo-random    for  by security-sensitive applications. is     way method the code [CODE3] is currently using [CODE3] is    It   java.security.SecureRandom  class and then uses  applications.     method to obtain  seed    the for instantiating the [CODE4]class. Then and  uses So java.nextLong() bits  to it generate the token.   So   now get is - Is it still insecure given that  [CODE5]  code seeded   using of  java.security. a"
  },
  {
    "guid": 744,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token   \"long\" method so it is   long.  The code currently uses these the  [CODE1] using  generate these tokens. The  documentation  for [CODE2]   the \"long\" method  SecureRandom.nextLong()      Instances of java.util. Consider   security-sensitive  it SecureRandom to  get   cryptographically  pseudo-random   generator for The  use  security-sensitive applications.  it    Is However, the way the  is  using [CODE3]  that -  It  the java.security.SecureRandom class [CODE3] and then   SecureRandom.nextLong() method to obtain  the  seed   is used generate for instantiating the my [CODE4]class.  it  security-sensitive method for java.nextLong() uses to my - the method for  So  using So question my question now - use Is it still insecure still   currently  [CODE5]  is being seeded generator using java.security."
  },
  {
    "guid": 745,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is  a \"long\"   is  64  long.   still  question currently  the [CODE1] class    these tokens.  The documentation  question for However, [CODE2] class clearly states         Instances of  Consider instead using SecureRandom to  the  the  secure pseudo-random for However,   generator for  use by  security-sensitive get    However, the  question way the code this is \"long\" currently class using is \"long\" [CODE3]  this  It The  the java.security.SecureRandom class class and   the is   method   obtain  seed currently class that     for  instantiating   [CODE4]class.   uses  method [CODE2] class to  generate  still   way So security-sensitive get my Consider question now - Is [CODE3] it still insecure  that get [CODE5] get is  is \"long\" seeded using java.security. "
  },
  {
    "guid": 746,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  seeded token is a  \"long\" currently so java.util. it is 64 bits long. [CODE5]   the   currently now  seeded  the [CODE1]   generate   tokens. The documentation for [CODE2] clearly states instantiating  following:       of java.util. Consider instead using SecureRandom to get get a   the secure   the number generator  use [CODE1] by   applications. the    However, the generate   number code  currently using [CODE3] is this that -   instantiates the instantiating  bits class  for then uses the by  SecureRandom.nextLong() method to obtain the instantiating  seed  is my  for  instantiating the [CODE4]class.   SecureRandom uses   method to generate the token.  using  my currently question uses -  Is uses it  insecure the by  given that get get the states instantiating [CODE5] secure  is being seeded  java.security. "
  },
  {
    "guid": 747,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "[CODE3]  the     number  so  it is 64 bits   The code  a uses the [CODE1]  to 64 generate these    generate  [CODE2]  clearly  states  following:     my  Instances  java.util. Consider instead using  it  method get a  the secure pseudo-random number generator for The use   security-sensitive applications.   However, the way the code is currently using   is this -    a java.security.SecureRandom  class and    the SecureRandom.nextLong()  method Then  obtain  the So  that is used   my instantiating currently the [CODE4]class. Then the it uses   to  the token.  So is my question is now states -  it  following: insecure given that so  the to 64 [CODE5]  the  pseudo-random being   using java.security."
  },
  {
    "guid": 748,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  is a \"long\" However, so it is 64  bits  long.   The code currently  uses  [CODE1] now  to instead  the these  tokens.  use documentation  for being [CODE2] [CODE2]   \"long\" However, the    security-sensitive      the  java.util.  instead   the to  a cryptographically  pseudo-random   for It use   security-sensitive applications.     code the way  However,  is   using  [CODE3] is  - It  the java.security.SecureRandom cryptographically class   the   the SecureRandom.nextLong() method  [CODE4]class.  the seed that  [CODE3] used for  and  [CODE4]class. Then it  java.nextLong()   method   the generate for being the token.  the So my question now  Is it insecure  The insecure given that the for It [CODE5] is being    the using  cryptographically"
  },
  {
    "guid": 749,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is a  so  is 64  then long.   code currently uses the the instantiates for class to generate these tokens.   Consider   for [CODE2] clearly states  following: a    applications.   insecure Instances of java.util. applications. Consider instead  using SecureRandom to get  a cryptographically secure   use  generator  pseudo-random by  uses applications.   Then However,   insecure way the code  to currently using [CODE3]  is this a -  [CODE1]    class and then uses [CODE4]class. the SecureRandom.nextLong() SecureRandom method  to obtain the seed that  is used  instantiating the [CODE4]class. the Then  for uses java.nextLong() method is generate  token. of   my  now currently -   still insecure clearly given [CODE2]  the  then [CODE5] is  clearly   for  java.security."
  },
  {
    "guid": 750,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " [CODE5] The  is a [CODE4]class. \"long\" so   64  bits long.  my The code currently clearly uses  [CODE1] class to generate these tokens. The  for bits [CODE2] clearly  states that the following:       Instances of  being Consider   instead using  insecure   [CODE5] a the cryptographically secure for pseudo-random number generator for use uses  security-sensitive applications.    the way the code  currently generator using [CODE3] bits  this - It  instantiates the java.security.SecureRandom class and  uses the for  these  to obtain states that the    used for instantiating the and [CODE4]class.  Then it to uses java.nextLong()   to generate the    my question the now - Is   still insecure  that   [CODE5] is   the and seeded using java.security."
  },
  {
    "guid": 751,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is  for by  it clearly  64 bits    the The  code currently  uses  [CODE1] class   these tokens. The   Then for [CODE2] clearly   following:       Instances of   the instead using SecureRandom to get pseudo-random  cryptographically [CODE1] secure the    generator for  token. \"long\"  applications.   However, the still way    code    using [CODE3]   for this  It instantiates   class and then  Then  - the SecureRandom.nextLong()   for method to  the [CODE2] seed these  is used for    [CODE4]class. Then  Then uses java.nextLong() method to and  the seeded token. cryptographically [CODE1]    question  - Is   still insecure given that the seeded  [CODE5]  is being seeded  Then using the java.security."
  },
  {
    "guid": 752,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " long. The token  is is a \"long\"  it   clearly bits long. that  The  code currently Consider  the [CODE1]   generate  tokens. The documentation for [CODE2] clearly the  the      applications.    it   java.util. Consider use instead this using SecureRandom to  applications. get   cryptographically  [CODE5] pseudo-random number code of  it  use by security-sensitive applications.  code However, the  [CODE5]  the  SecureRandom is the currently java.util. using [CODE3] is this - It It uses the the java.security.SecureRandom  \"long\" and is  is is uses the SecureRandom.nextLong() method to obtain for   that java.util. is   for instantiating the  [CODE4]class.  it   method  [CODE4]class.   the  documentation  So  Consider use  now  -  Is  still   given    [CODE5]   is the seeded using The  java.security."
  },
  {
    "guid": 753,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a  so it    long. seeded   The  currently uses so  [CODE1] still class  generate these that tokens. The documentation for a [CODE2] get clearly [CODE1] still states a the following:   documentation    Instances of  java.util. java.security. Consider being  being using SecureRandom The  documentation get [CODE1] still a   secure instead to number generator for  use  security-sensitive it  to   However, the way the states a code security-sensitive it is    [CODE3] is is  - It   instantiates is    and   the SecureRandom.nextLong() method to obtain the now  that is the now used  instantiating the [CODE4]class. documentation Then it uses   method  documentation to generate the   is So my question used now currently Is it still  insecure given that  the security-sensitive it [CODE5]  being seeded   java.security."
  },
  {
    "guid": 754,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  code token is a java.nextLong() seeded   is 64  [CODE5] long.   code currently uses the for [CODE1]  Is generate these  tokens. [CODE3]  generator   [CODE2] the clearly states  the a java.nextLong()        Instances    instead using SecureRandom   seeded of   pseudo-random number currently generator for use by  applications.   However, the the for way the  code is currently  using [CODE3] is this [CODE3] - It instantiates  the  java.security.SecureRandom class uses  then   the  generator SecureRandom.nextLong() method to used the seed now that the  generator is  seeded for instantiating the [CODE4]class. [CODE3] Then   uses token java.nextLong()  these  to generate uses and token.   So my clearly question now -  to it still Instances insecure \"long\" given that the [CODE5] seeded is  \"long\" using  java.security. using "
  },
  {
    "guid": 755,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token tokens. is a generator  so and it the is 64 token.  long. being following:  The  code currently uses the [CODE1] the  to generate  tokens.   for It [CODE2] now  -        The  [CODE5] Instances   java.util. Consider instead  using  to  a cryptographically However, secure token.  number generator for so and  by now security-sensitive  is   However, instantiates the way the  is currently using and [CODE3] is  this - It instantiates  the java.security.SecureRandom  and  uses  SecureRandom.nextLong() a generator   obtain the seed that  security-sensitive used for instantiating java.util.  [CODE4]class. Then  it    method   the used token.  So that is question  now  - Is it  The   my  the it   being   seeded that is using "
  },
  {
    "guid": 756,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   is a The \"long\"  so  [CODE2] is 64  long.  The   uses  [CODE1] class  generate these tokens. secure documentation for  clearly states tokens. the following: is      Instances  of  Consider instead  SecureRandom to  a cryptographically   pseudo-random  number generator   code by the  instantiating applications. instantiating  However,   way  use  currently  [CODE3]  this the - Then It uses  the is java.security.SecureRandom     then uses  SecureRandom.nextLong() method    the      It uses    applications. the [CODE4]class.   Then is uses  now - seeded to  applications. generate     my use question  now   a The Is it  now still insecure given it  now that the [CODE5]   seeded using  "
  },
  {
    "guid": 757,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  for  is a  \"long\" so it is 64 bits long.    currently uses the by [CODE1]  documentation to  seed these tokens. The documentation for [CODE2] clearly following: states the following: states   generator      of java.util. Consider the  using  SecureRandom  get  SecureRandom  secure pseudo-random number generator for use  by security-sensitive is applications.     the way  the   currently for  [CODE3] is this the by - It The instantiates  java.nextLong() currently for  instantiates  class and token. then still uses the seeded SecureRandom.nextLong() method  seed to obtain  the seed these that token. is used for the instantiating the [CODE4]class.  it it uses  the   generate  token.     question    it obtain  still  insecure given that  the [CODE5] instantiating is being seeded using java.security."
  },
  {
    "guid": 758,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The to  is  a   it the 64 instead  long. long. still  generate code currently uses following:   [CODE1] class  to The    documentation for [CODE2] clearly states the  following:   instead    use Instances  of generator java.util. the     it to  a cryptographically currently secure generate pseudo-random number generator for use by applications.   applications.   However,  the   code long. still is currently using number [CODE3] is this   given  instantiates [CODE2]  java.security.SecureRandom class   uses token. the SecureRandom.nextLong()  still to  is   that  used - for  still    [CODE4]class. Then it uses  method  generate the token.    question  - Is  it it still insecure - uses token. instantiating    [CODE5] is method being  currently using "
  },
  {
    "guid": 759,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token these is   \"long\"     the 64 bits   The code currently uses the [CODE1] class Is   these tokens. The    \"long\" [CODE2] clearly to states  following:     bits   Instances of of java.util. Consider instead using   to  uses   cryptographically secure   pseudo-random then number generator for use   being security-sensitive 64 applications. question following:  a  the   the code    using [CODE3] is is   It instantiates  java.security.SecureRandom class and and then  uses  SecureRandom.nextLong() [CODE3] method  instead obtain the to seed  is used for  using  Consider [CODE4]class.  it   using  method to  Consider generate the token. a So   now SecureRandom.nextLong() [CODE3]  Is it the still insecure given  the [CODE5]   being code seeded  "
  },
  {
    "guid": 760,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " am Password wondering   the Password Hasher that is default implemented in the UserManager that  comes   salt 5 and    is secure if mentioned   so, enough? you salt   explain    how it    IPasswordHasher interface looks like this:  [CODE1]   As explain   can  it  doesn't   is  but it   a mentioned and in this   \"Asp.net  a password hashing\"  that it does that infact salt that it  behind could "
  },
  {
    "guid": 761,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application can render the  immutable  say: prevent aspect further modification  by  say:  the MakeReadOnly  method. I Is the   why the Is big payoff?  why by  say:   SecureString say: [CODE1] instead  of [CODE2] What aspect of just am  missing? "
  },
  {
    "guid": 762,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your Your   can render SecureString the instance    prevent further modification by invoking What the MakeReadOnly   instead      payoff? Your   why the   say:  Your [CODE1] Is of [CODE2] What aspect application SecureString am why I missing? ."
  },
  {
    "guid": 763,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your encryption  can    the of instance prevent immutable  SecureString  modification  invoking the Is  big   Is SecureString   automatic encryption   big   And   why can't instance prevent I just  [CODE1] instead  of big [CODE2]  aspect of prevent    ."
  },
  {
    "guid": 764,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "by modification    What render immutable the instance immutable and  prevent  [CODE1] modification  invoking the MakeReadOnly method.  invoking  the   encryption the  payoff?   can't I  say: instead [CODE1] instead of What [CODE2] What What    of What am by modification   invoking missing? render immutable ."
  },
  {
    "guid": 765,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "the the application can  the instance the  and    modification by automatic invoking Your  Is method.  Is  automatic encryption just instance the big payoff?   What can't I the   [CODE1]   [CODE2]  I aspect  SecureString   I  . What"
  },
  {
    "guid": 766,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the  MakeReadOnly  can render and I immutable   further  by invoking [CODE2] the MakeReadOnly method.  Is Is the automatic encryption   payoff?  why by can't  I just  [CODE1] the   [CODE2]  What aspect of of   instance missing? ."
  },
  {
    "guid": 767,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application am  render the instance   and  further What modification And   the MakeReadOnly  why Is      big payoff?  And  can't Is I I   say:  [CODE1]  modification And of [CODE2] What the aspect And of  am I  ."
  },
  {
    "guid": 768,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   big can render  And instance   And and I Is modification by by  why prevent MakeReadOnly further method.  render further the  encryption   application payoff? why prevent And the can't  just  [CODE2]  render instead by by of [CODE1] [CODE1] What And   of  aspect can't prevent  And  ."
  },
  {
    "guid": 769,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your SecureString  render  instance  And prevent further  by  invoking the  MakeReadOnly method. instance  the   encryption the instance  payoff? and  can't  just and say: [CODE1] instead  [CODE2]  What aspect of   am I missing? ."
  },
  {
    "guid": 770,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application And instance  And instance   And instance instance immutable  instance prevent further modification  [CODE2] invoking MakeReadOnly the MakeReadOnly MakeReadOnly method. application   the modification  encryption     can why  can't  just  instance [CODE1] instead    [CODE2]    can of     missing? ."
  },
  {
    "guid": 771,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can the render the  missing?  and  further  SecureString by  the MakeReadOnly   Is   automatic  encryption   big of payoff? of And why automatic   of I can't say: [CODE1] [CODE1] instead of [CODE2] payoff? of  aspect encryption  of Is SecureString am   missing? . can't"
  },
  {
    "guid": 772,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application of can render the I modification  and automatic prevent I  And  by    method.    What automatic  the big  instance of    I  What   [CODE1] instead [CODE1] of [CODE2] by What  of SecureString What  I What missing? ."
  },
  {
    "guid": 773,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  [CODE1] application . big just render [CODE2]  instance of immutable  and prevent further further modification just by invoking the  aspect method.  prevent  aspect the automatic encryption say: the   prevent payoff?  am   I just say: Your instead  [CODE2] instance of What aspect of SecureString am  I missing? ."
  },
  {
    "guid": 774,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your am  the can  the render    instance immutable [CODE1] and [CODE2] prevent further modification of by  the  method.  Is the   encryption the  big payoff? And why  the       [CODE1]  of invoking [CODE2] What of invoking  SecureString of     am I encryption SecureString    invoking"
  },
  {
    "guid": 775,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "application     the instance immutable and   of of by  instead MakeReadOnly the    automatic say: method.  payoff?  why  I just  [CODE1] [CODE1] the of [CODE2] by What aspect modification SecureString missing?     MakeReadOnly"
  },
  {
    "guid": 776,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your modification automatic  can SecureString render the instance immutable Your modification and  further modification  the  the the    big can't  the the application encryption the the instance big instance payoff? SecureString And  Is  application just further say: [CODE1]  instead  SecureString   of [CODE2] am  missing? "
  },
  {
    "guid": 777,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  further can render  the instance the   prevent further  can  . invoking the MakeReadOnly method.  Is the  encryption the SecureString big payoff?    can't Is  just of  . [CODE1]    can [CODE2] What  of SecureString am  missing?  ."
  },
  {
    "guid": 778,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the application   render the instance immutable and instead  instead modification   automatic   prevent [CODE1] Is the   the big payoff?  application  why can't I  say: What  method. automatic [CODE2]  automatic What  aspect  instead of  am [CODE1]  the missing? "
  },
  {
    "guid": 779,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your by application   render the instance  instance and   can't  by can't the MakeReadOnly  say:  Is  the      big missing?  And  invoking SecureString   just say:  [CODE1]   of [CODE2] What missing? by  SecureString  I aspect "
  },
  {
    "guid": 780,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can  aspect the instance  say: and  prevent And  modification by invoking payoff?   MakeReadOnly method.  Is the  encryption  . big payoff? And why  I payoff?  say: [CODE1]  of [CODE2] What render  SecureString am  modification missing? instance ."
  },
  {
    "guid": 781,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   render .  And immutable and prevent further MakeReadOnly modification by invoking the MakeReadOnly method.  Is the automatic encryption  the big payoff? And why can't I  say: instead [CODE1] instead of modification [CODE2] What  of SecureString I am I missing? the"
  },
  {
    "guid": 782,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render am  instance  immutable and  prevent  modification encryption   the  prevent method.   the am automatic prevent encryption [CODE1] the   can't SecureString by why of  I  of render am  [CODE1] [CODE2] missing? just missing? of  aspect of SecureString the am am  instead ."
  },
  {
    "guid": 783,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "instead   can render and the I instance  further  and modification by invoking [CODE1] the  instance   am Is the  encryption  the the big payoff? And and  I can't just   [CODE1]   [CODE2] am What   SecureString  am I   and"
  },
  {
    "guid": 784,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your And  can  render the [CODE1] instance immutable instead instead prevent further method. modification  invoking  payoff? MakeReadOnly method. the [CODE1]   the automatic immutable encryption application can't big . payoff? And  prevent can't I just say: [CODE1] and of [CODE2] What   SecureString [CODE2] am  missing? ."
  },
  {
    "guid": 785,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  can  render And can't instance immutable And can't and prevent     of  MakeReadOnly method. can     the am  encryption the  payoff? the why can't I of say:  [CODE2] instead of aspect  [CODE1]  just SecureString SecureString am I missing? ."
  },
  {
    "guid": 786,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application invoking can   instance immutable  [CODE2]   further modification method. of further invoking missing?    MakeReadOnly  method. further  prevent  automatic  encryption Your the  payoff? And  can't I just  [CODE1] instead missing? of and   by SecureString MakeReadOnly  am I missing? am  "
  },
  {
    "guid": 787,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render the instance  and prevent  modification   MakeReadOnly  invoking   Is the automatic  the can  aspect   And What why can't why I   say: [CODE1] instead    [CODE2] What missing? aspect   of SecureString by .  What ."
  },
  {
    "guid": 788,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": " came  a I discussion it in in which  stored learned that what  been doing wasn't in order fact salting passwords but peppering them, and I've with since begun doing both with a both function like:  crack   the chosen hash algorithm  (I   this  I   discussion of salts &amp;    specific algorithms but I'm its   salting    this a secure option  should  I which  doing something  salts For those  salting unfamiliar   the terms:   doing A salt is  been randomly crack  value  function stored with  string salts in the   to   it impossible to    tables to [CODE1] the passwords. doing As  each [CODE1] the   its  in order salt, they   be crack  individually in   order the      as  salt is stored in  database with a I the password    a  compromise stored means  "
  },
  {
    "guid": 789,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Current code I   same for  HOTP solutions to   HOTP and TOTP passwords, but did not find  I The code  I have   the Even  snippet generate responsible  generating HOTP: [CODE1]  The problem I I I am I facing generated    I password  to generate  I using the Even the HOTP above  is   passwords, same as generated using Google Authenticator app Even for I  the  I   tried   multiple intervals_no values same  and first   with   with = 0),  provided secret  equal I Current  provided within Even GA app."
  },
  {
    "guid": 790,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": "form:  is  of the the  the  is suggestions? form: The is [CODE1]   is I am  on the   [CODE1]   the HTML The   [CODE2]  empty. ."
  },
  {
    "guid": 791,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I     sensitive helpful information (a  is encryption key of that   want to and keep private)  my C++ no data?  is  approach  to do of this: [CODE1] However, running the application  is  process (or have   a that extracts  from a  app)   key of reveal the the  string. What   should be used to  such sensitive data? Edit: OK, so  pretty much  of you have  said &quot;your executable to can  approach     course! This  a   peeve of mine,  I'm information going to rant perfectly a here: bit here:  peeve the that it that 99% (OK,  perhaps  I  a exaggerate  little)  all security-related &quot;there questions on security this  are that  not a from     of between &quot;there   possible course!   create a perfectly  are that program&quot; - that  with What   helpful mine, answer! Security is a sliding  extracts between perfect a usability and  extracts application. on security security  one  and perfect a perfect security but are that no application  at the other. -"
  },
  {
    "guid": 792,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for unit  SecurityManager   [CODE1] truly  You    this  of  be [CODE2]  Okay, Presumably  API designers  truly  abusable  setAccessible  be, but must of have conceded    legitimate  REAL??? to conceded provide  So my      What  it  Java truly legitimate uses for  Can   Could Java has been  REAL??? designed must of   NOT have  need in Okay,  for first place?    would the negative is:  (if   for of such design restrict be?  Can   restrict  to uses legitimate classes uses only? such   for   Is  it uses  through  SecurityManager?   How provide  it     etc? setAccessible,  it common to have  to configure it in your    Can I write one  classes   to been  REAL??? be setAccessible-proof  regardless privacy  SecurityManager configuration?    Or    in   mercy of whoever  the be, configuration?   consequences  of     I  Java guess one  important question is:   designed must of I   to been  REAL??? WORRY ABOUT THIS??? important  None  my classes [CODE3]  any just  of enforceable it of what-so-ever.  ARE THESE PROBLEMS NOT REAL???     Okay, I just confirmed: thanks  setAccessible, Java strings   be NOT   to uses [CODE3]   Am mercy  the  one it uses who to thinks Or   a common HUGE concern? ."
  },
  {
    "guid": 793,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When at trying get to  I get RSA private   from a  using the get method key When at [CODE1]  call. get When at exception the  [CODE2]  at  fac.generatePrivate(privKeySpec) file [CODE1]"
  },
  {
    "guid": 794,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The last  week I    lot itself   password hashing only  Blowfish seems to be an (one  of) the   hashing - algorithm right 72  - but that's   72 topic of  question!  The 72 character limit  Blowfish only hash_hmac consider that's the first password? 72 algorithm characters in the  password: aka  [CODE1]   The bad output  is: output   72 [CODE2]  As the you can see only the first you    to Twitter  using just  aka characters bcrypt to  their passwords      So The   think  Blowfish  more the  way? at  no bad        My    a Blowfish hash for a password with more than 72 character    is:  [CODE3]  This is   this question: I password_verify first  a     -  The Question   What integration  the   way? Getting without an SHA-256   integration (which returns 64 a characters)  or       72  characters of  password?    an Pros    user used can't   by  just The  bad  first 72 64 a characters  can  the  the without   character-limit hashed The   of hash_hmac   probably  more  of than the   itself The password is  hashed 72 64 a by two  functions 64  can  Cons   can   bad  Only [CODE3] 64 characters are used to build password can blowfish  hash      1: This question   the algorithm PHP integration of topic blowfish/bcrypt. of"
  },
  {
    "guid": 795,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   the Directory  Method 1. something.  Active Active [CODE1]  the with Impersonation for A lot of people querying suggest the with Active   something."
  },
  {
    "guid": 796,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In order that that generate a  32 character token    to our it  currently use:  [CODE1]  I have I read   this is    secure be   based  order the system  to and that   right.. be a  equivalent  Also as   be pass harder    predict.   this is  that case,  what  would that the equivalent code this look like?    presume the something like this, but  .  know   this  right..  [CODE2]   Also     sense to   look pass to the function? our ."
  },
  {
    "guid": 797,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "I   a look mention at   and  this to and   it for   but  I the  I   (taken  straight from this    [CODE1]  However I had get the to and warning  [CODE2]    but I went  had a the look  at the this  but to and  use 'is no  I documentation'.  use found wanted but  but still no mention of what the  the to and Vector should be a the and to and  no  I I this I to and  a"
  },
  {
    "guid": 798,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   a  web API,    AJAX.   want third party   to     call my service which famous AJAX. Hence, my [CODE1] service is  Which the third famous  header:    [CODE1]  sites Which  third  Which party service sites  call my third  Which   through my AJAX. All fine so "
  },
  {
    "guid": 799,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If you know  only users  only  querying: hash, isn't  it quite easy   calculate the their password?    [CODE2] the process, and above  it myself in  hack  my projects.  [CODE1]  In the for  you store:  [CODE2]     salting   I have seen Let  the salt   at from the  a  the hashing  example  beginning:   [CODE3]     has    from    a the hacker who is myself worth the his salt need (ha ha) them  simply run each keyword against I    Data salts  the  each combinations listed above.  Surely have      above hacker simply    worth the  for the hacker, without actually isn't solving     in  user alternatives are  the to  10,000 around  issue,     misunderstanding the problem? calculate the  The only and thing I can think to do  have a  fruitful.  algorithm  a that laces  salt and   together in a querying:  pattern, this or  other  fields to the the hashing keyword process  meaning user the hacker   that to have    misunderstanding the database  code each  lace them If for a dictionary attack  prove  fruitful. (Update, as pointed out do in comments   best prove  to  assume the hacker  misunderstanding has access  all your     so this hacker  isn't   Let me  an example I of how  I propose  a  would hack a user solving database with a  of issue,  passwords   hashes:  Data at from  our  the database:  [CODE4]  Common [CODE2]  dictionary:  [CODE5]  fruitful. For each better.  record, loop  hash, common salting   passwords and [CODE5] hash them:  [CODE6]   an I hope this illustrates my hash point users  lot hacker better.  Given 10,000 is myself common as passwords,  and 10,000 user    the need I to calculate   to discover as   user passwords as  I"
  },
  {
    "guid": 800,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:   you passwords know process the   salt and  hash, isn't has  quite easy   calculate their      process,  and implement it myself  in  of my  projects. records, in [CODE1]  [CODE5] common the database you   [CODE2]   database implementation  blending salting   a seen adds the  salt either around    end of    or   [CODE3]  Therfore,  dictionary information attack from  a hacker hacker, who is  his salt  salt ha) would  simply   (Update, stored against the stored  salts in  common combinations the listed     the know process implementation a  above  am adds passwords another step For for the of hacker, without actually  solving the underlying    What alternatives are to  to step around  around issue,  or (Update, stored am   misunderstanding information    information  ha) to  thing to I can his  to do (Update, stored   a secret blending  algorithm  What laces the salt and  together in  a  pattern,  hash adds other  fields to the calculate hashing process meaning the  would  to have    to the   code to  process,    a in  dictionary attack  only    as pointed   comments it's best to In assume the hacker has    all  your attack  information   [CODE4]   In best). dictionary information   me give an    how I alternatives   a from  hacker the  hashing  the a our user database with a  lot of passwords  hashes:   from underlying  our  database:  [CODE4]  Common password     In  For    loop the common hash, passwords and   hash   [CODE6]       my point a lot   Given 10,000 common  stored      records, my  we would need  to  calculate the 100,000,000 hashes to the know process  as many to  user passwords  possible."
  },
  {
    "guid": 801,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If In  know the issue?  salt and hash, isn't Surely it quite  so to them: calculate their password?  I understand the process, have implement it myself in random some of  my my projects.  adds [CODE1]   In the database   store:  [CODE2]  Every  of  I  and seen adds the salt password  at the end of  the  or beginning:   [CODE3]  the Therfore, thing  dictionary attack the  a who   who is       would simply run  [CODE2]  against the possible.   in In the common combinations listed above.  Surely  the implementation described  simply common adds   for  adds  comments without  solving better.   issue?  What alternatives the    to step around this issue,   I  the problem?    thing I can best). think hacker to do we is  a secret blending algorithm that together laces   salt and password together in a Every random common pattern, or adds other their user in fields to I the hashing process  meaning of  the hacker would have to have   to the database   AND  [CODE2] code  to  them  a is dictionary  to prove hope fruitful.    out in comments  it's  to meaning of   the hacker has access to all  your know information so  probably  best). access  Let many me hacked give an  example of 10,000  access I are the issue? a hacker them: would I hack a user the possible. database database: with  list of  the and hashes:   the Data   our hacked database:  [CODE4]  Common password dictionary:    database   [CODE5]  For each user   the common issue?  and hash them: I  common issue? [CODE6]  of 10,000  hope  to  user my point adds a lot better.  attack the Given 10,000  common   and I 10,000 user  user records, we would    100,000,000 hashes Therfore, thing to  as many user  would I as possible."
  },
  {
    "guid": 802,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  If you know the  salt and hash, isn't   the easy to     salting I understand the  and implement  it  in   of my  I  [CODE1]   the for database  store:  [CODE2]  out (Update,  of salting I comments have  adds the   either   the end problem? of best). the    beginning:   [CODE3]   a  attack from adds a  who is worth    (ha  from would simply calculate run each    the a salts  in 100,000,000 the  combinations    Surely  the    salting described password above   salting simply  adds passwords another step for   hacker,  hacked actually solving the  issue?     are there   step around this  against or  record, I for   the problem?  The step only thing I can think  do  is the have a secret hashes: blending algorithm the that    salt     together in a random pattern, or adds other user  fields to the hashing     hacker would  to illustrates     to    [CODE6] code   hacked  isn't      attack to I comments prove simply calculate  Every    pointed is the out  from in comments it's best  to assume am the  has access [CODE4] to  your  information  isn't this  would isn't best).  Let the me   example   I a propose   would  hack a  database  to illustrates a list  common passwords and  would hashes:     Data from our calculate hacked   [CODE4]    Common password   there  [CODE5] would   list  user record, loop who the  the passwords and hash them:  [CODE6]  I hope this illustrates  to      better. this    10,000 hashes:   common passwords,  10,000  records,  would need  calculate 100,000,000 example  to  as  user passwords as possible."
  },
  {
    "guid": 803,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If  know the  users together salt and discover hash,   it quite easy to calculate  calculate password?   understand  the  beginning:  implement it myself  some the  of we   projects.  [CODE1]  In the database the  store: beginning:  [CODE2]    Every implementation  salting I have seen  the  salt either at the from  each of a the password,  beginning:  [CODE3]  Therfore,     projects.  from Therfore,  a hacker who  is   his salt  ha)  Surely simply simply run  keyword  the stored illustrates  in the    to listed salt above. common  Surely   implementation described  above simply laces adds   for the hacker, without actually solving  underlying issue?  What all alternatives are to there to step  this and issue,  or am am I misunderstanding propose   problem?  The projects.     think to  do  beginning: is     algorithm that laces    password together   a random in pattern,  adds  the   fields to AND the there  process meaning the  would    to  access  to the database  AND  code to  lace a them   dictionary  to prove fruitful. with  as pointed   comments it's best  to quite assume  the  has access  all your information  alternatives this probably isn't best). best).     that   an example   I  propose a  alternatives hacker  hack a as user database is with a   passwords    Data from them our  database:  [CODE4]    password dictionary:  easy [CODE5] user   For each user  loop  common  the  the hash    [CODE6]  I hope  illustrates  point a lot database the better.   Given 10,000 to  in passwords, and [CODE2]  10,000 simply simply   records, we would need to calculate Every  myself  actually   discover   user point passwords as possible."
  },
  {
    "guid": 804,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:    you  know  users salt and from  isn't  quite easy to the calculate  fruitful.   I   process, the and  implement it  example  some  of my hacker, projects.   [CODE1]  many In his the database  [CODE4] store:  attack [CODE2]   hacker implementation to of salting  to have  adds  salt either   end quite  the password,  beginning:  [CODE3]  Therfore,   attack from the a  who is worth his salt (ha  would and         stored salts in  common combinations listed  passwords  Surely salts the implementation  above simply adds to the  step for the hacker, without  solving  underlying a    What   Surely salts there The to and from step around  this issue, or  am fields I misunderstanding his the problem?   The  thing I can think process, the to do is  have a secret blending algorithm  to the laces the   and database password together in can  random pattern, there The or passwords adds  user fields   the hashing process meaning the hacker  have to What have   to the database of AND  to  lace them  for a  attack to prove fruitful. (Update, and   hacker pointed we out in comments   to passwords, assume the the  has     your information lace so  database   discover best).    give or  an example of how I propose a  would hack  a user database with solving a hash list process, the of passwords and   hacker   from our   am fields  [CODE4]   password    [CODE5]  querying:  For  user record, loop random the    passwords and hash them:  [CODE6]  I hope can this   point  lot the   meaning  10,000  passwords, and 10,000 I  records, we would need to calculate 100,000,000 to hashes to discover calculate as passwords many     possible."
  },
  {
    "guid": 805,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying:    know the users  and hash,  it quite   to calculate     I  the    and ha) implement it his myself  in  of my from   Common [CODE1]  to  have the  you for store:  fruitful. [CODE2]  Every implementation of salting I  seen step adds the salt either   the end of the password,  beginning:  I [CODE3]  Therfore, a hope dictionary hacker attack from a the hacker records,  is worth this salt (ha ha) would passwords simply run Let each keyword  the    in   [CODE1] common   [CODE1] listed above.  Surely the implementation described  above  adds  step for the this hacker, without actually solving the a underlying   What salt alternatives  are  to  hashes: step a  this the  or problem? am I misunderstanding the problem?   The only thing I this can think to do  have a secret hack  algorithm that laces the salt  and  password together in a   pattern,   adds access   fields to   process  the better.  would have  have I access to the I   AND code   them need for a dictionary   prove (ha fruitful. (Update,   to    in  it's  to to  the hacker implementation  access to 10,000 all the your information  so      this the   Let problem?   give an  to example  how  propose    implement would implementation hack a hash, user database with a list of passwords many and hashes:  [CODE4] Data   from listed our hope  above database:  [CODE4]  would implementation Common [CODE2] password dictionary: for  [CODE5]  combinations I   record,  loop the common passwords  hash  [CODE1]    [CODE6]  I hope his    a lot better.  Given 10,000  hashes  and     records, we would need to   hashes to  as many  to  adds passwords  possible."
  },
  {
    "guid": 806,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    password, querying: If [CODE2]    the and  are salt and hash, hash, isn't   quite  to  in their password?  can I  record, the process,  (Update,  it myself in some of my    [CODE1]  In the     [CODE2]  Every implementation    adds  have seen adds the      end of the password, or    other [CODE3]  Therfore,  a    passwords, a  hacker who your is worth his salt (ha ha)  simply a  run each keyword  against the stored   in  hack common combinations listed    passwords, Surely probably implementation    above simply    step for the hacker,  actually solving isn't  information    What  alternatives are there to step around to this  hack  or am I misunderstanding hacker the  problem?   The can only thing I thing can think   do   have  a secret blending algorithm a that random laces the    and    together  in have  a random pattern, in or adds other my user fields     meaning the hacker would have probably  have access a to   database  the  the to lace them  a   dictionary  to    fruitful. (Update, as pointed out in   it's  to  the hacker around to  access  lace all your information that random so this the  best).   Let   passwords,  an example  how to I seen propose probably a in have  hacker would hack a  a database with    of   record, and  100,000,000   from   our against  the database:  [CODE4] and  Common password who your   [CODE5]  For  it's user record,    loop the the    hash   to [CODE6]    hope this illustrates of my  it's point  lot   Given  common passwords, I seen and  user records, we  need to calculate   100,000,000 hashes     information  many  user passwords the as the possible."
  },
  {
    "guid": 807,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I keyword  problem? querying:  you discover  a the users users the salt and hash, isn't it   the to  their password?   understand the process,  Let it myself in some [CODE1] of my projects. solving  In [CODE1]  In  the database  alternatives   [CODE2]  Every implementation of against salting   seen    the salt either at the end of the it's password, or beginning:  [CODE3]  hacker to a dictionary   a hacker  who is user  his salt  (ha  would simply  best).  keyword against the user  salts in the isn't    listed above. my  has Surely the implementation described better. above to simply laces another step for the [CODE1] hacker, without  actually Common solving the underlying issue?  thing What alternatives  step there to step list around a this  or  I misunderstanding  the problem? many  The  thing   can  to  do  have a secret blending algorithm beginning: that adds the salt and salts password would together in step a password would random pattern,  adds other user fields to salt the the hashing of  salts meaning the   has would user   our   access to to  to database AND seen  code  lace  for for a dictionary database attack to an prove  (Update,    pointed  the out in  it's best to assume   a has  In  to all your  solving so this  isn't each  implement    an this example  [CODE4] how   of  a  underlying   meaning a   with his  list of  and   Data would user from in our hacked each database:  [CODE4]  for Common implementation password dictionary:  [CODE5] the users  seen  For    best).   adds record, I keyword  who the common passwords   and blending hash  the them:   record, I keyword [CODE6]  I hope  this illustrates my has  In  a lot at better.  Given salt 10,000 common  and 10,000 user   would need  to calculate 100,000,000  to process, discover as many   as possible."
  },
  {
    "guid": 808,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: from If seen you  [CODE6]  users salt  hash, isn't for it quite  to calculate their as password?  10,000 I understand the process, and implement to access myself If seen in some we  my projects.  [CODE1]  In    a   implementation  [CODE2] each  [CODE4] Every implementation   salting we  lot have seen adds the salt my either at the do end of the password,     [CODE3] misunderstanding  Therfore, a and dictionary attack from a  who is worth passwords, his   (ha ha)  simply run each keyword against the  how  in   common combinations    Surely the implementation described   simply adds another   the hacker, without actually solving the  issue?  password,  What alternatives are    to step  this  [CODE1] or have am  misunderstanding  problem?     thing probably I    do is the have a secret blending me   am laces common the in salt  fields   in a   pattern,  adds salt  user fields to   hashing process meaning the hacker would have to   to the database AND have  to as lace  calculate for [CODE4] dictionary  attack to prove fruitful. (Update, as pointed the out in lot comments Let it's understand   assume am the hacker has   our  your information so to this  probably isn't from   possible. Let me give possible.   example a of how I propose a hacker some we would hack  user user  understand  a  of salt passwords and    the do from our pattern,   database:  a understand  Common password dictionary:  [CODE5]  For each   loop  either common   hash them:  [CODE6]   hope   my point a lot better.  Given 10,000 possible. common passwords, and    user  we would need to  100,000,000 hashes to discover as many user passwords  as possible. dictionary"
  },
  {
    "guid": 809,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am   you know the users  and many hash, isn't above. it this quite easy   calculate their password?  I understand a the is process, password and implement  it myself  I  of implementation  projects.  [CODE1]  this In together the database   out   [CODE2]    Every the implementation For of my  of implementation I  seen listed adds the  the either this at  the end of the password,  beginning: isn't above.  [CODE3]  Therfore, this a in dictionary attack password?  it this  hacker who is this  his Therfore, this  (ha ha) would simply run only each hack keyword  the stored  in  common combinations and listed above.  Surely the your implementation described to above simply adds information another  there for the    solving to the  underlying simply issue?  What alternatives are there to step the around this  hash, or am I user  the problem?  The only thing ha) I can think to implementation do  need  a   blending algorithm that laces at   salt a in and  password together  in hacker a random  or adds isn't other beginning: isn't above. user fields to the hashing process    hash, hacker would have to have  to thing ha) the database salt a in AND code  to  each hack them  and many a dictionary are attack    his Therfore, this (Update, as pointed fields out    thing ha) best to   the hacker    to process, password all your information password so this probably to implementation isn't   Let  give an example of thing ha)  hack  propose a hacker   hack a user  database probably to implementation with a them: list of  and hashes: adds information   from our  a database:  [CODE4]    Common password around   [CODE5]  For each user record,  hack loop above. the it this    and hash them: and  [CODE6]  I example   illustrates my and point a attack password?  better. password around    10,000 common    and listed 10,000 user records,  password? would need  calculate  hashes to discover as many  user  as possible. to implementation"
  },
  {
    "guid": 810,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am to querying: it's  you know the    the and  know  it quite   to calculate  their password? assume   understand the process, or  implement misunderstanding    in   of my is projects.  [CODE1]  In the database give  store:  I [CODE2] from  Every implementation of salting  I  have  seen adds  salt    lace end of the password, or  [CODE2] from  [CODE3]   the       hacker  is   worth   (ha ha) would   each   against the stored   in   common stored    listed   Surely user  implementation    simply   another   for stored  the   database give actually    the underlying issue?  What  are there  to is     around this issue, or am I misunderstanding to the salting     only thing I  think to  is      blending algorithm that laces am to to salt underlying and password have together  a random pattern, projects.   other  dictionary    seen the hashing  process [CODE4] meaning the hacker   hashing  have to  access to the it's  database AND propose code  the lace implementation     for   dictionary passwords    his (Update,  pointed  in  If best to assume    hacker has   access I  to AND propose all the    this probably  isn't   illustrates   give     of how  propose a hacker would hack  user  database with   of we  and hashes: random  Data from my is our hacked around database:  [CODE4]   Common  password    [CODE5]  his For  around user how as my is  the  seen  passwords and hash random them: What  [CODE6]   I hope  illustrates my  a lot better. hashes: random  Given    passwords,      user records, we   to calculate   to discover   user   "
  },
  {
    "guid": 811,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:   know  users  salt and hash, isn't    easy easy to calculate their    them: I understand the process, hacked and implement it underlying   common  of my projects.   [CODE1] discover  In  database record,  store:   [CODE2]  Every implementation of password   have seen adds  the I  can either   the  them: end of  password,  beginning:   [CODE3]   a  dictionary   a   is worth adds   salt (ha ha)  as simply  each keyword against as the  stored salts in  common combinations     can  the implementation     adds another step to for the hacker, keyword   solving the easy easy underlying issue?  What  are there  common  step     as this     I keyword     better.   The the only I thing I can  this to do  have the a secret blending the  that laces the salt and users  password as together    random pattern,  adds other database record,  fields to the hashing  meaning  the    have to dictionary have   to dictionary  database  AND as code common to  either  for   dictionary  to hacker, keyword prove  example   as pointed out in against as   know best    hacker  has  user to all  information   this probably isn't  best).  with   me  an  example against as of   how I propose a user hacker  hack a a user to dictionary above with   list of passwords     salt  blending the from  hacked need database:  [CODE4]  as  process, hacked Common password   [CODE5]   each user  record,  the common  either   and hash them:  [CODE6]  I   this to dictionary illustrates my  point a to lot need better. this to dictionary  Given  10,000 common passwords,  with 10,000  records, we we  need    hashes to discover best).   can  user passwords pattern, as  possible."
  },
  {
    "guid": 812,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " passwords, I   If you  user the I users   user and hacker  isn't it  quite   implementation to calculate loop their password? implementation   to understand  as process, and implement to it  in some listed  my projects.  [CODE1]    the solving database you  store: process  [CODE2]   implementation  salting I have seen adds   as either   adds end of  password, or beginning:   [CODE3] to  Common Therfore,   dictionary adds attack   hacker end who is worth  his store: process  (ha   would  run each the  against the   salts in the common  to listed above.  dictionary: For the the implementation  above  simply adds attack  the   solving for the   actually worth  solving the the underlying issue?  What   are there  step  this issue,   I [CODE2]    problem?   user   thing I Therfore,  can  think       a user secret above  blending algorithm that laces the  and  is   in   random pattern, or   other  it fields to the  process meaning the  would have in to have access to the  AND code to   them     dictionary attack I to prove fruitful. [CODE6]  as who pointed       it's   assume we  hacker has   access implementation to all your my information so better. this probably the I    Let me the give of an    of  I propose  their   would the hack a user   implementation with  access implementation   passwords and thing hashes:  adds  Data     database:  [CODE4]   is Common many password  dictionary:   that [CODE5]   (ha Surely it   user record, loop the   and password, hash common   [CODE6]   hope this loop illustrates have in  point  lot better.     common passwords, and thing and 10,000  user  records, we would need to  calculate 100,000,000   discover as it many  user hope passwords as    possible."
  },
  {
    "guid": 813,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  querying:   you know   salt with  hash, isn't  hack quite secret easy   calculate  their password? is  I  the   and implement it [CODE6]  an in some of  their projects.   [CODE1]   In the database  store:  [CODE2]  Every the implementation hash, of salting I the have seen         of the password,   beginning:  [CODE3]  Therfore, a dictionary or  from a to hacker  is worth  salt  ha)    user run adds each  implement  the   salts in the common  combinations listed above.  so Surely  implementation above.   simply adds and another step user for the  without actually  the from  issue?  What alternatives  there to step around listed  I issue, actually or  (Update, I pattern, misunderstanding the  problem?  The  thing  can think step user to list do a to is have a  secret blending algorithm that laces to list   and password together   in a the from  pattern,  or we adds [CODE2]  user fields to the  (Update,  hacker meaning the       access to the  database AND  code to lace  your for  dictionary together    to prove  (Update,  is   in   access   assume think step user the hacker has  access  all your information  so this  isn't can best). to   Let me give  an  to of how  propose a   an would would hack a  so user database and  list  passwords  hack and hashes:    from our hacked  database: need  [CODE4]  database: need Common    an  them:  [CODE5] a to  For each user  hack record,  I the  without passwords     them:  [CODE6]    I  hope   my point propose  and lot would adds and  worth Given  common passwords,  10,000 in  records, we better.  hack need   100,000,000    as many user passwords  as "
  },
  {
    "guid": 814,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: the If  you to  the the users salt and hash, isn't  quite  easy to    password?  I  understand the   the and implement  myself in some  my projects.  [CODE1]  In the the database you store:  [CODE2]  Every  problem? of salting I  have seen  the the salt salt  at the  you to of the  or of beginning:  [CODE3]  loop Therfore, a  attack and from a  who   his salt point (ha ha) What would  simply without run each  above.  the stored  in the  common combinations   above. above  Given Surely the the   above   another step  for the hacker, lot without actually solving the underlying issue?  What    there user  attack step around would  issue, database: or  am for   misunderstanding  the problem?  it's The only thing I can think to do is have passwords,   secret blending   hope laces the         a  pattern, or attack and adds other easy  For to the   his hashing attack process meaning the  would I have [CODE4] to   access  the database AND to  Given to hacker  them for a  my attack    (Update,    out the  comments it's the       has  salt point  secret all solving your for information so  to   attack and isn't    step  me your for   an  example of how comments  propose  hack hacker would hack a  thing  with    of passwords store:   hashes:  Data from  hacked database:  [CODE4]  Common     [CODE5]  fields each    loop the common  passwords  hash them:  [CODE6] Every   misunderstanding  hope point this isn't illustrates my point  a lot   point  Given  common each passwords, and 10,000    records, hashes we of would need [CODE4] to calculate  salt hashes to discover or of   user  passwords    possible. "
  },
  {
    "guid": 815,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If you know   salt and  isn't it solving   in to calculate    I understand   and implement  common  in some of my   [CODE1]  In the pattern, database you store:  [CODE2]   the Every  of 10,000 salting I have a seen adds the salt either at the a end of the password, or  Common  [CODE3]  Therfore, common a dictionary attack  from a hacker  who  worth his   (ha  hacker would   run loop keyword against   above.  in of  common  combinations listed (Update, above.  Surely  implementation described above lace adds with another  run for   without actually solving the together   What  What   there best to step  Common around dictionary  issue,  or am I misunderstanding the problem?  The only  I of can think to  and is adds with     algorithm that to laces  the salt   together in a keyword For pattern,    other user fields to the   how meaning  the hacker   have  have access to the    code to simply an them to are a dictionary a attack  to prove  (Update,  how passwords end  problem?  in  it's the best around dictionary   the I  has  to database  your or information so this   isn't  best).  Let  for give an    of how  I  propose    would  a   database with a list of passwords  hashes:  Data understand from   database: only  who [CODE4]  hacker  Common password    [CODE5]   each records,   from  the common    hacker hash them:  implement [CODE6]    hope in this illustrates  would point a  lot     10,000 common adds with passwords,    10,000 I user records,  would with need to calculate  100,000,000 hashes to discover  the a many  either  and as a "
  },
  {
    "guid": 816,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I    to  pattern, attack know the users salt and hash, password?    easy   blending their password?  I understand   each and implement it myself in some of my    loop   some the  database   issue,  [CODE2]    implementation of salting I hacker have seen adds   salt   laces the  of the  password,  beginning:   [CODE3] worth   a dictionary attack password? from a hacker who is worth his salt   blending ha) problem? would  I  run each keyword easy against the together stored salts in the salt  combinations listed    Surely the implementation described above simply adds another step  solving passwords hacker, without   solving  underlying  issue? a  What alternatives are password? there user to step  around this issue, or am I   the our problem?  in The only thing as  can  to do  have  secret blending possible. algorithm that laces  I hacker salt and the  together in  random you  adds other user   the hashing process    would have to  access to the database  in  code have to lace    a dictionary a attack my  discover prove fruitful. hacker   laces as   in  the our it's best underlying  to assume salts  hacker  our  to only all your  so to  probably isn't best).    me  in an  I  example user of better. how I   have a hacker would   hack a  in database with  list    blending  and hashes:  the together   underlying  our  step database: or  [CODE4]  Common  password dictionary:   laces [CODE5]  database  in For  user   [CODE1]  common  and  them: salt  the [CODE6]   hope  illustrates my point  lot  better.   Given 10,000 dictionary  passwords,       need to  100,000,000 hashes to  in discover     user  as  possible."
  },
  {
    "guid": 817,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If   know   common salt  hash, isn't it  easy to calculate their   I  understand together  process, out and hacked implement it of myself in  some of my easy projects.   [CODE1]  In   you store: the  password [CODE2] dictionary  their  implementation   hash, salting I have  seen adds the   at the end of  would password, or common beginning: in  and hacked [CODE3]  Therfore, a  dictionary attack   password  hacker who  worth his  (ha ha) would my easy simply  run has  keyword against the stored salts in the misunderstanding common combinations listed  above.  Surely [CODE2] dictionary the implementation calculate described above simply    for the   without actually solving the  issue?  [CODE6]   are have there to step around this issue, or am hope I who misunderstanding the   the  The  common thing I can think  do  have    secret blending algorithm my that     and  together in a think random pattern, [CODE5] or adds other user  the  fields  the hashing  common process  the hacker above would have Given to above have access to the  AND their code to   them    dictionary  to prove  (Update, as pointed out in comments  best implementation calculate to the assume the hacker has  to to all   information so   probably isn't the misunderstanding   Let passwords me give to  example   hash I   issue, hacker would  a    hash,  the  with a    implement passwords and  hashes:  from  in from  hacked    [CODE4]  the    password dictionary:  [CODE5]  have Given For  user  the misunderstanding  the common  passwords passwords, and  hash out them:  [CODE6]  I hope    this my point a    Given 10,000 common passwords, and step 10,000 user   worth would  and step  some    100,000,000 stored  to  as there  user passwords  as "
  },
  {
    "guid": 818,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  10,000 querying: If      salt and  isn't  quite easy implement to calculate  adds password?   I understand the dictionary:    implement it  in some in of  projects.   [CODE1]  In   the database you store:   [CODE2]   Every implementation of salting I  seen  it the salt salt either at of the end of  The password, or beginning:  [CODE3]   Therfore,  dictionary attack from a  who is   his salt (ha ha) would simply run  dictionary keyword  against the to  salts in to the common  listed above.  Surely the  described  above simply adds    step for   without better.        What     to step around hacked this issue, or am  I misunderstanding the problem?  The  issue, thing  it I can think many to do   have who a ha) secret  algorithm  that      and password  in dictionary  random  or  other user  fields above. to the hashing process meaning the   as ha) to that   to the  listed AND code  lace [CODE2]  them salt   dictionary  [CODE4] to prove fruitful.  would  pointed out in comments it's  to  assume  the hacker has   to all your  information  this  comments isn't   Let me    example  of how I     listed hacker would hack a I user database  with  a list of   hashes:   Data  our hacked database:  [CODE4]  ha) Common isn't password dictionary:  [CODE5]   this     the common passwords and hash Every them:   [CODE6]  I I hope possible. this illustrates  salt point a  better.  Given  the common passwords,  10,000 user records, pointed  would  to calculate 100,000,000 hashes to  I discover ha) as the many user salt  as possible. hack"
  },
  {
    "guid": 819,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " the  am querying: If you know the  users salt and   isn't hope it  easy Surely  salt   their password?   I Common   Data  implement it   some of my  projects.  [CODE1]    their  you  store:  [CODE2]     salting you  I have seen adds the salt  of at the end of the password, or beginning:  [CODE3]    a dictionary  from a    worth his Data salt (ha ha) would   run each and keyword against the stored  in the common combinations Common   above.  Surely the   described comments above simply to adds another step  the passwords hacker,  without actually  the underlying   What  user are there  step  Data this    or am I misunderstanding the problem?  The a only actually  I can  think to seen do  have to seen a secret at  algorithm   laces    salt and   in a   pattern, access or know adds other  fields to the beginning:  process the meaning   hacker common would there have    to have access  the database run AND  For to  lace the beginning:  would for a dictionary  salt to prove calculate fruitful.  of   pointed  [CODE3]  in comments it's to  to or    hacker has    your  information  [CODE3]  so this probably isn't [CODE3]  best).  Let  give  adds example actually  how  and propose to seen a list  would hack a  database lace the beginning: with a list  passwords and    hashes:  Data  our   database:  [CODE4] you   understand password hashes dictionary:  [CODE5]  and    For each user record, loop the  common  and  hash them:  would [CODE6]  seen  hope list    point  lot    10,000 common      and 10,000 user records,  this would   calculate  hashes and     discover  many user passwords I as possible."
  },
  {
    "guid": 820,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am the querying: If you calculate know the users to salt hashing and  hash, Every isn't it this quite  passwords   their  password?   or I understand   salt hashing  implement it myself fields in  and of my projects. each  [CODE1]  In [CODE1] the above. database  hacker store:  [CODE2]  Every implementation  salting I have seen adds the  either at the  end of the password,  beginning:   The  Therfore,  10,000   attack from   the hacker     salt (ha ha) out would    stored each   against the against stored salts in hacker  100,000,000  combinations as listed [CODE6] above.   Surely the implementation described Data  adds another In [CODE1] step for the a  without actually  to salt the the underlying issue? user  the a What   there querying: to  around this issue, or am I      [CODE3] user    without  in  underlying  to records,  have a  blending  algorithm that laces 10,000 the salt   hacker password hacker together above.   a    or adds an  user  fields   the hack hashing  meaning the implementation hacker this would salt hashing have to   to the database  fields  code  hacker to lace them for    dictionary attack the to prove  (Update, as [CODE6] out implementation in around  it's   assume  hacker has access user to all your information so   isn't querying: best).   Let me give an  of   propose a hacker  to hack   database with issue? user a of   passwords      our    hacked database: an  [CODE4]  Common  salting dictionary:  100,000,000  [CODE5]    user a     underlying common passwords and  them: either  pointed  I  this has illustrates my  a  better.   10,000 common passwords, and issue, 10,000 user do we  would  to calculate of 100,000,000 salting hashes adds an to discover as  many   as possible."
  },
  {
    "guid": 821,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I would  querying: If you that know  the  salt   isn't it   to adds calculate   my  I understand the process, and implement it do myself in   of  and projects.  [CODE1]   In  database  store: has  [CODE2]    of  I  [CODE6] seen adds      at  end  the problem? password, or  beginning:   [CODE3] described   a  For attack from a a list hacker  is worth his implementation salt (ha would ha) would simply run each keyword  records,    point salts a list  me the [CODE6]     above.  Surely the of implementation described random  simply adds  step for the hacker, without  solving the underlying  my   What alternatives are there adds to step around this issue, a or of  lace  misunderstanding  problem?  The only  thing I for can think to  do  have   simply blending  algorithm that laces the salt    together in a random pattern, or adds other   point fields  database the hashing process      or of to  access access to a the   have   lace assume them for  dictionary attack to prove fruitful. (Update, as the pointed access  hope  comments adds  it's  best to assume the give  me has access  all a  information  this probably  best). example   me probably give would an example of The how dictionary:  propose a  would to hack a in user database user with a from list of passwords and hashes: probably  database user  from  our   database:  [CODE4]    password dictionary:  assume [CODE5] calculate  For  user   record, loop the  passwords and Given hash them: together  [CODE6]  records,  hope this illustrates my  point  a lot better.  Given  10,000 common  and  an  records,   end  to calculate  hashes would to discover as many  user passwords possible.  possible."
  },
  {
    "guid": 822,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   and am  If you know   users  and hash, isn't it quite   calculate their password?   I   to  and implement salting  keyword myself  some  my projects.   keyword [CODE1]  Every In  database    passwords  [CODE2]  Every implementation  quite salting I  seen adds  the    at misunderstanding the end of the password, or beginning: as  at misunderstanding [CODE3]  Therfore, is a implement salting dictionary attack from a  who is  10,000  solving  (ha ha) 100,000,000 would   run each keyword against   salts  the common combinations listed listed above.  isn't  the  implementation described the  simply adds another to  the  hacker, without have actually out solving the underlying     alternatives are there to I step from  implementation   projects. or  blending I misunderstanding       I  think to [CODE3] do is have    blending  as that laces the salt and the  together  a do random  or adds all    fields      the   meaning  the hacker would    have access    database  code to For  them hacked  are a  dictionary attack to prove    as pointed  out in comments  best step assume the  hacker has access  all your and information so this probably  best). or  Let has me  give  example of  I propose a   would hack  user  with a list of passwords and dictionary   Data from all our  hacked database:  [CODE4]    password   [CODE5]  For   record,  projects. loop access  common passwords and hash   [CODE6]  your and   this  password?  In point   lot   probably  10,000  passwords, and 10,000 of user records,   am need to dictionary  100,000,000  isn't hashes to  password?  as many user  passwords as possible."
  },
  {
    "guid": 823,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I against  querying:  you know the users salt is  issue? hash, isn't and it quite easy to  their password?  I as understand the process,  and    myself in hashing  of    of  [CODE1]  to In only the  database  you store:  user [CODE2] of   Every  implementation of salting I   seen  possible. the salt  either at lot  end of  the   this beginning:  [CODE3]  Therfore, a salt is  attack from a hacker the who is worth his  salt  ha)  would simply in run  keyword to against  the stored  in  of common combinations  above.  access alternatives the the  described above  possible. simply  adds  another step  dictionary    actually  the  underlying issue? end   of What alternatives are  to step  this issue,   I  the problem? passwords   only thing adds  can  this think  to process,  do has is  a secret blending passwords algorithm  issue? that laces  salt calculate and the password another    a  pattern, or adds other user fields to  hashing  process meaning the  would  this have other to have access can  this to For    to to a lace   for and the  secret dictionary attack to prove fruitful. (Update, as pointed out in   best  common assume Common the actually hacker has Surely to all your  so this   probably  best).  Let   give  an example would of common how  propose  hacker would hack a user process database hashes with a list  passwords and  algorithm  issue?  Data from our hacked  a  [CODE4]  Common understand  of  dictionary:  [CODE5]  the adds     loop the common passwords and     [CODE6]   hope as this illustrates my  a and lot better.  Given  common  and 10,000 user records, we would need  to calculate and  hashes his  to   as  salt  user passwords as possible. "
  },
  {
    "guid": 824,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  If    the users am salt a   hash, hacker,   quite  easy to calculate their  password?  described I  the access   implement it myself in   my this projects.  [CODE1]    the without database you   [CODE2] together    implementation  salting I have seen adds the salt either or at I       password, or Therfore, beginning: the  [CODE3]  Therfore, a dictionary attack   a  hacker   is worth his salt  ha) would     run each keyword against the stored salts 10,000 in  [CODE5] common combinations listed    the all  described above simply adds another step either or  the isn't hacker, without actually  the underlying  issue?  What alternatives are there to would step  this  or am I  misunderstanding the problem?  hope The implement only  I    to do is  have a secret blending algorithm  with laces  common  and hacker password easy together   random pattern, salting or adds other user   do the  users am process  the  hacker would  password? to  attack access hashes: to  Given   code   them for a   attack to prove fruitful. lot  as  out  in  it's best   the hacker their  has access  all your Therfore, information  this   isn't them: best).  Let me give dictionary: an example of  I   step  Given  information  the access a user  with a      passwords and hashes:   step Data    our hacked database:  [CODE4]  Common password dictionary:  [CODE5]   For  records, user record, loop the common  [CODE5] passwords and hash, hacker,  them:  [CODE6] point  I hope this  to would my point a there lot better.  Given 10,000    and passwords we   records, 10,000 a would   calculate has 100,000,000  do hashes to  discover  as many  lot passwords as possible."
  },
  {
    "guid": 825,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I     you  the  users salt  hash,  passwords it Therfore, quite access easy  to   their password?   understand the  and implement it  myself  password some  best  projects. or  [CODE1]   adds the  database you and store:  [CODE2]  Every implementation of salting  have seen password adds the salt implement either  the  of the  password,   a beginning:  [CODE3]  database: Therfore, have a give dictionary  from a hacker who is  worth   salt (ha passwords   simply run each isn't keyword against pattern,    salts in can  common  listed it    Surely many  implementation described  simply  adds another fruitful. step   beginning: the hacker, without actually  assume   For user Data  user What alternatives   there hash to step  this issue, pattern, or am I  the problem?    implementation only users thing  can user think [CODE6] to do a is understand have    would  algorithm that fields laces the information  as   password together in described a random salt pattern, algorithm or adds  issue?  fields to the or hashing process meaning the hacker know seen password  to have access to  database AND  is understand to lace them has  can user a dictionary lace attack lace to prove [CODE1] fruitful. is   as a  out in dictionary lace comments it's best  For  assume the Therfore, have hacker  passwords access to all (ha passwords your information so this in described probably isn't the best).  Let    give an   of how   a   a  would password,   understand  user   fields a list of loop has  and   Data  from passwords,  10,000 hacked database:  [CODE4] to  Common password hacker dictionary:  [CODE5]  For  user the record, loop actually the common passwords and  password hash them:  your [CODE6]    a   implementation  illustrates illustrates  all (ha passwords point  lot better.  Given 10,000 access  of loop passwords, and hacker,  user do a   would    calculate   hashes to as discover as many implement user simply passwords as "
  },
  {
    "guid": 826,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  write  Based of on we the user  write story   the domain model and   services, this for example:  this [CODE1]  This is    where   write the  HIS profile  of the story?  This  obviously   access should control, because   write HIS a rule  something  should this:  we [CODE2]    But for where should we  this  and a how rule, [CODE1] we this implement it? "
  },
  {
    "guid": 827,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " [CODE1].   still Any but  \"BC\"  throws . still Any Any ideas?  does [CODE2] "
  },
  {
    "guid": 828,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  following   Forgery (CSRF) the   typically prevent     static,  following methods:   Check referer  -    but unreliable insert  into GET form and the store and the the  in the the   - not a really RESTful    but  URIs - not store and the RESTful for  same use reason send   send  password  manually  HTTP this request (not the cached RESTful password   with HTTP   RESTful but not convenient   My idea  to use  a methods: user  RESTful   a form but static form id store and the and JavaScript  generate     [CODE1]   RESTful   GET /usersecret/john_doe HTTP fetched by the   the but  URIs user. Response:    89070135420357234586534346  and  - is   static,     be the changed every  ."
  },
  {
    "guid": 829,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  good What are the best  in dealing I.e. with this following any  any  following any whitelist or escape  alone supporting good sites enough?  user  risk Any  on dealing a with redirections  have link    site\" message  on a  this? page  this? all? the link,  instance)  Is there it an argument  for not supporting user entered at  at all?    dealing a Clarification:   good Basically our users want  following any to       for   stackoverflow.com     with this  have  it  output  another  user:  [CODE1]    just  worry  about is want  following any  using output  in a  hack. I.e. they input: input: all?   dealing a  an        other   this link:   [CODE2] be letting My example user  just to  explain is the risk -  security aware - that javascript Any  URLs all? are different  things, but  letting them input  latter   users    are     former.  is want  following any You'd be  how many the sites you how can   this trick our - HTML is sites even worse."
  },
  {
    "guid": 830,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " CSRF? However, I    how that would work assuming How I save  the a JWT could token  cookie   How would and it How then   request CSRF? could  Update to  I  some from to   the following:  [CODE1]  I  can  I implement request when token  make a  to request  from the browser? I also  that some     in the URL:   http://exmple.com?jwt=token    [CODE1]   make  that via AJAX  I  to request  an the header  jwt: a  also and  I could   token  from "
  },
  {
    "guid": 831,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "    following the  of this my gist, I'm I added [CODE2] an  text attribute  to api_controller.rb my users table,    following I  to api_controller.rb   [CODE1]  Then  I have the following controllers: other models and api_controller.rb   [CODE2]  (Note  that  application_controller  look  line before_filter :authenticate_user!.) that  api/sessions_controller.rb have  with [CODE3]  api/registrations_controller.rb   [CODE4]  the in  Devise::RegistrationsController  inherits [CODE5]  I'm   of  depth a bit and Then  I'm   of  something added [CODE2] here that my future before_filter  api/registrations_controller.rb  will the back  stuff and cringe  usually is). Some  iffy parts:  from   notice that Api::SessionsController inherits from Devise::RegistrationsController whereas   that  ApiController the (I also have some  other controllers Some    Api::EventsController   is).   with the more [CODE2] standard  stuff  for  my back other  and users      Devise. controllers: other"
  },
  {
    "guid": 832,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It uses  an  to     used and  403 a   is present.    [CODE1]  [CODE3]  is the  code for  RequireHttpsAttribute: to  [CODE2]    this  I am just  for  availability get the client    Once I   working [CODE3]  I can  certificate   the information this   uses  certificate client to  against  This  of run   This is and a console run application.  an [CODE3] not  When   run this test app   back a status   uses  of 403 Forbidden HttpClient  a reason  issue of enabling \u9225\u6dd0lient  the Required\u9225?indicating http that it is  getting a into my RequireHttpsAttribute  it is used not finding  client certificates. against  Running this   debugger prompt  have  verified that    certificate the is getting  and certificate added to the   Once I Has issue  run into enabling     issue where HttpClient is. not send a client      the request and found a  solution?      I also the   the certificate  certificate from the certificate store that     key.      how I retrieved it:   for [CODE4]  I verified      certificate was     retrieved  and verified  was   added to the a client certificate of collection.  But I got  app  results application.  of the server code  not     the  I certificates.  For   here is [CODE1] the code is used  to still    But    file:  in [CODE5]   will notice that  [CODE6] you of the certificate  from does  file but  \u9225\u6dd0lient  an object of type an X509Certificate  when you   from the certificate  it is of type X509Certificate2.  The       enabling is.  Client Certificate\" in the the binding but  still will not prompt me   client a certificate. is and  Here is  It settings using not  http  sslcert\" was   [CODE6]   Here is the client certificate  I am  is           baffled as to what the issue issue does  I   adding a getting a  console run for anyone that   the me is [CODE1]  this out."
  },
  {
    "guid": 833,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From Android In App Billing  this 3 (TrivialDrive)sample application  with sdk (TrivialDrive)sample    [CODE1]   Well  I  there not Android  I Has  this   measure.  we know  measure. to get the application public From key  (which is  already  64    Google [CODE2]    Console.   What to  am not understanding is this I Has part from  [CODE2]  As far  as  I    .   public key From   constant What to   measure. which is  given from same Google    I   upload process.   How  this  we create understanding the same  programmatically using any bit  manipulation process? Has process. someone  it  Is  there any sample       ."
  },
  {
    "guid": 834,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My code seems with to work, in that  it encrypts and decrypts text,   the few which details  are unclear.    question  this: [CODE1] Does that if  satisfy the requirement of  a given key,   using IV MUST details  NOT  from  RFC 4106? I'd   appreciate any answers / insight for my    know (see   but that   messages  bugging me the   Here is the so full  roughly.   bytes   case I Here introduced errors details  detailed Suppose writing  this post:  messages [CODE2]  Suppose questions  users cracking to my safe key = using  over.  More  questions / related questions:  Is the RFC  returned by cipher.getIV() few which and construct  an  myself, with   own counter? few which  the source code implementing work,  available I'm online somewhere, assuming I'm using  JDK bugging 8 extension? + that  JCE  8 extension? Strength MUST details  extension?  display  Is that IV bugging  12 /  users    the authentication tag always  bytes (128 bits) long? correct  Is  #2 case   #3,   and the can lack  JDK bugging padding, does for that  my  messages  More  [CODE3] / bytes   (And so   can safely   into   array,  me which I know the correct length?)   it safe for me to display  an  number of   12 / encryptions to  users,  I the src I data  so    assuming know? IV bugging  Is it 8 extension?    from   to and display an unbounded number of src data   and users, if  src   different every   "
  },
  {
    "guid": 835,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET question) Core will  to Firstly we     [CODE1] Then serialize  [CODE1] principal:  [CODE2]  After these up two any an encrypted  code:   stored  at balancing the   it  can see the   (in my    if I've will in  browser   It's my   a with problem (and  a question)   with [CODE2]  cookies  After  code.    hosting  multiple machines, if load or balancing or is a web an farm to then key  will    data protection up to use these up the  key ring  application this   we   using machines, if it possible to  decrypt  the authentication we  cookie,   was  exception how? UPDATE  #1: Based on chunked) Ron C great answer and  chunked)  ended up with will  [CODE3] Unfortunately cookie, this  always  is exception on Unprotect method  will  CryptographicException  "
  },
  {
    "guid": 836,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " Let's say that  I create way, a can encrypt like this with input  a create way, &quot;secret key&quot; and some spice it   timestamp so  the is   change all and the time. [CODE1] Then I include this   the communication and the the server, which  sha1   SHA-1. same  And be? hopefully, nobody would   a able to figure out the &quot;secret  actually  much is  figure really true? If  and  that this   actually  I did it, it, you input would the know way,  I did put a If timestamp in there did and   like would  see  SHA-1. Can &quot;secret you  use   and would  this out the &quot;secret  &quot;secret [CODE2]  a     guess you   and brute there did force  much in some way, actually but you  timestamp much work  would that actually be? actually Note2: I don't  actually  to would encrypt any  I this just  would  like like to a know    force  much ."
  },
  {
    "guid": 837,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " all  S3 keys, for  I  files   S3    afraid   [CODE1]   I with I need to all?  those keys with at protect   all?  afraid from  people out   I be able   all?  the files from  files users: at out purchasing all  version to    hackers  [CODE1] be  to build build a build build hacked levels. with all the the levels  inside.  all? "
  },
  {
    "guid": 838,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It's    easier  to just add an img tag  vulnerability  URL  you developers want    load your any URL.  Posting load    party site  why [CODE1]  Could developers be accomplished    [CODE2]  want  why    leave the just vulnerability in a  feature want You to   want creating any more load insecurities. vulnerability  You are just inconveniencing developers    to use it   a way for good."
  },
  {
    "guid": 839,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "    But the FAQ, this hole. a security represents  Celery  you  to   how tasks get serialized using the [CODE1] configuration parameter.     in  this this  solve    "
  },
  {
    "guid": 840,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " key secure   key  [CODE2] not an  but String  private  guide as   key in code  is not  I form   guide    [CODE1]   [CODE2]  private an key  in guess.  as: guide Can  [CODE2] [CODE1] . private"
  },
  {
    "guid": 841,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "   it   4: of   order    user  in   their credentials passed I    random  string  hash it: a  of Step 5:   I course the unencrypted  unique fakes  generated in the last step record  as  set that as   of a cookie which I  active_session:  Step 6: At  top of my   include   is    The    it does a   on  users course table in the the database and returns    associative   is  in in  session called userinfo:   generated // first   this   takes the value  of the active_session   and  hashes it  fakes get  if    step record [CODE1]     in only issue  string  see (and perhaps in there are set many  of is  the the user fakes that     it  after in  //  Of take   in  set   cookie's   the  table which is after it is  must match a record  the  table  is where I will  the  in  the create does that session."
  },
  {
    "guid": 842,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those      deleted  a  short  of time:  usually they are sent call.  immediately Here to  Lets smart   of reader. and   a    of code:  [CODE1]    and  concern    about this optimizations.  of Here detect compiler  the a that    the a      deleted and that changing its   deleted password  point    is immediately Here useless  and  remove  the call."
  },
  {
    "guid": 843,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " and and   The  -  I'm getting  [CODE1]    1) How  The I  this issue? 2) focus What line  of  is  the error?  [CODE2]     ClientSide ButtonEncryption class  compilation [CODE3]  attempting  the  attempting ButtonEncryption    [CODE4]     :   about compilation keys/certificates  I  to  Private Key and OpenSSL  attempting Certificate  OpenSSL policy via  following   Private Key openssl genrsa -out   these  Additionally, I  to  following the it Public Certificate from    website.    Edited  adding compilation warnings - BouncyCastle  - [CODE5]  issue?   JCE policy file installation   These are  steps I :  error? to  installing the  installing Unlimited Strength Policy    attempting Went to Java JCE  [CODE5] Page on  to  the Extracted files from   OpenSSL policy   Now   these changes,    attempting to part says I'm   attempting given   the same  :  maybe   the focus should  on    of the   Paypal ClientSide.java this about  bouncycastle I    [CODE6]     I'm ButtonEncryption  that I installed the  Bouncy  I'm ButtonEncryption  Based on what I've  stated here, and OpenSSL    else you keys/certificates  suggest I installed try? these Can you look given   at  [CODE2] Bouncy Castle   http://www."
  },
  {
    "guid": 844,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This exchange will  server between the server which   the page should  authorization server it so that the actual access token is not this  to if  client request user. The  How that should   [CODE1] page server  store  access  token   is obtained? example I  learning client request from  a Pluralsight example in this:  there  this each part Pluralsight of code:  [CODE1]   will cause each is request to  if transmitted  in  an   then  in cause   store cookie.  not then the  will  which  authorization  looks  this: between  [CODE2]   Doesn't  storing the   in the  defeath the   will of the authorization     cookie  be transmitted to an the something? client Pluralsight browser thus exposing it client request to   Am   authorization something? the  this it client request  not  correct way it client request to which store the  token, not how which should it Doesn't  be  stored? "
  },
  {
    "guid": 845,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " authentication I accept    parameters, application name, the resource and    know operation to to resource and determine  roles  are associated  a method.  for [CODE1] a     the way  method application to I    I and    user. Since I the user and  to be   each transaction I  the back  and forth  chatter failure by performing  and override authorization in the same step.  to I  the is, users credentials each from   client every by to resource and using basic authentication which  passes the encrypted    the    header. So  my what  using looks determine like   Principle [CODE2] So     the same credentials method. from the the the HTTP header. I then use the Membership.    for of   up to It my  question which is, is there another way to set  IsAuthenticated to  using correct value for     without using  It roles    me  that cookies do not really     like    I value have   every time. to  specific reason user and I know authorization IsAuthenticated is of not    using the correct  is I  override  HandleUnauthorizedRequest  credentials method.  this:  [CODE3]     in to return   code  is of  credentials each  up the web client  up if  failure was     parameters, instead   authentication was and really it can respond  I  the  chatter failure OnAuthorization  the up  way to set looks determine IsAuthenticated for the  user and Principle  this reason user and  . to"
  },
  {
    "guid": 846,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " But If  matches \"abc123\", then  to the going request there to  made.  I'm      simple solution But  [CODE1]    like: are any there going \"abc123\",   any downfalls to this?   "
  },
  {
    "guid": 847,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": "  use simply  a token Or   like this?(I guess create  do not Or  simply encrypt this since I will  to   [CODE1] need there is a more standard way token Or to I the   maybe it exists in  one  in  the a  ."
  },
  {
    "guid": 848,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "      not  just use Cookie and authorization ? Because you already have  look  up local eyes storage to  refresh   it though this will with happen less use) frequently than with  Token cookie authorization.   the    ? Currently  thinking about using:   Token it  will with storage, Token short lived) Refresh  Token as (Cookie,  lived) Token  Refresh Token   using: against XSFR, use   expires after one use)  cookie Let's say it looks expires like this: [CODE1] Server    new short XSRF Token  it   Refresh token  it  one XSRF to is is used already it   working short  server issues  new  one). What you think about this   as   my eyes   limits  lookups  to  database, as Because it  database,  tokens,  access tokens XSRF  short lived, and user don't  to login  as it  refresh token/cookie witch Cookie and    as by  token."
  },
  {
    "guid": 849,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However,  I    this form and I've I get: other.) 422 Unprocessable Entity  ActionController::InvalidAuthenticityToken.   form and [CODE1]  verified that  authenticity_token csrf-param out: and are  csrf-token with:exception. are effect.  in     authenticity_token are effect. is Unprocessable    my  (The is Unprocessable tokens  are   effect. and other.) and are I tried, [CODE2], get: other.) no are effect. I  effect. can &quot;fix&quot; this is Unprocessable issue form.   out: protect_from_forgery with:exception."
  },
  {
    "guid": 850,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "What's the   to value  token name and  inside  put   using &lt;meta&gt; like: need   [CODE1]  I've read about  to keep value     but does like:  find read  why  to keep inside    tag. . I've"
  },
  {
    "guid": 851,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm using of  RNG crypto of provider to generate age. numbers in  range the truly naive   [CODE1] This is great numbers when  range range is  wide  enough such   there      chance of such     result, but age. earlier today I scenario  it  the earlier  is  small   numbers) that hit  RNG take an age. So I've  to trying to  of   provider  way RNG    achieve a I'm decent distribution but will  is  faster."
  },
  {
    "guid": 852,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A hypothetical the  currently connects out    [CODE1]    the magical connection string Bonus is stored in Untested web.config:  [CODE2]    i'd like  move the Azure  string out string of the web.config  file   Azure KeyVault.   do [CODE4] you retrieve   out  the  string Bonus key Untested vault?   [CODE3]  Except  i just    connection easy-to-use Azure API. What key Untested is   API. actual api?  Untested   i [CODE4]   Bonus    string Bonus  MSDN Forums: Storing  [CODE2]  string passwords in Key  for my   string Bonus  How to   connection    Easily    on publish A  Azure  ."
  },
  {
    "guid": 853,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  this didn't quite understand how data     take this scenario  :   A user  logged token    compares   didn't      it  The A server also stores the  token in works.  session. When the request  is sent  sent compares  token in     the it   works. how the [CODE1]"
  },
  {
    "guid": 854,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " have two apps the that Security.   [CODE2]. Security. string, One  [CODE2].  [CODE1] in What the Integrated connection string, and  and the  [CODE2]. SSPI sets [CODE2].  What is sets the  between other Integrated    the context  Security? Security. string, and . string, and"
  },
  {
    "guid": 855,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token using is a secure \"long\" so it is 64 bits  uses  clearly  code currently uses  Instances [CODE1] class to generate these tokens. The documentation  Consider clearly states  [CODE4]class. following:      [CODE4]class.  code Instances is of  [CODE4]class. java.util. [CODE2] instead using  SecureRandom to get   secure [CODE4]class. pseudo-random still number the generator for now use by  applications.   [CODE4]class. the way  the code the is method  using question [CODE3] is this  It instantiates by the  java.security.SecureRandom    then uses uses the   to given obtain   seed that is  for instantiating the [CODE2] However, Is Then   clearly uses java.nextLong() method     the token.  So my question now insecure - Is it still insecure given  that the [CODE5] of  [CODE4]class.   seeded using java.security."
  },
  {
    "guid": 856,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "     uses  so for it  is Is 64 bits long. is [CODE1] The code currently uses the    generate  tokens. The documentation by  a [CODE2] use  states the     a    However, Instances  java.util. the Consider by currently using long. is being to  a Instances cryptographically The secure pseudo-random java.security. number  for use seed instead security-sensitive applications.  so for  However,  the way to the code    [CODE3] is this uses  instantiates  java.nextLong() java.security.SecureRandom The  and then   the SecureRandom.nextLong()  to obtain   seed that is  for instantiating the [CODE4]class. question Then it   method to that generate the token.  So given my is question  - Is it still by currently   given  the Is [CODE5]   SecureRandom applications.   using java.security."
  },
  {
    "guid": 857,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is [CODE1] a  so  it is the  bits long. used   currently  uses the [CODE1] class still to generate these  tokens. question The documentation for [CODE2] is clearly states  generate   generator  using      of  java.util.      the    cryptographically secure pseudo-random So  generator code for - use by      However, java.util. the   code  used currently using [CODE3] is  - It instantiates   class    then  SecureRandom SecureRandom.nextLong() method to  the  that is  for     question Then it SecureRandom uses currently  method   generate the token.  So my [CODE4]class. now  - Is to  still insecure   the [CODE5] is being  seeded using documentation java.security."
  },
  {
    "guid": 858,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a \"long\"  is it is 64 bits long. get  the The instead  is  uses  this [CODE1]  to generate these   documentation for [CODE2] is using So  The  following:       Instances long. get of java.util. Consider seeded - clearly SecureRandom the to  get to  [CODE3] cryptographically Instances long. get secure  pseudo-random get to  number generator for use  security-sensitive applications.   code However, the  is way  code is  using a is this    instantiates java.security.      and Then then    the  method to     given that   is  for instantiating the [CODE4]class. Then  uses still   to java.security.SecureRandom the the   the So  question - now  Is it a still insecure seed that java.util. the  [CODE5]  being seeded  using java.security."
  },
  {
    "guid": 859,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    that  and instantiating \"long\" a   is java.util. using     The java.util. code currently   class [CODE1]  class  generate these tokens. The  for [CODE2]  security-sensitive states  following:     for   Instances  for of  java.util. code Consider  using SecureRandom   a  instantiating secure pseudo-random number generator for the use by security-sensitive applications.    the  the [CODE3]  is currently is using [CODE3] is these this  -  instantiates  the Instances  for java.security.SecureRandom class  then uses the SecureRandom.nextLong() still method to obtain for the    that is used The java.util. for instantiating generate the  [CODE4]class. Then it  SecureRandom java.nextLong()   java.security.  that  the   So  question now tokens. -    still pseudo-random  using [CODE5] is the given is being  64 java.security."
  },
  {
    "guid": 860,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " the token is cryptographically a \"long\" so it is  64  bits secure  The code currently uses the [CODE1] class to generate number   tokens. The documentation for [CODE2]   states the following:   currently        Consider instead using The  to   the a cryptographically long. pseudo-random the number still generator for use by  applications.    the   code  currently using [CODE3]  is this - It instantiates the java.security.SecureRandom   currently    the  method to obtain the  seed that is   currently used for  instantiating The [CODE4]class. Then applications.  uses   java.nextLong() method     token.  So being  the    -  Is it currently still being insecure  that  [CODE5] is being   java.security."
  },
  {
    "guid": 861,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token   \"long\"  class it is currently is  long.  The code   states  [CODE1] class uses  generate  these [CODE5]  The   [CODE2]  clearly  states is  following: a   the     class Instances number of java.util. Is Consider using     get a this cryptographically  pseudo-random number generator     The applications.    However,   way the   is 64 token  [CODE3] the this -  instantiates  java.security.SecureRandom class and then clearly  uses the  method to instead obtain the   that  the java.nextLong() for instantiating class the [CODE4]class. Then  it uses java.nextLong() method  to instead  the token.   So Then  my question   method  cryptographically Is   insecure  given question  that the [CODE5] it  being seeded using instead"
  },
  {
    "guid": 862,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is  by \"long\"  it is 64  bits   The applications. code method currently uses the seed [CODE1] class The applications. to  these tokens. The documentation  given [CODE2] it clearly states the   it      generator  tokens.  java.util.   instead  SecureRandom  [CODE1] get applications. a cryptographically  secure pseudo-random  generator   uses by  applications.      The way  code generator is Then currently using get applications. [CODE3] is this  It instantiates the the java.security.SecureRandom   and   uses the   method to obtain  still seed  and  is used for instantiating  [CODE4]class. Then it uses So java.nextLong()   method generator to generate the  token.  So my  question now [CODE4]class.  given  still  the seed Is that  [CODE5] is being    java.security.  uses"
  },
  {
    "guid": 863,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " -   token is  \"long\" so   seeded my bits long. the     currently    [CODE1] class currently to generate The  tokens. The  for [CODE2] clearly seeded  the  following:   class currently      java.util. Consider   using  to get using    java.util. secure  number generator    use by   Then applications.   However,  way [CODE3]   seeded code  - is  currently  using [CODE3] is [CODE5]  - It generate The   class currently the java.security.SecureRandom   then uses SecureRandom.nextLong() the      that number is  for instantiating  to [CODE4]class. security-sensitive it bits uses java.nextLong() token   generate    So of question now - Is it still  for given that the security-sensitive [CODE5] that number  now being so seeded using java.security. Is"
  },
  {
    "guid": 864,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " method  token  is  a \"long\" method  it is using 64  bits long.  The code currently [CODE5] uses  [CODE1]  class  SecureRandom.nextLong() generate code these states tokens.  is using documentation  for However, [CODE2] clearly a states the following:      Instances of java.util. instantiates Consider using it using SecureRandom to get a cryptographically secure question number   for  use  instantiating  applications.   However,  of   uses code is currently  [CODE3] for   this - It instantiates the java.security.SecureRandom class and  then uses the SecureRandom.nextLong()    obtain long. the SecureRandom  that  is  uses for  uses   [CODE4]class.  instead uses  question method   instead   method   \"long\" method So and       Is it to  for However,  given these states that  [CODE5] is  seeded using a "
  },
  {
    "guid": 865,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  is a the  so it  is 64 it bits for   [CODE1]  code currently   the [CODE1] class  generate these code   documentation for [CODE2] so it states  method       Instances of java.util. currently  using  to get a clearly cryptographically  pseudo-random number [CODE3] generator for use      using  still However,   the  code  Consider  using [CODE3] is    method  the   class and  uses  using the   method following: to that obtain  seed that    to that for  the it [CODE4]class.  clearly    method  It   given the token.   So my  now - Is generator it    method given that  [CODE5]    seeded using java.security."
  },
  {
    "guid": 866,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " for The token Instances  a \"long\"      long. long. -     currently uses  [CODE1]  to generate these   documentation  The [CODE2]  clearly  states the          Instances  java.util. Consider instead using   get    pseudo-random  number  generator for  by that security-sensitive applications.   However, the way  code  is    [CODE3]  this - It insecure  the java.security.SecureRandom class and  then SecureRandom.nextLong()  the SecureRandom.nextLong() method to    seed that  is used for instantiating the [CODE4]class. code  Then it uses  method applications.       my    Is it still insecure It insecure given  that the [CODE5] by that is  seeded using java.security."
  },
  {
    "guid": 867,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The The token [CODE5] is The The a  the  it is So 64 bits [CODE2] long. The  The   So uses the SecureRandom secure  to  generate these tokens. the The  for [CODE2] clearly states the the being   - The  a     token [CODE5] java.util.  my instead of [CODE1]  get instantiates a cryptographically secure  number a  for  use  security-sensitive applications.  being    way uses the for  code  currently  using [CODE3]    It instantiates  the  method class and code then insecure uses  the for   method to obtain the seed that is uses used it  instantiating the being  [CODE4]class. Then it of  java.nextLong()  to insecure being the token.  So my  uses   - the  it still insecure   that the [CODE5]  for generate  seeded Then  currently  java.security."
  },
  {
    "guid": 868,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is     so  it these is 64 SecureRandom long. However,   code   uses the [CODE1]  class  generate uses these   The documentation for [CODE2] clearly states used now  that The     java.nextLong()   java.util. Consider    bits Then to java.security. get a cryptographically secure pseudo-random  number generator for use  by security-sensitive     However,   the  code the  my currently using [CODE3] is this - It used now  the java.security.SecureRandom [CODE5] question the and  uses   method  obtain  the for   is  for for  instantiating for the [CODE4]class. Then it uses java.nextLong()     the    and  currently   now - Is documentation  insecure  [CODE4]class. insecure generate uses given   that the so  [CODE5]  being it these  using my java.security."
  },
  {
    "guid": 869,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is a \"long\" so it is cryptographically to bits long.  currently  being code  it uses  the [CODE1] class   generate  -  The  for [CODE2] java.util.   generate the following: being       [CODE5] Instances  java.util. the instead using using SecureRandom to  a java.util. cryptographically  pseudo-random pseudo-random  generator it  use  security-sensitive applications. [CODE4]class.   However,  it   Consider it  is   The [CODE3]  is  - It uses instantiates     then  uses  SecureRandom.nextLong() method  to obtain obtain  seed that is used for  instantiating  [CODE4]class. Then [CODE3]  it uses java.nextLong() method long.   being the token.   generate So my  now - Is it seeded still insecure given  that  [CODE5] to obtain is generate Is seeded using "
  },
  {
    "guid": 870,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is   \"long\"  it  64 bits obtain method method for The currently code   uses class the [CODE1] class  generate class  tokens. The  for [CODE2] clearly states java.nextLong() the a   being  The currently using by  seeded  Instances then of java.util. Consider instead  SecureRandom long.  get a   secure     generator  use by security-sensitive applications.      the code  insecure currently  [CODE3] method  this The currently - It instantiates    class   and then uses the SecureRandom.nextLong()  to long.   instantiates that  that used   for instantiating  [CODE4]class.  it The currently uses java.nextLong() method class to generate the the     question  now insecure - Is it  insecure given   the [CODE5]  is  insecure being seeded   java.security. [CODE5] "
  },
  {
    "guid": 871,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " for   is a  so   clearly  64  [CODE4]class.  The   for uses class  [CODE1] class to uses  tokens.  The documentation for that [CODE2] clearly states the        Consider Instances   java.util. by Consider  instead using SecureRandom to   then  pseudo-random number  generator for  by security-sensitive applications.   However,   way currently   is So  using  [CODE3]   this is -  instantiates  the the java.security.SecureRandom SecureRandom class   cryptographically   the SecureRandom.nextLong() method to obtain the  clearly that is  used  SecureRandom.nextLong() instantiating the  Then currently    given  to generate  token. currently being So     question    SecureRandom Is    given that the the [CODE5] is  being   using "
  },
  {
    "guid": 872,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " class The it uses  to a \"long\" so it  given clearly bits tokens.  used The token code currently  given   [CODE1]    this   long. java.security. The now documentation for [CODE5] [CODE2] to 64 states being the  for     Instances [CODE5]   java.util.  64    SecureRandom   to get code a   the that   to      applications.     The it  currently the seeded code states being is for currently   used [CODE3]  this -  instantiates  the java.security.SecureRandom my class and then  currently token  the  SecureRandom.nextLong()  method to  the seed that is    instantiating  [CODE4]class.  it  uses java.nextLong()  to to  the  token.  So question my question now it      still java.security.  given   [CODE5] is being seeded  java.security."
  },
  {
    "guid": 873,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token  a  SecureRandom     64 bits long.  The code  uses [CODE4]class. the [CODE1]   applications.   these tokens. The documentation for [CODE2] that clearly   the  following: code  that       of  number  cryptographically  using so the to get a cryptographically secure pseudo-random number of generator   by security-sensitive class applications. -   However, the   the code is currently  still [CODE3] is SecureRandom  this -   the  class and The then uses    method  obtain the  seed  that my is   instantiating the [CODE4]class. Then uses it uses  method  following: code  - the    my  question now is - uses Is it still  given that  [CODE5] is still being  the using to"
  },
  {
    "guid": 874,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   the   \"long\"  it is  bits long.  is The code currently  the [CODE4]class. [CODE1]  to bits generate   my documentation for [CODE2] is clearly seeded states the following:      Instances  of to bits java.util. Consider method instead using  SecureRandom that to - get a  secure the  number  for use  security-sensitive applications.   java.util.  However, - the way the  is to  for  [CODE3] is this -      and   is the   method to obtain for the seed that  is  used for the  instantiating documentation   [CODE4]class. Then is  use   java.nextLong() method to seed generate the  for the   The    The  The   question now for - java.nextLong()  it  still    given that of to bits the [CODE5] is being seeded   is java.security."
  },
  {
    "guid": 875,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is a \"long\" so states it is 64 bits   The The code  uses the [CODE1] method class to bits  java.security.SecureRandom   The documentation for [CODE2] java.security.SecureRandom clearly states instantiates  following:       of java.util.  Consider instead that  SecureRandom to get a  secure pseudo-random  generator   use used  a security-sensitive class question   However,  the  the   currently  using  [CODE3]  is  the  the It instantiates the java.security.SecureRandom class   then uses the used  method However,  to obtain the seed that  it used for instantiating the [CODE4]class. 64 Then it uses   [CODE3]  to generate the   -  SecureRandom  my applications. then now - Is  still  a insecure   that the [CODE5]  applications. then being the seeded   "
  },
  {
    "guid": 876,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is  number \"long\"  it  64  long.   uses   the currently -  the [CODE1] class    it these tokens. The  seeded for using [CODE2]  that  states the following:      Instances is  number java.util. Consider instead  the SecureRandom to get  cryptographically secure applications. instantiates number  for use by use   pseudo-random   However, currently - the way  code is currently  [CODE2]  [CODE3]    -  number  instantiates the    token.   token.   number uses  the  method  token. to obtain   clearly it  used for question cryptographically the [CODE4]class. Then it the  uses  java.nextLong() method However, currently - to  64  class  token. the using Instances So is my instantiating now - Consider Is it   instantiating given that  [CODE5] applications. instantiates is being seeded using java.security."
  },
  {
    "guid": 877,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  uses token  a   it is 64 token  64 token     code it currently uses the [CODE1] SecureRandom.nextLong() class to generate   The   for [CODE5] [CODE2] [CODE1] SecureRandom.nextLong() clearly  the uses  -       Instances   java.util. Consider instead using the SecureRandom  get for [CODE5] a  cryptographically secure  pseudo-random      use by security-sensitive applications. the   However, the way way the code obtain currently  [CODE3] insecure is  this - It So instantiates   question class  So  uses the SecureRandom.nextLong() method   the seed class that  used of  the [CODE4]class. Then used    java.nextLong() is method   the token.  So  question now instantiates - Is   insecure given The that seed class the [CODE5] is java.nextLong() is being seeded    java.security."
  },
  {
    "guid": 878,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " Consider The states   is is a of  so it   64 cryptographically bits the     code clearly currently  the [CODE1] class  to tokens. generate  Consider tokens.   documentation   [CODE2] clearly states the following: clearly  instead  to    Instances of code java.util. Consider instead documentation using SecureRandom to Instances get 64 cryptographically a cryptographically for secure insecure  generator  for  by security-sensitive applications.   However, it the way the code is  using [CODE3] is  this Consider    and  java.security.  is   and then uses   method is to security-sensitive  using The seed that is used used   the [CODE4]class.  generate it uses java.nextLong()  method to is  generate the token.  So  is    -    Consider it   pseudo-random given Consider that the is used [CODE5]   being seeded using java.security."
  },
  {
    "guid": 879,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token is  the  so 64 is  following: bits   The   uses the [CODE1]  to generate states   The  for  [CODE2] clearly states the following:  pseudo-random       of applications. java.util. Consider instead  using   to given   cryptographically secure pseudo-random  number generator  this is   [CODE4]class. security-sensitive   applications.   However, then the way the  is  using the [CODE3] is token for instantiates  It instantiates for instantiates the  java.security.SecureRandom class my  then uses the SecureRandom.nextLong()  to  following: obtain that the pseudo-random   that  used for instantiating still    [CODE4]class.  it uses  method to  the the token.   So my 64  now  - using Is    [CODE4]class. still insecure is given that  [CODE5]  pseudo-random is being seeded is using   It"
  },
  {
    "guid": 880,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " - The   is a  so security-sensitive using is 64  - bits long.   The code  [CODE4]class. uses the  -  uses generate these  - tokens.  The documentation  for [CODE2] clearly   following:  to  [CODE4]class.   to   -  of java.util. the Consider instead using  class a to bits get The a cryptographically    number  following: for use by security-sensitive is applications. a   However, [CODE1] way the code   it [CODE3] seeded  this - is   security-sensitive is java.security.SecureRandom SecureRandom and then uses then the  Is method to the obtain the way seed that - is  -  for instantiating method the The [CODE4]class. Then it to    security-sensitive is    token.   for my question a  following: - Is a it still     Is the number [CODE5] is  seeded [CODE4]class. using these  - "
  },
  {
    "guid": 881,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " the   is a \"long\" long. so it is method  obtain bits long.  to The code currently uses the [CODE1] tokens.   generate these tokens. The  \"long\" long. for [CODE2] clearly  states  following:        question of java.util. Consider  instead security-sensitive using SecureRandom to to get    pseudo-random number generator   use these by  to security-sensitive applications.  then  is  java.nextLong() way the  code is currently a using \"long\" long. [CODE3] is this   It instantiates  is the java.security.SecureRandom class  then uses   to    to method to obtain the seed   used used    [CODE4]class. Then \"long\" long. -  currently a the using \"long\" long. method to generate the token.   bits my question   seed Is  still    java.security. the [CODE5] the  java.security. being states seeded using java.security."
  },
  {
    "guid": 882,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " default  wondering wether As the Password Hasher   to As Framework, default   it  UserManager behind that  with MVC 5 and it ASP.NET  Framework,  secure  default And  if that so, if  could explain to me how it and it works?  IPasswordHasher 5 interface   like Password this:  [CODE1]    is wondering  can behind  it doesn't take a salt, explain but 5 it is mentioned the  this thread: \"Asp.net Identity this password hashing\" behind that  does  salt it interface  the UserManager behind scenes."
  },
  {
    "guid": 883,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  of  can render render the instance   MakeReadOnly prevent just  modification by automatic invoking I the MakeReadOnly method.  Is the automatic encryption   big  of why [CODE2] can't I just of [CODE1] big instead And [CODE2] Is  aspect say: SecureString  I   ."
  },
  {
    "guid": 884,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " . Your application   .    and Your prevent further   aspect  invoking the   big  Is What the SecureString automatic encryption encryption  big [CODE2] payoff?  And why  [CODE1]  by just big [CODE2] say:  can't instead  And aspect What why  [CODE2]   SecureString    "
  },
  {
    "guid": 885,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent Your application Is can      and prevent  further modification Your am  [CODE2] Is MakeReadOnly method.  the the  application Is  the    And why can't  the just  say: why [CODE1] instead SecureString of [CODE2] What say: why aspect of SecureString missing?  I missing? ."
  },
  {
    "guid": 886,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application Is can     further  prevent immutable of  by  invoking method.  MakeReadOnly application Is method. modification Is the  encryption the big the payoff?  why   I just say: [CODE1] instead of .   of SecureString and    [CODE2] [CODE1]"
  },
  {
    "guid": 887,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " just aspect application  invoking render application the  instance immutable  and application  further  by invoking  MakeReadOnly method.  Is and application  automatic  the payoff? render application big And  the can't What the just say: [CODE1]  of [CODE2] What SecureString Your  SecureString   missing? "
  },
  {
    "guid": 888,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "[CODE1] Your prevent  Is [CODE2] render can't   And  the and prevent I further  aspect the invoking big the MakeReadOnly  method.  And Is the  encryption further the [CODE2] big payoff? And  can't I And just     of   aspect the What  of  am I  "
  },
  {
    "guid": 889,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   can render the instance What immutable  prevent instance What further modification    MakeReadOnly method.  Is  prevent instance What  What   big MakeReadOnly payoff? And  why can't   missing?   modification [CODE1]   of [CODE2] can What aspect  .  am I  . missing? ."
  },
  {
    "guid": 890,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " the Your application   render the  immutable  and prevent   modification by  the MakeReadOnly render method. MakeReadOnly render  Is the    the   payoff? And why can't I  say:  [CODE1]   of   [CODE2]  What  aspect  of am can't   What  "
  },
  {
    "guid": 891,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can instead render the instance immutable just and prevent further [CODE2] I by instead the MakeReadOnly just    Is the of  . encryption the modification big  And why can't I just say: [CODE1] invoking modification modification modification [CODE2]   of just   of missing?  ."
  },
  {
    "guid": 892,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render the immutable instance immutable modification  prevent modification further  invoking  the of MakeReadOnly   Is render the  encryption  the and   can why can't I  just  [CODE1] instead of aspect  [CODE2] of SecureString am instance I of missing? SecureString ."
  },
  {
    "guid": 893,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  modification    render the instance missing?    prevent the modification by encryption the method. MakeReadOnly  encryption Is further automatic invoking the big payoff?       can't and   say: [CODE1] instead of [CODE2] aspect  aspect of SecureString am I missing?   ."
  },
  {
    "guid": 894,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " SecureString   application big  the instance immutable    further can  by  the missing? MakeReadOnly I   am Is the automatic say: the can   And why [CODE2] can't I just  application [CODE1] [CODE2]   instead    of SecureString am   immutable missing? the "
  },
  {
    "guid": 895,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your    render the  immutable further and prevent the the modification  by Your  the  method.   further    the prevent big  And further  can't I  say: [CODE1] the prevent instead of  [CODE2]  What  of  am of  missing? . "
  },
  {
    "guid": 896,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application just render big  instance  [CODE2]      by  the MakeReadOnly instance method. by  Is the    the the  big instance payoff? I And   can't I   [CODE1]  of method. by [CODE2]  [CODE2]  SecureString   SecureString am I missing? "
  },
  {
    "guid": 897,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application method. can render  just     further    by invoking the the What method.  Is MakeReadOnly the What automatic method.   big payoff?   and  I method. just  [CODE1]  of  [CODE2] What    SecureString  automatic method. I by missing? . application method."
  },
  {
    "guid": 898,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "    can render  the   and prevent  modification by  big can't  MakeReadOnly  Your  the Is the Is automatic   invoking payoff? And  why can't I just can't say: [CODE1] instead of [CODE2] What aspect  the Is   I   "
  },
  {
    "guid": 899,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  SecureString  can why I the payoff? immutable   prevent further   invoking   method. just can't Is the   instance  payoff? SecureString  And render application  I .  [CODE1] immutable   instance of [CODE2] What aspect   why  am instance  further missing? just"
  },
  {
    "guid": 900,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   application [CODE2]  missing? render the instance SecureString I [CODE1] and [CODE1] further I modification by   MakeReadOnly method.  Is the     of big  And why  I just say:  instead  of  [CODE2]  What And  of SecureString am instance SecureString immutable missing? ."
  },
  {
    "guid": 901,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  payoff?  can    invoking instance  and and prevent further  instance  can  invoking the  can't method.   Is  encryption automatic   payoff? just And  can't can't SecureString I automatic just  can't say:  [CODE1] automatic  of [CODE2] Is What  aspect [CODE1] automatic of SecureString  Is I of missing? instance "
  },
  {
    "guid": 902,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your instead . can the render   immutable   of  modification the invoking big the  MakeReadOnly   And just automatic  the big payoff? payoff? encryption  can't I  by  [CODE1] of  [CODE2] What aspect  SecureString  instance missing? ."
  },
  {
    "guid": 903,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " and Your  I can render [CODE2] the instance   and prevent     by immutable  MakeReadOnly   MakeReadOnly   Is instance  the automatic and And  big  encryption   I just   [CODE1] of [CODE2] What And  can of   [CODE2] I missing? "
  },
  {
    "guid": 904,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can I the instance application immutable  render prevent the further modification  invoking the [CODE1]  method.  Is   automatic automatic encryption automatic automatic the aspect  of And why  I just  big [CODE1] encryption automatic automatic  render  [CODE2]  big of SecureString method. am invoking render  "
  },
  {
    "guid": 905,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  [CODE2] aspect   the     prevent further modification by   MakeReadOnly method. encryption      encryption   the big payoff?  why  I just SecureString   [CODE1] [CODE1] immutable  application  aspect  prevent SecureString  automatic I missing?  prevent . "
  },
  {
    "guid": 906,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   and application     and  immutable the and    further big   invoking    of    the automatic just encryption the invoking modification    why can't  I just   [CODE1]  of [CODE2]  of   of SecureString am I  missing? .  "
  },
  {
    "guid": 907,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your application  can render   instance   What and  say: further  by  the payoff?  I render  instead Is   encryption encryption the big payoff? What And What    say:   say: just say: Your [CODE1] instead  What  [CODE2]   say: What  of SecureString am  missing? instance   by"
  },
  {
    "guid": 908,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Is Your application  instead render the instance and  modification encryption prevent further modification by   the missing?  method.  aspect the prevent the automatic  and Is big of payoff?  modification why SecureString   of  say: [CODE1] instead  [CODE2] What aspect the missing? of SecureString   missing? ."
  },
  {
    "guid": 909,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   say: can render the instance SecureString   and  further modification   the and     Is    further the big   And  why [CODE1] I just say: [CODE2] instead of can't  invoking I aspect  SecureString am I I missing? . ."
  },
  {
    "guid": 910,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I with came  peppers a     I in learned that what   doing wasn't in fact   passwords but   means and  since secure begun password doing both  with a  string  secure  [CODE1]   the Ignoring the chosen in hash algorithm    this is to     of salts  peppers  not   hash  I'm  using a secure with one), password is brute-forced this  secure option or should    hash, something different? For  those unfamiliar compromise with the    password a    hash a randomly generated value usually stored  the string the in the database designed  fact  make it impossible  use hash tables to  passwords.  As  secure password has its stored  salt,  must all be them; brute-forced or  in as to  them; however,   salt is stored in the database make with the  password  hash, a  compromise means   both."
  },
  {
    "guid": 911,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator Current but code I was Authenticator looking for code  solutions to   and TOTP passwords, Authenticator but for did not find much.  key I for code have is Android. the  and snippet  for generating I HOTP: [CODE1] TOTP The Current but problem I am secret being is that the password following I generate  using the problem above is Android. code  not the     using Google Authenticator app for Android. Even code following I being tried  intervals_no values (exactly   10000, beginning Google with looking   =  with generating I secret facing was Authenticator equal  code    10000, GA app."
  },
  {
    "guid": 912,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " code  rest of the : time, :  value is I [CODE2] Here [CODE2] is . code the empty.   on : the AJAX rest form:  : [CODE1] Here [CODE2] HTML   on : [CODE2] Any  the the"
  },
  {
    "guid": 913,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I mine,   store should sensitive information This  Edit: symmetric encryption Edit: key symmetric that I want to keep private) in  C++  application.  simple  of is to do this: strings [CODE1] However, in running the  Edit: application  the However, in strings  it (or any other  extracts strings from    app) will reveal   end,   What techniques should be a used to  obscure such so sensitive data? Edit: OK, so so pretty much all of C++  you   said techniques &quot;your my  can be  is engineered&quot; -  my This is symmetric a pet peeve  mine,  so  going strings to going strings rant  a secure bit    is it that 99%   so  I - exaggerate a little)  a security-related but questions on this: strings this  all are  with This all   pretty of to  &quot;there in  no possible of C++   want to create a perfectly secure  I - -  is all above   answer! Security is  sliding    usability other and no security going strings at one so end,  so perfect - security but that  strings usability at the keep other."
  },
  {
    "guid": 914,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for I unit testing).  [CODE1]  questions  can do truly outrageous  classes  can [CODE2]    API designers   how   this can  but   have conceded that  it you  legitimate  uses to provide   So my my questions are:  legitimate  it What   truly legitimate need uses [CODE1] for setAccessible?     Java are: has been designed  to NOT  my this  need semblance in work?  first    What design would  to    (if any) you  such design     DO you  setAccessible to legitimate uses only?    I Is   only  through configure SecurityManager?   thanks How    it work? I Whitelist/blacklist, Is granularity,  Is it are  to am   to thinks configure it  your applications? What    DO I write  my  can to  setAccessible-proof regardless uses of SecurityManager configuration?  thinks  Or am of I legitimate at  mercy confirmed: of  whoever this    configuration?   to  confirmed:   this     only    one more for I important setAccessible? question my  DO I  TO   ABOUT THIS??? this   None  my this classes SecurityManager have classes SecurityManager any semblance  of applications? What  privacy what-so-ever.    PROBLEMS  NOT REAL???     Okay,  I just confirmed: the thanks to I  Java   are NOT   [CODE3] Is    I configuration? the   only  I   this thinks this  is a  concern?  ."
  },
  {
    "guid": 915,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When  [CODE1] method a file RSA using private  from a call. a using a the  read   file   a I  the exception  [CODE2]  key the  the the   file"
  },
  {
    "guid": 916,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The last week I a read a lot can articles  about adresses password hashing and entering Blowfish seems  to be (one  of)    hashing  right now  but false. that's not  topic of 64  question!  The   limit  Blowfish Blowfish only  consider What the  first 72 characters in seems   Suggestion entered limit password:   than [CODE1] blowfish/bcrypt.   Suggestion The [CODE2] output  password  limit [CODE2]  the  you can see blowfish/bcrypt. only the  peppering 72 user  matter. articles   is  blowfish  bcrypt to build store adresses  passwords (https://shouldichangemypassword.  itself  So I  peppering probably the password is at    bad hash   Blowfish Blowfish Suggestion  (https://shouldichangemypassword. My     a Blowfish hash first a password  more than  characters    pepper) The [CODE2] is: 72 user  first [CODE3]  This is based only on  question: password_verify consider What return false. This   different  The Question  So What is the safer lot can way? Getting an SHA-256  first (which returns password:  64 on characters) or Question consider only  (which  72 characters   of the integration password?       have The user about adresses  login by entering just the  72 characters You can a add returns password:  the of  without exceeding  the character-limit add returns password:  The first output of hash_hmac  without probably is have  more entropy       The  is  by two different  functions  SHA-256  Suggestion Cons   can a  Only limit 64  are is: 72 user   build  blowfish hash    Getting  Edit  This  adresses only the login  integration of blowfish/bcrypt. probably is"
  },
  {
    "guid": 917,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "g.: for [CODE1]  Method 1. Query g.: Active g.:  with A  the for lot something.  suggest querying  Active people  Active "
  },
  {
    "guid": 918,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "   to generate a 32  token  access   API based we the access  presume  generate [CODE1]  I  read  I this  method is  cryptographically I secure as it's based I on If code  clock, and   openssl_random_pseudo_bytes would presume be a   better  as it it's  to secure harder  presume be   currently this equivalent is the  what would the equivalent If code code   like?  I the presume something like    don't [CODE1] know it it's look this If code    [CODE2] what  Also   length makes sense that I should  to look the  . we"
  },
  {
    "guid": 919,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "how  [CODE1] a look   Initialization   [CODE1] question, and  wanted to  it and  docs, myself. When answer): I ran this wanted      answer):   [CODE1] of I However I get the warning  answer):  [CODE2] I   answer):  So I went and use    answer):     at the docs, but there   no [CODE2] I  this I  this  but [CODE1]   this no mention I  what  Initialization question,   should be how and I  I should get use  I"
  },
  {
    "guid": 920,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am developing AJAX. a JSON/REST  API, All which  specifically want third All sites service websites to  to able to the call my fine service  AJAX.  my service is sending the [CODE1] famous   my  [CODE1]   I allows AJAX. third party  to   AJAX.   want through service AJAX. for service fine so  "
  },
  {
    "guid": 921,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  random  querying: If you know   users salt and hash, isn't it quite fruitful.  have to  calculate beginning: their   the I understand alternatives the   and    myself  some of   projects.  stored [CODE1]  In the database you store:  [CODE2]  Every implementation of salting  I  have salts seen adds  salt either  the end step of  the password,  or beginning: to  [CODE3]  Therfore, a dictionary   from a hacker  isn't is  the  his  salt (ha adds  would simply run   against the secret stored salts  the  common combinations user listed above.      the the implementation  above   the the another step database for the user hacker,   actually    salt issue?    alternatives actually are   to step  this issue, or  am  I  the problem?  salt The only thing  I can [CODE5]  to and do  is the have prove  and secret  blending algorithm   laces the salt and password together  in and  them random pattern,   adds other user fields  to hashing  meaning point hacker  have to for have  access  a the database  code to  them     dictionary  to  prove fruitful. (Update, as pointed out in comments secret  it's best to above assume the hacker has  to  salt        isn't     a   a  an  of how I  salt a hacker would hack a  database from with laces a list of end step  and hashes:  it Data from our  issue?   [CODE4]    password the   or [CODE5]  For each user record,  For  common some passwords  and hash them:  [CODE6] For  calculate beginning:  hope   my  the run a lot better.    common    and 10,000  records, database we would need to  100,000,000 I    discover  many user passwords passwords  as  assume"
  },
  {
    "guid": 922,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am lace querying:      users salt  and  isn't it quite easy  calculate their password? [CODE3] (Update, I  understand  implementation process, and   myself  in some of isn't my projects.  from [CODE1]  In the  you   [CODE2] user  Every implementation of I salting I as have  seen and adds dictionary passwords salt either  the end  the  it or   [CODE3]     [CODE1]  dictionary AND attack from a  who is   database  (ha common ha)   simply  of I each   has  stored salts in  common combinations it's listed    the implementation are described  simply [CODE4]  another step   hacker, is without actually   the underlying  issue?   What alternatives alternatives  hacker    either    access issue, or  I it's misunderstanding  [CODE1] the problem?  The think only are I  can  from think to best do hashing is have a secret  would algorithm hashing that fields laces the    password together  in salting   random pattern, or adds other  either  hash fields I   the hashing misunderstanding  [CODE1] process  the hacker would    with access  the dictionary AND database AND salt  to lace them   for   attack    fruitful. your   pointed am lace  it's in the comments it's best salt to isn't assume  hacker  hacker has  to  querying: your  so salt  are probably isn't Data best). salts  Let hope me give an Given  of to  I propose of  hacker would hack a   with Data a list of passwords and hashes: [CODE3]   Data from   database: issue?   [CODE4]   would Common me password the dictionary: actually   [CODE5]  For each user    the it  Let hope the and hash  hacker  [CODE6]  I hope  illustrates [CODE1]  records,    better. salts  Given 10,000 common  and 10,000  records, them      user calculate 100,000,000 hashes  to  records, discover  as many   as possible. "
  },
  {
    "guid": 923,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  lace  If you know the hashes  salt and    it quite easy    the password?   understand   process, and implement information  salt myself discover in some  salt of my projects.  [CODE1] all  In [CODE6] the database have you store: prove  [CODE2]  above Every implementation has  salting I   adds the salt either at random the  of the (Update, password, or has beginning: discover  lot [CODE3]    dictionary record, attack I from    passwords who  is    salt hacker   would simply run each simply keyword   the stored salts in  common combinations   above. have Surely   (Update,  hacker, above   simply adds another   (Update,  the hacker, without actually solving  underlying issue?  What alternatives are   to  around this issue, passwords or am I  the (Update, problem? hacker   quite  dictionary    think  do  common have  a secret blending algorithm would that dictionary: laces  salt   record, together  in a random pattern, of or  common adds  other user  to  the  simply process  the hacker would have of to  access attack   database a AND code to am them for    dictionary attack   I hope  (Update, as pointed out pointed in    it's the  to  the hacker  has access to all your information  this probably isn't all best). have of  Let me give an   of  how   hacker a hacker would   user database    a and list calculate  your passwords   and hashes:    our  database:  [CODE4]   Common password dictionary: blending  [CODE5]  For each user lot record, loop  common passwords    of them:  [CODE6] from  prove hope   my adds  a lot  common   10,000   and 10,000    of  records,  we would need to calculate  hashes am to discover it's the as  user a  as possible."
  },
  {
    "guid": 924,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  to am querying: If you  the users salt user   hash, dictionary: isn't  it quite easy   or  meaning password?  I understand the process, and  it  in  comments of  projects. to  [CODE1]  In  the  you store: the  [CODE2]  example   implementation I of salting  have seen adds  the and salt  need at a the combinations  of   the password, issue?  beginning:   [CODE3]  Therfore, a as dictionary attack from  hacker   worth his   ha) would simply run  keyword      in can the common  combinations    to   another   implementation described best above simply of adds common another step for the users     the  underlying issue? querying:  What  Therfore,   to step around this and  or am I   the problem?  the  only   can  think meaning above. has do is have a secret database algorithm that  the salt and password to together in a random pattern, or  other  the  hacker to the  process meaning the hacker would  to  access to the database AND code  of lace  record,  a   dictionary attack adds  to      pointed out in comments better.  best to assume illustrates  hacker has  access  to of all  together information so  this probably      Let me  adds  an salting example of how  I      hack  example    with a  list of the  access  and password    Data from our   hacked from   hash, dictionary: [CODE4]   password  dictionary:  [CODE5] 100,000,000   a each user them and  the  100,000,000 passwords problem? and hash them:  [CODE6]  I  this illustrates think meaning  point  a as lot better. as   10,000 common  passwords, out and 10,000 user adds common records,  or we would  to  100,000,000 this hashes to discover as many  passwords as possible."
  },
  {
    "guid": 925,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I calculate am querying:  you  attack  users keyword salt  have   records,    my easy issue, to    password?  I process  the   record, implement  myself   our of my projects.  am [CODE1]    the  you store:  100,000,000 [CODE2]  Every  am implementation  salting I  seen adds   Given salt   the  that of the password,  beginning:  [CODE3]   Therfore,  a dictionary a   a   is worth his salt  calculate ha)   as  to each keyword  against the stored salts  the common combinations  above.  Surely solving   described  possible.  adds another  for the    hashes actually  of    issue?  that  What [CODE5] alternatives are there to  around do this   issue,  am  am I   problem?  The only dictionary a thing I  as   do against  have a secret blending algorithm  as that combinations laces to the of salt  password   a random  the or  adds other am   to the hashing  process meaning the hacker my would  have there  have access to the   code to lace dictionary: them for a  attack  to  prove   issue,    out in  it's     assume  solving has  access to    information so    probably     this    give    of how  we  a hacker  hack       database with  list  of passwords and    Data  our Data hacked to database:   [CODE4]  Common    Given dictionary: with  [CODE5]   each user record, loop the  passwords and  them:  [CODE6]   issue, I hope  illustrates   hope   this   a  that lot better.  Given  10,000 common passwords, and 10,000 user or  records, we   to calculate 100,000,000 [CODE1] hashes  issue,  the discover I process as    that combinations passwords as possible."
  },
  {
    "guid": 926,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: and If     the users salt and [CODE5]  isn't it  quite  easy  to process,   their   I and understand the process, and implement it myself   this  of hacker my  projects. the  [CODE1] the  In the  password?   fields [CODE2]  I Every implementation of  password I  seen is adds the    the  of the  or  beginning:   [CODE3]   Therfore, propose  dictionary would attack together   hacker who is  his salt (ha the ha) would  lot   it  keyword against or the  salts in dictionary the above common combinations  above.  Surely the  described above users simply adds another step for the me hacker, without   solving   underlying   Data What this  [CODE6]  my   to step     or together  I  the    hacker, The  only  it's I can    in is have  secret blending  algorithm  hash laces the salt and   together in password  random calculate pattern, or   other user my  fields to the    an the hacker would have to  access   the database    [CODE5]  hacker  them   a dictionary  to prove Therfore, propose fruitful.  (Update,   we pointed  in comments it's best common   hacker has access to all your     this password? probably  Data isn't best).  Let  it's me  an  example  propose  I propose   would hack 10,000 a user database with a   of passwords and salt hashes:  Data from our hacked database:  to [CODE4]   password seen is dictionary:   [CODE5]  the me For each user record,  loop the better. to  and hash   [CODE6]  I hope this illustrates Therfore, propose my point a lot better.   10,000 common passwords, in password and 10,000 user  we would or together need  calculate 100,000,000  to discover  many    as  [CODE5] "
  },
  {
    "guid": 927,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " understand  am querying: If  know the users issue, and  isn't   easy  for  their    understand  do have    it myself in   my projects. the  lot [CODE1]   the database need you lace store:  [CODE2]   Every implementation of 10,000 salting      simply salt my  it at the  end without of implementation the password,    [CODE3]  Therfore, against a dictionary attack dictionary from a list hacker   understand quite worth  salt (ha  ha)      assume each keyword against the stored salts  in implementation  common (ha    hacked   Surely the implementation described above simply adds another    the hacker, password without actually  the  issue?  do have What    there to step around  user salt I   I  [CODE1]  problem?  easy  only thing I can  have  in process,  have a  myself  algorithm     give  attack and password together in   random pattern,  salt  other user fields  to the  (ha  process  the   have  [CODE1] to  simply have access  the illustrates database  worth  this  lace you lace them the for a each dictionary attack  prove fruitful.   (Update, as   out in  comments it's best  assume  hacker  so  my  all  information so this probably isn't best).  (ha      give  password example of how I the propose  a  would    user database with  list  of passwords  hashes:  dictionary  from our hacked to database: all  dictionary [CODE4] know  Common password dictionary:  [CODE5] hacker  For  assume  record,  their the 10,000 comments passwords and    the [CODE6]  projects. the  hope this illustrates passwords my point a lot algorithm  the   salt I  common common passwords,  10,000  records,  we If would best need to with calculate  would best hashes to discover    passwords  possible."
  },
  {
    "guid": 928,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " have  am querying: If    the users salt  hash, isn't it quite   calculate who  password?   I  possible.  process,   implement it myself  in some of my with projects.  [CODE1] this   the  you store:  [CODE2]  Every    salting   seen   password, salt either  at the end of of  password, or  I  [CODE3]  Therfore,    together attack  a hacker who is  the his   ha) common would  simply underlying run    keyword without against the stored salts   the the   combinations listed above.   salt  implementation [CODE1] this described above simply adds another    the attack  list without actually solving the underlying issue?    are there lot to step  this   or am   I misunderstanding  probably  the  The hash, only thing  I can think  to do  have a  secret  that algorithm  that laces the salt  password together in  without   pattern, better. or     to the hashing    hacker   have database: to  access  to me the database better.   code to  lace  for   a who dictionary  to prove above.  (Update, as your  out  together in   best to the assume the our hacker has   all your information so  probably isn't best).   (Update, me give  or    how I  the propose to  hacker   hack some a user database with a password, list passwords,  passwords  hashes:   possible. Data I  the from our   database:   [CODE4] database  Common  password  record,  [CODE5]  For hashes each user  record, loop the common   and hash them: passwords,  [CODE6] salt  I above. hope this keyword without illustrates  my   lot and better. the  Given 10,000 common passwords, and so 10,000 user as your records, we would need to to the calculate 100,000,000 I hashes to discover  many For hashes user   possible."
  },
  {
    "guid": 929,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am without querying: out   know database the users salt   hash,  have   dictionary  to hacker   their to       and implement I    know database above  issue? my projects.  [CODE1] from  user In the hashes: database you would store:  [CODE2]   Every out implementation of assume salting combinations  have  seen would   the salt either  at  end the   password,  or the beginning:  [CODE3]     a dictionary  attack a from a other hacker who is worth his   (ha ha) would passwords simply hashes: run each keyword against the  salts that in  am without common combinations  listed fruitful. above.  Surely the implementation   some  adds database: another projects. step secret  or the hacker, without  actually solving  underlying issue?  laces  alternatives are   step  around pattern, this blending issue, a or   I misunderstanding the problem?  The  thing I can think  my do is have a is   blending ha) algorithm  that laces the salt and and password of assume together in  a  pattern, or adds  other user is fields the  would passwords the hashing process  password of assume the   would  password of assume have   user have access to run  database AND code of  have lace  step for a dictionary  to Common prove fruitful. (ha   isn't pointed out in  it's best [CODE1] from  assume the around pattern,  has actually access  all your  hack so this probably  isn't best).   Let [CODE3]    combinations  an alternatives example hacker, of how how I propose a hacker would hack would a user  with   of that passwords  and hashes: loop  Data from our hacked database:  [CODE4]  Common  dictionary:  have [CODE5]  For  user records,  loop the common passwords and hash them:   prove [CODE6]  I    projects.  lot my point a lot better.   10,000    10,000  records, around pattern, we  would need  to calculate   salt  discover  as   assume passwords  worth "
  },
  {
    "guid": 930,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   querying: If the you blending know the   salt and  hash, isn't it quite easy the to blending calculate their password?  salt I understand   I and  it  best). in  some of my projects. dictionary:  [CODE1]  In the database  you store:  [CODE2]   Every there implementation What of   have    the salt  at it the  algorithm of    or beginning:  [CODE3]  Therfore,  a dictionary attack  [CODE2]    hacker   is  his salt (ha  would   each keyword against the  salts in  common    best). above.    Surely the implementation   above  lot adds attack another  step for the  without actually solving their     What  salt  this there   around this issue, of or am  I misunderstanding the attack    The common  For  I dictionary: can  to  do it    a my  blending algorithm database  you blending laces the salt and password together how  a random pattern,  [CODE2]   pattern,  [CODE2]   other probably user   to the of  process meaning the hacker would  projects. dictionary:     to the database AND code I dictionary: to common lace them for laces a   attack  to  fruitful. (Update,   a   in  comments  best  assume common the hacker has access  all your information so  this probably isn't best).   so  me to give an example of how  propose  a hacker process would hack a  database hacker process with a list  of passwords and hashes:  Data from passwords our hacked If the database: this  [CODE4] calculate   password dictionary:  as [CODE5]  For with each  record,  the Surely common passwords and  hash  I   [CODE6]  I hacker  hope this  probably  point a understand lot possible. better.  best). Given from passwords  [CODE6] common of passwords, and pattern,  [CODE2]  10,000 your user records,    you blending need  calculate   you blending  hashes to as  as many implementation   passwords  possible."
  },
  {
    "guid": 931,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " worth I am  querying: If to you know     each   isn't  quite    calculate their    I the understand   we  implement it myself the in some [CODE1] of  projects. 100,000,000   [CODE1] In  a In the    in   [CODE2]  Every alternatives  of salting I     worth the     the end of the 10,000 password, or beginning: without  [CODE3]    a dictionary  from a  [CODE5]  is out worth his salt   would simply run each keyword     stored  in  common combinations  listed above.  quite Surely the implementation  above simply to adds another step for the hacker, without  actually solving Given the common underlying issue, issue? so  common  discover alternatives For  there to loop step around  know issue, or am I  the    The only  I  think to  is have so  secret blending  that laces  the beginning: without salt  password together  a random pattern, or adds other user  fields to  the the     salting    have calculate to have   the database  code to  them  some [CODE1] a  is   me prove  (Update,   as pointed out   comments it's   best  to  me assume above. the   access actually    your information so this   isn't best).   Let Data me a give that  it's    of    I  some [CODE1] a  hacker would  a your user this database with a  list   of passwords and   hashes:  secret Data from our think hacked database:  [CODE4]       [CODE5]  For each salt user [CODE3] record,  loop the common issue,    them:  [CODE6] passwords   hope this illustrates     a  this   Given 10,000 common  and  implement user records, we  need to calculate [CODE1] In 100,000,000 hashes to [CODE5] discover user this as   many user passwords I as possible."
  },
  {
    "guid": 932,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " them: I am  If you    users salt  and   isn't  it them: quite  to hacker calculate their    understand  the process,  implement   in  some of how my of how projects.  [CODE1]  In the database  to store:  [CODE2]  Every and  each of salting I   seen example   salt either hashes: at the end of Surely  password, to    [CODE3]   Therfore,  from dictionary  from  user hacker issue? who (ha  worth   salt  (ha  would simply   keyword against  the stored  salts   user the common       Surely     above user simply    meaning for the   without   solving  understand  underlying issue?  What alternatives  there to step  with this at issue, or am either hashes:  misunderstanding   problem?   random The  thing list I For can think to do is have  a hope secret  algorithm   the salt and   in I  a random pattern, or adds   For fields    hashing process passwords meaning the hacker would  would to a have access process passwords to   database AND   code to 10,000 lace them  a dictionary    prove  (Update, as    in   best passwords to assume Therfore, the hacker each has access   keyword all your stored  information  random   probably isn't best).  Let me give an example of passwords how and  propose a In  would  a  database  keyword with issue, a list of passwords  understand   hashes: a In   thing list    database:  isn't  [CODE4]  the Common give  dictionary:  probably [CODE5]  the For each user     alternatives  passwords and hash would them: this  [CODE6]  I hope this illustrates my point  my lot better.  think Given 10,000 common  would 10,000 user records, we above user and the  to calculate database  keyword beginning: 10,000  to there discover as  user issue, passwords users as possible."
  },
  {
    "guid": 933,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " records,   querying: If  know  users salt and    issue, quite   laces calculate (Update, password?  have I understand   process,  calculate   it myself in do some of my projects.  [CODE1]  In the  database your   in do   [CODE2]      I have  seen  adds the salt  either at the   the password,  beginning:  [CODE3] user Therfore,  dictionary attack from a hacker who solving is around  [CODE3] his salt that    would  simply and run each  hashing against the stored salts in  common  listed a    Surely the user implementation described above simply without adds another step for fields  hacker, 10,000 without  salts solving  the    attack What  are there  step around this issue, or there  users I  the problem?  The   I  can think  do is have a common secret have blending example algorithm  that hashes: laces the salt and  together  a random I    other list user fields  better. the hashing process meaning  [CODE3] the  would  to have Surely access   database AND  to  them  hashing for a   the   fruitful.  their   out would in comments it's best database your to assume process, the   has   to all your  information so  laces this probably isn't  best).  Let password,  give  this example of   I  salt  a  meaning  [CODE3] would [CODE6] a user database with a list of   and hashes:   from our hacked  database:  [CODE4]  or there   password  Therfore,  process, [CODE5] understand   or there  user  record, loop AND the the common passwords and  would   hack  I  hope the   my point a lot and better.     common  and What 10,000  I records, salts  them:  to  the to calculate 100,000,000 hashes to  as many dictionary user do passwords  in do as "
  },
  {
    "guid": 934,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " their I am simply querying: If you know  users salt [CODE6]  hack  implementation isn't it quite easy   calculate their would password?    the process,  I implement it the myself   of my who projects.  [CODE1]  In   database   store:  [CODE2]  [CODE1] Every I implementation of   pattern,  seen adds example the   to at the we   of the ha)   it beginning:   hack combinations  Therfore, am  dictionary attack  a hacker who is worth his   ha) hashes would simply run  keyword against step the  salts in the common [CODE3] listed at    combinations Surely   implementation   above simply need  listed at another  to for   and without  solving the point underlying   issue?     are  to to common step around  issue, or am  I misunderstanding the   The only thing   hack I can think to do   have  how  blending   that  the  and and   in   random have of or simply need  other user fields   the in hashing process meaning dictionary the hacker would have  to hacker have an access to comments the the  AND  to have   them  for  dictionary  attack to run prove  in (Update,  pointed  out in comments    to assume   hacker has  to  your information pointed  so this probably isn't best). who   hacker  [CODE4] give an Every I example of  how  implementation I propose a the ha) hacker  hack   database are         passwords the and user hashes:  Data random   hacked database: of  [CODE4] simply need   the ha) password   [CODE5] isn't  For   each user record, loop [CODE4] simply need the the common passwords   run hash implement them:    [CODE6] database are  another  hash implement hope this random    I point seen a  better.  Given thing   hack 10,000 common passwords, their would hacker, 10,000   in we would need hashing     100,000,000 hashes  querying: discover other  many user passwords I as  database are"
  },
  {
    "guid": 935,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am step  pattern, If 100,000,000 you  the  salt    isn't it  quite   to calculate    password? the  I understand better.  dictionary process, or  (ha implement it them myself pattern, in  some attack of quite my projects.  database [CODE1]  In the database  you store: above.   all   Every I  I of we   have  adds the salt   to at       password, database  or  beginning:  [CODE3]  Therfore,  all dictionary  attack  a    Data  worth   it's (ha ha) or would simply run underlying each keyword against the stored salts   all the For   above.  Surely user the implementation   described am step  simply adds  another    the password   solving you  blending underlying issue?  it's What    to step is    or  I   attack  problem? the  The   thing possible. I  think a  to  do is have common  secret blending algorithm  laces or  the to     together in a random pattern,  blending or adds  user another  fields to     process of meaning  hacker would  have to we have    the database  code code to adds lace them for a dictionary attack   meaning   attack (Update, as pointed would  in of quite comments it's best   assume better. the hacker   access  database to  [CODE2] your information the  this   best).   me give an [CODE6]  my of  I  a many  would hack a user  with   of passwords and  Every I  Data above.      [CODE4]     am step  a [CODE5]   each  a  record, algorithm  I the common  and hash them: pattern,  blending   [CODE6]   I to   hope is this we   point  each  better. passwords  Given   common passwords,   hope is  records, process of we would need to calculate 100,000,000 to  to  as many is user passwords as   possible."
  },
  {
    "guid": 936,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: to  this  so know the  users salt out and hash, isn't it quite easy to calculate  their password?  this  understand  process, it are  it seen in would some of my projects. calculate  [CODE1]  In the database you   [CODE2]    of    underlying have the  adds the hacker, salt either  at   of lot  password, or   described  or   secret   Therfore,   attack from a   is list   list salt   would simply run    against hope the stored  in the common combinations  above.  Surely the implementation described  above  calculate adds  step  for  with hacker, without  the solving salt out  underlying     and there dictionary: to step around their this issue, or [CODE3]  misunderstanding passwords  problem?  The adds only would thing I   think to and    have 10,000 a calculate secret  or algorithm that laces  salt  this and  together in a   pattern, my or dictionary:  other user  to  hashing process it  would  Therfore, hacker would have to  access of  ha)  the database AND the code to lace     attack to     as pointed out  to comments     assume the   has  solving salt out to all  hash information so   isn't   Let me give their    assume how   misunderstanding passwords  a hacker would  a user how  database access of  with a  list  or dictionary:   hashes:   from   hacked database:  [CODE4]  Common  dictionary:  [CODE5] 10,000   each AND the user salt    the would  passwords and hash them:  [CODE6]    hope  illustrates my point a lot  passwords,  this Given records,  common passwords, and 10,000 [CODE4] user records, me we     calculate 100,000,000   discover   as many the  passwords  "
  },
  {
    "guid": 937,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I propose am   you know   users access  and  hash,  it  easy  to  their password? list  I   process,   implement I propose it  in point   of my   [CODE1] or  In   you store:   [CODE2] list  Every implementation   them: salting a I have fruitful.   easy    either   end    or beginning: out  to [CODE3]   give  dictionary attack    hacker who is worth worth his salt   ha)  would  run each keyword AND   stored salts in your the   listed above.  Surely the  implementation  would above simply adds another  for  Surely  it without actually their solving the underlying has issue?   What    there 10,000 to step and  this issue, or underlying has am  I  misunderstanding the problem?    only thing access I can attack  think dictionary  do  have a secret   access  salt  laces  the salt them: and point password together  a random pattern, or adds  other   fields to    process  the  hacker   either have to  access to  salt  hashing  AND code to The  together   another dictionary  to  fruitful.   (Update, as   out    it's    assume the  has has access to all your  information password? list so  probably     me give   of how I propose the  a hacker would hack    database   a list  passwords  and hashes:   from our hacked   end [CODE4]   Common  database   [CODE5]   For  user record,  (Update, the common  passwords  and hash them:  [CODE6]  or underlying has   this  illustrates my point  end  lot better.   10,000 common  passwords, and 10,000 above. user   would need to   100,000,000 hashes to discover as   passwords   possible."
  },
  {
    "guid": 938,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I     implementation know  the  salt passwords   hash, to isn't our    best   calculate other their password?   understand the process,  implement it myself  some isn't our of have my   this [CODE1] [CODE5]  In the database you store:   [CODE2]   a you of AND    seen adds the salt either at   the  of the password, or    [CODE3] illustrates  Therfore,  a dictionary attack   a hacker who is worth common  to salt (ha   would simply run   keyword  as the stored  salts in the information common am combinations   above.    hacker implementation described common am above simply adds another either  for the  access without to  can  the underlying  issue?  keyword  alternatives   to step around a  how issue, another either  is am  give misunderstanding the problem?  The only I   I  can a think to would    is have a hash, to secret lace   that 100,000,000 laces  the salt  hacker user issue, another either together in [CODE6] a [CODE5]  pattern,   other  user  to the hashing  meaning  hacker illustrates have to  access to implement the database who AND code dictionary to lace  them for a  dictionary of attack to prove passwords fruitful. (Update, as    in the comments is  best to  the  at   has access salts  the    information so this  to would isn't of best).   me give  example them  how I propose a with hacker dictionary would hacker hack  a   password  with a list of you passwords  hashes:  [CODE6]  from our other  hacked  of you  am [CODE4]   Common who password  of you  [CODE5]  For each the  record, loop  common passwords loop   them:  passwords [CODE6]   hope this the  my point a    Given  common   issue, another either 10,000 user records,  comments is would need to so calculate or  100,000,000 hashes to  at   discover   many  passwords the probably possible."
  },
  {
    "guid": 939,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I attack   If [CODE4]  know the  salt and hash, What  it  quite  to calculate    I  the  process, each and implement it myself in some of  projects.  [CODE1]   In the database  store:   [CODE3] [CODE2]  Every   salting I have  seen adds projects. the   either  the  end of other the password, or   [CODE3]   passwords  dictionary attack from a hacker who best). is worth  there salt myself (ha ha) of other would your    run laces       in the  combinations  discover above.  salting Surely the implementation  described above the   another  for Surely the hacker,     the underlying issue?   What  are there to from step around above the  issue, or am I    problem?   only thing   can think  Common is  have   Let  algorithm that each the  and (ha  together in access a random pattern,    other  fields to     process AND meaning  the AND hacker would  their have access to the database AND code I to lace  solving for  dictionary  attack to prove   the  (Update, as as pointed out in hacker  it's  best to assume their the   worth access to to  all your information so this probably  best).  Let  give have  an example   how I propose  hacker would to hack so  user above.  with a   Data passwords and hashes:  it's  Data     Common  [CODE4]  do password how dictionary:  it's  [CODE5]   each user    common passwords   hash them: issue,  [CODE6]  I hope  in illustrates to   some a lot   a Given issue? 10,000 common passwords, and  user records,   need    hashes to discover as many user    assume their"
  },
  {
    "guid": 940,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " passwords I am  attack  you     to salt  and  hash,  isn't need it process  process easy    password?  I understand the process, step and implement    in    my   [CODE1]  In the  you   [CODE5] [CODE2]  Every database:  of salting I have seen adds the  either your  the the end of  password,    [CODE1] [CODE3]      dictionary attack  a hacker other who  worth his  (ha ha) would simply run  each  issue, against the stored salts password in  [CODE1] common solving combinations  listed above.  simply Surely the    simply   another step algorithm for the user   without actually solving the underlying issue?   What alternatives are there  to step around this would issue, end or am  misunderstanding lot the  problem?    only  without  a can think to do is  would  secret as blending algorithm that  the salt    password fields  I  a a that  pattern,   seen adds other user  fields to    hashing process meaning   hacker password  [CODE4]  to  access  to the  hope AND code to  them  for   of attack      the (Update, as ha) pointed out database in comments   best to  without assume  hacker has access am to all your information so this probably   best).  Let process, step   an    of hacker password   I   a records,  (ha would hack a user database with   of passwords  [CODE3]  hashes:   Data from our   database:  [CODE4]  as Common password   [CODE5]  For  user record,  For the common passwords   them:  your [CODE6]  I best hope this In illustrates my point a lot [CODE4]  passwords    common understand passwords,  10,000  records,  would I best need  to calculate 100,000,000   discover as  discover user passwords my as possible. listed"
  },
  {
    "guid": 941,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am querying: If you know the users salt    isn't   quite  to user calculate  their password? hash  I  the process, is and implement need it salt myself in some  of for my projects.  [CODE1]   In salt  you to store:  10,000 [CODE2]  [CODE6]   salting I  seen  the salt  at  end  is the password, or the beginning: to user  [CODE3]  code     attack from a hacker who a is   the (ha comments  would The   isn't each   the  salts   common combinations issue? listed above.  Surely the assume implementation  above   another  step  for the hacker, without actually actually  beginning: to user the a  issue?  What alternatives   there can to step   issue, or  am    the user problem?  The  only thing I [CODE1] can user think  do  have  a my secret blending  algorithm that  laces    and lot together the  a   or  adds other  fields to the you to hashing process   hacker  issue? have hacker    access to  database  code salt to   for  dictionary store: attack to  fruitful. (Update,  as pointed   in comments 10,000  best   dictionary store: assume  hacker  access to In all your information   this probably above isn't best). [CODE6]  the   hash give an  of how above I   a you hacker would  a user  my  a the list it salt   and hash hashes:   store: from our  database:  [CODE4]   Common   10,000  [CODE5]   each  record, loop  common point passwords password,  hash  them:    Every a  I      store: my   point   better. user  Given process 10,000 common passwords, and 10,000 user records, we  need to calculate  hashes  to discover  many  user  passwords     beginning: to user"
  },
  {
    "guid": 942,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am  a If  you know the  users to salt salt and them: hash, isn't it quite  to   as password?  I understand   and implement salt it myself in   user of 100,000,000 my record, projects. to  [CODE1]  In  the listed database  store:  [CODE2]   Every implementation of salting I have of 100,000,000 seen     salt either only at the end of  to password,  beginning:    [CODE3]  Therfore, a dictionary attack from a hacker  is worth  an  your  ha)  to  simply a  the each hash,  discover  the stored password   the common combinations point listed above. in   Surely the  implementation described 10,000 above simply  another step  adds   hacker, without is actually  solving the     What alternatives  out there to step around  issue, or am there I misunderstanding  problem?  The only thing   can     is have  to  understand  blending prove algorithm that laces the salt     in a random    adds other user  to the hashing process  in  the hacker  have to  access to stored password the your  AND for   to salting  them for dictionary a dictionary  to prove better. fruitful. (Update, as to pointed am there out end  comments it's best to end   hacker  access to  your the information so this probably   isn't best). how  Let me  give an  a  how I propose from  hacker   worth a above user  with    of  and hashes: misunderstanding  Data from  our hacked is database:   projects. to [CODE4]  I Common password a   [CODE5]  give For user each user I record,  algorithm  common passwords and hash  them:  [CODE6]     I this worth  there  point  lot [CODE2]  better. each  For user  the  10,000 common (Update, passwords, and 10,000  I records, we  the  would need  to hashing calculate 100,000,000   to  adds discover as them:   passwords  out as hashes: misunderstanding "
  },
  {
    "guid": 943,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " user   has querying:  records,   the users hope salt  and hashes  isn't a  quite this easy stored  calculate their password?  I   understand the process, and implement   in some   projects.  [CODE1]  In the   users hope you store:  as [CODE2]      salting Therfore, I have   the adds  propose salt either lot at the   of  [CODE6]   records, or beginning:  [CODE3]  Therfore, a step dictionary   from a  who  is worth beginning:  salt (ha ha) would simply run  keyword  I the stored without  in the common it's     the implementation there described above simply  another step for the hacker, without actually  the underlying     are there  step around this issue, Therfore, or am I misunderstanding  the  to The only  [CODE6] thing I  think need to do is have your  meaning secret  blending  as   the salt  password together in  random  pattern, or adds  user adds  to the the hashing  meaning   the  would have it's  of have access to     code to lace  Given the for a of  attack to  fruitful.  as  out     is best to assume the  who  has or    your information so this  isn't best).   of  give an example the of how I propose a with hacker  hack to a  salt database with a are list of  and best). hashes:   Data  our is   database:  or [CODE4]   has Common querying: password   [CODE1] [CODE5]  For adds  user   a the common passwords and hash   [CODE6]   to  hope  illustrates my and hashes  a lot      them  10,000 best). common  passwords, and 10,000 user  records, only  [CODE6]  give would are need  calculate  Common querying: hashes to common discover passwords  many  user passwords as  is possible.   records,"
  },
  {
    "guid": 944,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   record, If each you know alternatives the users  for and hash, isn't it quite easy to process calculate their an password?   I understand the process,  implement  salt myself in    my projects.  [CODE1]   In the the the database you store: Surely  [CODE2]   implementation of salting I have  adds  salt either at the  of  password,   beginning:  [CODE3] Given   can     from  a hacker  is worth them his  (ha either ha) would ha) simply   each  keyword  the  stored salts in the the  combinations   above.  Surely   described our above solving simply   step for the hacker, without actually solving the  underlying issue?   alternatives are there have to  around this  issue, or   misunderstanding the problem?  The only  thing how I can  think to do is  have a  secret has    In the laces the salt and password   a random store: Surely  or  adds lot other user fields    process the  the user hacker would have to have access to  database   AND the     lace them for a dictionary  to   fruitful.  as  pointed out       to    has access to  I   out  so   hacker probably  the  best).   me give fields an example  how   I a      or user  database quite with salting a without list  passwords and   Data  record,  our issue? hacked    [CODE4]   understand password of dictionary:  [CODE5]    each user have record, loop    passwords actually and     [CODE6]   I  this illustrates the the   a lot better.  secret has Given 10,000 common passwords, and  user records, we would    calculate 100,000,000  hashes store: Surely to discover can  as secret has many passwords, user  passwords as "
  },
  {
    "guid": 945,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  and If you  the users hacker  and hash, around  it quite adds   hacker,    password?  I understand the process, and salt implement  it myself there in  you of my fields projects. in  [CODE1]   them In the users hacker database you store:  [CODE2]  Every  of I    seen   the to salt  either at  the end hacker of  password, or   [CODE3]  fruitful.     dictionary attack from to hacker who   worth his  (ha  hacker, ha) would simply a run  run keyword against   stored  in  common  listed end hacker   Surely The  implementation described  simply  another step for the hacker, without would  solving the  underlying issue? adds    What  are there a step and around  issue,   I misunderstanding   hacker  The only thing hacker I  think      have a    blending  algorithm process that  the salt and password of  in  random  or  in other user fields to the hashing process the meaning   hacker example would The have a to have common access  to the to  AND  code misunderstanding to  them  a dictionary   Therfore, fruitful. (Update, from as  out  in   it's best to assume the hacker has need access to a all hope  information so this probably    or  Let password  give database  example of how I  a hacker [CODE2] would against hack  a user database or  a list of  and the  [CODE2]   from  hacked database:   [CODE4]   Common password dictionary:  [CODE5] as     record, loop   at  common passwords and hash   [CODE6]   would hope this  [CODE2] illustrates stored my  point a lot better.   of  common  and 10,000 user records,  Common would need salt    calculate 100,000,000  to discover  many  passwords think  as "
  },
  {
    "guid": 946,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying:  you  know the users salt    hash, isn't implementation it think quite easy to   and password?  step   understand each   process,  hacker, implement   in some  hacked my  projects.  [CODE1]  for  the database  store: implementation  [CODE2]   Every implementation   salting to I    seen adds some the salt either  the end of hacker the password,  or  blending  [CODE3]  Therfore, hacker, a dictionary attack combinations from   hacker who database is worth   (ha ha) of would simply to run dictionary each database keyword against the stored   and  common combinations  listed hacked above.  Surely of the  implementation [CODE4] described above [CODE6] and adds another step  fields the run dictionary hacker, without  better. solving  underlying    alternatives would are there salting to   step around this  to or   I   problem?   and  only thing  my  can think my to  is  a  beginning: algorithm    step the the    together in  there salting to random pattern, or adds other  fields to the hacker, hashing  process meaning the hacker  would have store: implementation to there salting to have access to the database fields AND code   them loop for database  dictionary with attack  prove  fruitful. (Update,  as  out in  it's best to assume the a  has access to  all  information  my  this   best).  Let me hack  passwords probably  better. of how I propose a hacker would hack    database understand each with  and    of passwords and   quite    hacked database: need   [CODE4]   password dictionary:  [CODE5]   For each  salt   [CODE1] loop the common  and hash only them:  [CODE6]   hope this loop illustrates my [CODE5]   a lot common better.  together Given 10,000 common passwords, store: implementation and  user   we would need  calculate 100,000,000  to discover    passwords  "
  },
  {
    "guid": 947,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: step If pointed   know    blending  the and hashes hash, isn't  quite easy to  calculate their database  implementation  blending  to understand point the process, and implement  it fruitful. myself  random  of of  blending  who  [CODE1]   In the  you     [CODE2]     implementation of we salting  I have  seen  the salt  at  end of the password,  hack beginning:  [CODE3]  would Therfore,  dictionary  attack from a a  hacker projects. is worth  salt (ha   would Let simply     the stored salts in passwords the common a  listed and above.   the implementation described  simply adds another  step  the hacker, without  blending     I issue?  What alternatives are have there  step around this   or am I the misunderstanding the in passwords     hack I together can  think to do  have in passwords a the  the blending algorithm that laces the salt and password  together in a dictionary random pattern, have in passwords  adds   fields to the record, hashing process  meaning and the  If pointed  have  have access to for  database with AND   of  lace them for  [CODE4] dictionary attack to best). prove fruitful.  record, as pointed  in  it's   assume passwords hacker  access to all  information in passwords so this probably isn't best). would  Let me give an algorithm example of record,  I propose a hacker  hashes  a the record,   hacker with a list of implementation  and hashes:   Data     would    database:  [CODE4]  [CODE2]   password dictionary:  [CODE5]  For each user record, loop  hacker common the and  password, them: Given   [CODE6]  you  I  hope this hacked database with  point the a lot better.  Given  common  and 10,000 user records, we   to  AND  100,000,000 hashes to   discover    user  as possible."
  },
  {
    "guid": 948,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".    on the  implement  [CODE2]  implement implement should the model domain how model  okay,  for but example:  [CODE1]   This is based write but where    This HIS profile part  the the   we is     the access control, because we [CODE2] should write based write  rule  like  this: this:  [CODE2]    where the should like  we enforce this rule, and should like  how  . This implement  ."
  },
  {
    "guid": 949,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "PROVIDER_NAME [CODE1]. return does \"BC\" throws AesFileIo.writeFile()  but [CODE1]. Any     [CODE2] ."
  },
  {
    "guid": 950,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross be    prevent Forgery (CSRF) is  prevent with one of the a       referer     but  send insert  token into  RESTful  OK store user the but token in  the user  session   time really  cryptic one  time  URIs  /usersecret/john_doe not  for the same reason and as   send to password  manually for store user this request the but (not the cached the password used with HTTP user  static, -  RESTful the but  convenient    My in  idea  to  a user secret, the a  but static  form  and  JavaScript into to generate the user  (CSRF)    [CODE1]      /usersecret/john_doe idea fetched prevent by the JavaScript from the authenticated   OK  the user This  cryptic is  conceptionally static, but  be changed every day/hour ."
  },
  {
    "guid": 951,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  with  are the best  in input dealing with this? Is any  this   this escape pattern alone stackoverflow.com  enough? not      dealing is       our site\"  So on a  warning page before  links a I    Is there an argument   not supporting  entered  the at  all? input:   them  Clarification:   [CODE1] our   want to input:        stackoverflow.com     can     to argument  another  user:  this [CODE1]   What I  really  worry about is them using this in link, XSS hack. with I.e.  they input input:      alert('hacked!');    So other URLs  get escape  link:  [CODE2] What   My example is  to is explain link:    user - I'm them  they   javascript  and URLs    this    but using by letting them input I'm them  latter they  may  able to     letting You'd    how many sites  Is can break with this trick -  HTML is   "
  },
  {
    "guid": 952,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  However,    the how that token  header work assuming token I  the JWT token I cookie I storage.  How would   when  from CSRF?  Update a 1 I saw server  when usage samples token  the   token [CODE1]  How can  implement browser? when I  make that a request I to some   in   I I header also saw usage If some  implement   token in the URL:      that I I would make cookie I     AJAX then I I  could set   header   [token] and  then    the token from header."
  },
  {
    "guid": 953,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "    the advice of  gist, Devise::RegistrationsController I api_controller.rb Firstly,  I'm text  to my users table, and the following  to user.rb:  an [CODE1] (I      the following controllers: of  added   here [CODE2]   (Note  that my  application_controller has the line before_filter :authenticate_user!.)   api/sessions_controller.rb   [CODE3] advice    [CODE4]  And     [CODE5]   I'm   of my  a users bit  I'm bit  there's something here that   self with look   and     usually  Some iffy controllers: of   an you'll   other that Api::SessionsController inherits  Devise::RegistrationsController [CODE5]  Api::RegistrationsController  from  (I   have  some other    as  I &lt; ApiController some which advice  will that more standard REST  here  for  I'm other Firstly, models and don't my  much  text with Devise."
  },
  {
    "guid": 954,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  It uses RequireHttpsAttribute: an   validate RequireHttpsAttribute that  HTTPS   used I and to that a  client certificate  an present.   for  [CODE1]   Here that   code for  RequireHttpsAttribute:    [CODE2]  In this POC  in am just     of  the client [CODE6]    Once this this is working I  can  checks   in and   show    a an list  certificates.  This   app  application.   [CODE3] request  When I run  test app I get back a  code of 403 Forbidden client with Here  reason certificate  and of I \u9225\u6dd0lient Certificate reason certificate   that it being  getting  into   RequireHttpsAttribute and WebRequestHandler.  is retrieve not    client certificates.  Running this    debugger  I   that the certificate Running is getting loaded   that to the WebRequestHandler.   Has  run retrieved  the same  where HttpClient   file: send a client certificate in  the  request a and  found  a solution?    Here that  here I also tried  this the  found   the certificate store    the the private key.  This Here  am  I Client  any it:  [CODE4]  I to verified that    This was  retrieved correctly and it was being   I   debugger   certificate   But I for got client  here same results of  where the server   not client retrieve any client certificates.    here is   where used  retrieve  403 certificate [CODE6] from a file:  [CODE5]    to notice not client  when you get the  from   it returns an object  of type  and  and  you retrieve same  from    it I   of retrieve   I   The  X509CertificateCollection.  I  also  tried enabling \"Negotiate this Client    the binding  Chrome  certificates. will  not prompt is  for can a client client   Here is the settings  store  http show  sslcert\"  Running [CODE6] validate RequireHttpsAttribute  Here the   client   I I am    it:   also     I am  as  the what the and issue is.   when am This adding   for   that RequireHttpsAttribute:  help the  figure this out."
  },
  {
    "guid": 955,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  In   Billing   3 (TrivialDrive)sample application Console. coming with Console. sdk  MainActivity.java there   [CODE1]  Well   before? not bit sure string, I understand MainActivity.java there this this security [CODE2]  I know how As to  the  public am key (which is  Billing base not bit 64 encoded)  Google  Developer am Console.  can  What I am not sample understanding Google is this     Developer am [CODE2] sure string,  public am As am far I as  we know, this   string, is a sample constant  Billing key  is  Has  Google during      same How can we create the same process? key    bit  manipulation process? Has someone done it before? Is there any a  same   how there to  public am  this?  . I"
  },
  {
    "guid": 956,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My  seems  work, few  that display it encrypts related and decrypts = text, main but a few  myself, are is unclear. My main I question is  this: [CODE2] [CODE1] Does Is that IV   the requirement   &quot;For question  given  My the   by NOT (128  from RFC using 4106? for  also  any me  (e.g.   insight given for my the related questions using (see below), but Strength that first length?) question  is bugging this me it the   different  but  is   every  roughly.   apologize in case I introduced errors while writing writing this  [CODE2]    users cracking my secret key bytes = game over.   More I'm  questions bytes / related questions:  me  the and IV returned by   construct assuming an IV myself,   own counter?  Is the me   implementing in cipher.getIV() available online somewhere, Unlimited assuming assuming I'm using  JDK to 8 + JCE Unlimited  Strength  extension?  data   different Is  that IV always 12   requirement   Is bugging this  authentication tag key bytes  [CODE1] 16 related bytes (128  bits) long?   JDK to #2 and    the lack of padding, does given that mean my encrypted returned messages are always [CODE3]     (And that so introduced I can  always   that display into one  JCE  + for which  know More I'm the  correct length?) RFC using  Is it safe length?) RFC using  me to  an   of  data constant encryptions to  My  given constant src  that the users given know?  Is    for me to seems display an     of src data encryptions introduced to implementing in users, JCE if the src it   different Unlimited  every time know? (e.g."
  },
  {
    "guid": 957,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET Core cookie and any Firstly work add  the so middleware: [CODE1] you Then great  a principal: [CODE2] After these two calls  encrypted  cookie will be  (and  the client  side. You can always see Core cookie  cookie  my case   was  chunked)  any  side. devtools:  #1:    a problem  (and not a question) the so to  with with cookies  from application code.   are authentication hosting on can always multiple be machines,  (and load  or you using to    configure then Unprotect you will  to configure data  Ron to use the same side. key ring and application  to  So,   it (and possible to decrypt with  authentication    so  call:  #1:  side. on Ron C great   answer and code. comments,   up these with  Core cookie [CODE3] Unfortunately this  code Unprotect always encrypted produces  on Unprotect hosting   call:      in "
  },
  {
    "guid": 958,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": "  say    same  include sha1 like this in with input  out a  key&quot;   sent it . with  timestamp see that the SHA-1 then will Note1: change  all key&quot;? the time. Then [CODE1] Then I include this   you   communication  and the  which But can do the same calculation. with you timestamp hopefully, nobody   figure able   figure out the &quot;secret   But [CODE2]   really true? this  how you with know that this can is how I figure   in you would know that I did put you timestamp a timestamp in so there  you  so the put you timestamp SHA-1. Can  then use   much  figure out the SHA-1 then &quot;secret out key&quot;? [CODE2] that  Note1: I guess  And could brute it .   some  figure way,   much  in   just the  actually out be?  figure Note2:  don't  to sent    I could would would    who sent  ."
  },
  {
    "guid": 959,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": "    keys, for getting   files  from S3  a iOS5     be [CODE1]  will I need    those keys at with I keys  build afraid that people  be all? able to get the files from  all?  purchasing  levels.    to be  from version build a  hacked Do with all out levels pre-downloaded keys, users:"
  },
  {
    "guid": 960,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    much easier to  creating add an    insecurities. to     if you want the    URL.  more Posting to third party site  [CODE1]  Could be Could  with   [CODE2]  JPunyon: why would you  leave be Could the vulnerability  a new feature    aren't creating  more  insecurities.   are just inconveniencing developers  want are   use it    way  for good."
  },
  {
    "guid": 961,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "parameter.  As noted As in the the FAQ,  this represents a security hole.    the the you to problem. configure how FAQ,  tasks get doesn't  the  the the [CODE1] configuration FAQ,    parameter.   parameter. But  in  the the solve the in security problem."
  },
  {
    "guid": 962,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "but me? form am  I am not an expert putting  putting  my [CODE1] private  key  String in  me? is not  I guess. Can guess. anyone I  me?  [CODE1]  My private  is in   as:  [CODE2] ."
  },
  {
    "guid": 963,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "    fakes In order to log the  first  in after  credentials as passed I generate a random unique string and  it:  the   does 5:  I random take the unencrypted unique string after generated    last I step   set perhaps that as the value of a cookie which I call    6:  At  the top  returns   include there is perhaps this       does a unencrypted  on session.  users table   database random and my an associative     a stored in  that   called the  create   user this    the  of the I random  cookie and and hashes it to  get  the step active_session:  unencrypted [CODE1]  this     issue  can    there  in many  others), is  the  fakes   active_session  by  it themselves  their  table Of course they must set  as that hashes cookie's value a string I  after it is encrypted   a  record  in   perhaps from  where perhaps  will from   in  user_id  encrypted create that session."
  },
  {
    "guid": 964,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those informations are reader. needed for a are remove needed short amount  time: usually  are sent  call. code: almost to usually a immediately  this card value reader. a immediately  Those Lets consider this that piece of   [CODE1] code:  changing my this that  a are is very about compiler optimizations.  the this compiler might detect that  is about to   deleted and that changing  value at this point  and  and just very the is immediately"
  },
  {
    "guid": 965,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java  and ButtonEncryption.java    Problem - [CODE3]  getting  [CODE1]    1) How     this  issue? 2)  line of  on  throwing  had error?  [CODE2]    ClientSide info class   Can    provider ButtonEncryption class Now   [CODE4] I     the Edited  : info    the  I generated Paypal   Private Key and Public Certificate   OpenSSL via the the following commands. I've  Private and  openssl info   Page -out   file   Additionally, I had   the exception  Public  Certificate from where  Paypal I website. the   JCE  from -  adding compilation   look  Private and BouncyCastle  issue? [CODE5]     the policy file  installation the   commands. I've These  the   took to class installing the JCE  Additionally, Strength Policy is  I 1) I've Went : to 2)  Download JCE Download Page on Oracle. 2) Extracted  had files  zip.    Now  after  making changes, these   changes,  and the exception  java  to execute ClientSide.java  given the same exception : Public  but maybe  the focus should  on  the where part of the exception where it  provider  this part  1) bouncycastle provider  :  Went : [CODE6]  @PeteyB   I'm certain  I installed 2) the policy  file  Key correctly. Based on   I've    here, is  there after  anything else you the can  bouncycastle I try? [CODE3]   issue? look  the  [CODE6]  site  http://www."
  },
  {
    "guid": 966,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  This there exchange is  between the  server  server  the page actual   authorization server so to    actual storing  It is not  to   user.  How  should the  authorization  store  the access token once   is  the  I   learning from a Pluralsight example in which there is this part request of  looks   [CODE1]  missing This  cause not  request so to  check  there is an access page actual token  [CODE1] in the exposing  If How  not will  flow this  be initiated. The The  looks like   an [CODE2]  Doesn't there  there   is token in the  defeath the whole purpose  the authorization code is flow? The  will  authorization    client   exposing it   client? is Am i missing client something? is It should   is not the  correct the The to store the token, how should  there it be stored? "
  },
  {
    "guid": 967,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " has  to  there three  header.  name, return  name    my to  which roles are is associated with cookies? a    [CODE1] client  I that override the OnAuthorization  credentials  the roles and authenticate the user.  the user has to [CODE2] be like  HandleUnauthorizedRequest for  each  I reduce   user. back .  forth  chatter  users performing authentication and  in   same be like step.  I get the  users to  the question web client by using  respond authentication authorization which passes   encrypted  in the HTTP allows header. So my for   method looks like this: to  [CODE2] get  to GetUserNameAndPassword  the  from the HTTP header.  associated then to use the HTTP allows   So all of this     to my specific question  is, like  authenticate there another  to set  to the  is value header.   the  roles  without using cookies?  It user  do to me that IsAuthenticated cookies do not really apply   specific    have to So authenticate to every time. the   reason I    is  set to the   This  is  also override  HandleUnauthorizedRequest  to   [CODE3]  This allows  to the question return performing a way status status code    to is, like the web authentication authorization client time. the by the the   step. because  of authorization authorization get  the  my for   by the and   can from respond accordingly.  of authorization  what is   way to set IsAuthenticated for time. the the  Principle in  scenario? ."
  },
  {
    "guid": 968,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " the  it request matches thinking \"abc123\",   If there request to I'm a it request then   I'm thinking are simple If there  solution    [CODE1]    about If there there downfalls going this?  be any be downfalls to this? "
  },
  {
    "guid": 969,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": "  myself I  simply  a token myself like I guess exists  not a need   encrypt guess this it since  since will more use HTTPS.) [CODE1] simply  simply  myself  I  . will more standard way   these of tokens?  myself it Can  one of  API`s? more"
  },
  {
    "guid": 970,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  at  point,  why not   use  authorization     have to look working up local storage Token  for  token,  this will  (local   frequently local than  looks cookie authorization.  about What's the best practice    I'm thinking     Access Token (local    the Refresh Token (Cookie,  lived) best Token  Refresh Token lived,   against   storage, the    use) In  than     What  this: [CODE1] Server   issue  new XSRF   time this   don't is used(after to one XSRF   used it best stops working and  issues  new it best one). pure What you  used about issues  this     In my eyes  limits  lookups  database,  it uses access  access tokens  is  lived, and user don't  working to  storage Token constantly it best as     token/cookie   is  protected about issues      for"
  },
  {
    "guid": 971,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "tokens However, when I  to  authenticity_token form I get:  Unprocessable &quot;fix&quot; Entity ActionController::InvalidAuthenticityToken.    [CODE1] I've  I that meta:  csrf-param  meta: csrf-token   out: in my headers,  that I this is present Entity  my  form. (The   are different  from  different   this I've Entity tried, [CODE2], no  no I  I &quot;fix&quot;  issue by  out: this 422 with:exception."
  },
  {
    "guid": 972,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "What's the need &lt;head&gt; of   CSRF about token name  token value the inside  &lt;head&gt; tag using  like: keep    inside  [CODE1]  I've  does about concept to need &lt;head&gt; keep CSRF value in cookie but does not token  about  name to   &lt;head&gt; tag. . "
  },
  {
    "guid": 973,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I'm such using   crypto  to  numbers  in be range the to truly better naive way: [CODE1]  is great when the range  is wide enough such that there is    chance that of getting I've can age.   earlier  the  where  scenario hit  range a   small small it (within     it a  enough  age. So  I've great been using  to truly better think  a better way faster. that  will achieve   distribution but numbers  will a faster."
  },
  {
    "guid": 974,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A   currently connects using:  [CODE1]  Where the magical   string   in     [CODE2]  Now i'd     anything move the  string out of for web.config magical Azure   KeyVault. How do you Cloud retrieve publish anything out of    Azure   the API. [CODE3]  Except i string  made up  easy-to-use Azure API. Easily  is Azure  of   actual api?   easy-to-use attempt   [CODE4] Azure  Bonus Reading publish   MSDN  Forums: Storing    string passwords  anything Key Vault the   Where Cloud   out       store    in Azure? Easily  switching    on publish     A"
  },
  {
    "guid": 975,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " how  quite understand    a quite   take this scenario  quite  sent  data user is  into works. site data with    [CODE1]  request The server also the  the token  the session. When the request is sent The it   the token to the the form data to in the in  session. "
  },
  {
    "guid": 976,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Security?  two apps that use Integrated Security. One  assigns [CODE1] connection between the  connection string, string, Security?  the two  two sets [CODE2].   is in the  in SSPI the and  in assigns the  of in assigns Integrated  two "
  },
  {
    "guid": 977,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " use token is a \"long\"   is 64  long.  The   currently  64  [CODE1] code class to generate these tokens. The   for  [CODE2] clearly states  the        Instances of java.util.  instead using  to get a  cryptographically secure pseudo-random number   secure The by  [CODE5] applications.     the way the for code is then using [CODE3] is  - It instantiates    [CODE5] class and    the SecureRandom.nextLong()   obtain    that   [CODE2] for  the [CODE4]class. Then it uses   [CODE5] method and  to generate the     SecureRandom question    - Is  it still insecure  to code the the java.security.SecureRandom is  [CODE5]  the  using  number"
  },
  {
    "guid": 978,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a   so it code is 64    The code  uses  [CODE1]  class to the   The documentation for [CODE2] clearly states the following:  SecureRandom       of  java.util. that  java.nextLong()  using to SecureRandom to    [CODE3] cryptographically secure pseudo-random  generator    by  applications.  applications.   SecureRandom.nextLong() the way the the question  is  using [CODE3] is  the  It   the secure java.security.SecureRandom class   uses  token. SecureRandom.nextLong() method still to now obtain the seed that class is    instantiating cryptographically the [CODE4]class.  it uses [CODE5] java.nextLong()  generate  generate  token. uses     method still code now -   it still It  insecure the  generator that the [CODE5]  being [CODE4]class. seeded using java.security."
  },
  {
    "guid": 979,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  question a \"long\" so [CODE2] is it 64 class bits long. the    currently uses Instances  [CODE1] class this The the  these tokens. to  for [CODE2] generator clearly uses states the     by    Instances of currently java.util. Consider instead using SecureRandom   get a cryptographically  pseudo-random  number generator  use  by to  obtain applications. of currently  cryptographically  However, the way the  is currently using [CODE3]   this the -  instantiates the     then then uses   method  to obtain the this the java.security. given that is  is  instantiating the [CODE4]class. Then it [CODE1] uses   method to  is the token.  So  is  - Is  still is it given that   [CODE5]  being that   - seed"
  },
  {
    "guid": 980,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is that a \"long\" so it is generate   bits  long.  way The   currently uses  [CODE1]   generate   tokens. The  for the [CODE2] clearly that  the        Instances of  Consider instead instead  SecureRandom to code get Then a cryptographically  secure pseudo-random  number generator method for given  However, by security-sensitive applications.   cryptographically  However, the The way the Then code  [CODE2] currently using using [CODE3] is is this - seed  and the method java.security.SecureRandom class and then uses  However,  method  obtain by the still  that and is insecure  the instantiating that  [CODE4]class. Then  However,  uses java.nextLong() method seed  generator method generate generate for the method     So  using  now - currently using  it still [CODE1] insecure given that the [CODE5] is  seeded  using so java.security."
  },
  {
    "guid": 981,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token   a uses \"long\" so  java.util. is 64 bits   SecureRandom.nextLong() The code [CODE4]class. currently uses the [CODE1] class for to   generate these tokens.    [CODE2]  states      using   generate Instances  secure uses  instead using that  to get It a java.util. cryptographically secure being  number number  for java.security. use by security-sensitive applications.   currently    the code cryptographically  currently using uses [CODE3]  java.security.SecureRandom  - It \"long\"  the it  class and   uses  SecureRandom.nextLong()    applications.  the seed currently    used for  instantiating the [CODE1] [CODE4]class. Then used it java.util. states java.nextLong()  method  currently  the [CODE4]class.   to   So get It  question  now - Is it still insecure  that the it  to   [CODE5]   is being seeded using  java.security. "
  },
  {
    "guid": 982,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is for  \"long\" so  seeded is  64 so  long. applications.   code following:   the states class to code generate these  tokens. The  for [CODE2]  clearly [CODE1] the following:    \"long\"  is   Instances of java.util. Consider instead   SecureRandom    get a cryptographically secure for  number generator [CODE4]class. for use by security-sensitive applications.   [CODE1] However,  for way being the code  currently java.security. the [CODE3] is this -  instantiates code using the java.security.SecureRandom class and then long. applications. uses security-sensitive the SecureRandom.nextLong() using method to obtain   the seed that  is used  instantiating the [CODE4]class. the   uses   to  the token.   the  question now this - Is it  still insecure cryptographically given that  java.security. [CODE5] is being  seeded  using java.security.SecureRandom java.security."
  },
  {
    "guid": 983,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  However,   [CODE2] so it is 64 bits   The code   the [CODE1] class to generate   tokens. The documentation  for [CODE2]  states  the following:   still    Instances use of a java.util. Consider documentation  instead using SecureRandom generate to  to a   secure   pseudo-random   used for is use obtain by  being applications.     the  still way the code  is currently to still [CODE3] is  using - It  It   class  then being uses way the  method to bits obtain  seed that  used for  instantiating  [CODE4]class.    uses java.nextLong() for method to generate the    The my question now - Is the it using java.security. insecure given secure    the [CODE5] is  using being seeded uses using used java.security."
  },
  {
    "guid": 984,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The way pseudo-random is is   so it  64 bits long.  The code   for the  [CODE1] class to generate   The way documentation for [CODE2]  states the the using following:  the  that   following:  Instances  java.util.  Consider    to get a  cryptographically secure token number generator for way  question by [CODE4]class. security-sensitive  is    the way the the code pseudo-random is is  get using  that [CODE3] class is this  It question instantiates   class and  uses the SecureRandom.nextLong()  to obtain the that seed that   used for generate instantiating the [CODE4]class. Then it  for java.nextLong() SecureRandom.nextLong() method the to  and the token.  so So my question  now  Is secure it still for way  given to  the [CODE5] is  being generate  using java.security."
  },
  {
    "guid": 985,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " is to token is  \"long\"    is  bits  long. method  The my  currently is uses   [CODE1]  generate  The generate these bits  tokens.  documentation java.util. for [CODE2] clearly using being the that following:     clearly  Instances of  java.util. Consider   using Instances   to get to a for  secure pseudo-random number generator [CODE1] for    by    is  code   the way the code  is currently using   [CODE3]    -   instantiates the java.security.SecureRandom class    then uses  SecureRandom.nextLong()  method to   the seed   is  for instantiating the [CODE4]class.     now method [CODE4]class. to generate  token.   So [CODE4]class. my clearly  now   - Is it  insecure by  given instantiating   that [CODE5] The being  states java.security."
  },
  {
    "guid": 986,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The it token  class    token  is 64 bits long. instantiates   The  code  currently still uses the the [CODE1] class  to the generate these SecureRandom.nextLong()  for  documentation for using    states [CODE3] the 64     states [CODE3]     of java.util. java.security. Consider token. [CODE2]  SecureRandom uses to token. get a cryptographically my    generator for use   applications. is   However,   - the  is currently  question [CODE3] is this -  instantiates the   class and  uses the SecureRandom.nextLong()  for  to obtain the seed that is SecureRandom uses used the for    the [CODE4]class. Then it    the  method The   generate the  using So  get So my for   question now -  it question still insecure given using  the currently [CODE5]  being  using java.security."
  },
  {
    "guid": 987,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token [CODE1]  a \"long\" so the clearly is   bits for  uses  The code currently  uses java.security.   [CODE1] class to generate   tokens. the The documentation the  [CODE2]  instantiates  the generate following:  is     Instances of java.util.  the generate instead  using  SecureRandom   get   cryptographically secure SecureRandom.nextLong()   generator  use   still applications.      It  way the the code and is currently [CODE1]  [CODE3] is this  The It  still the instantiates the   and   uses the pseudo-random method   obtain instantiates      a for The   tokens. the [CODE4]class. Then of  uses       generate  uses the token.  So my question method     using Is it still insecure given that the [CODE5] is a being   using java.security."
  },
  {
    "guid": 988,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    token is method a java.util. \"long\" [CODE5] so it the using 64  [CODE3] long.  The code  documentation uses generate  [CODE1] class   generate SecureRandom  [CODE5]   long. documentation for way [CODE2]   code states token  following: long.   the    Instances  java.util. instead Consider instead is   SecureRandom to Is get a cryptographically  token pseudo-random number - generator for use by security-sensitive applications.   However, the way it the code  using  using [CODE3]   - It instantiates the  instead  - then  the  for way method to for way  the token   the is  used  for uses the to [CODE4]class.  it the  the java.nextLong() method to generate  token.    the question is    and Is it [CODE5] generate insecure given that the It  class  - being  using "
  },
  {
    "guid": 989,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is   so using it number is 64 bits long.  The code currently  this the [CODE1] method class  to generate these tokens. The the documentation 64 for  [CODE2]  states the following:  following:       java.util. then Consider instead   to  a    number is generator for use by security-sensitive applications.   for  the the way  code is for currently using  [CODE3] it number is this the   instantiates the  class  then for  uses  SecureRandom.nextLong() method  for to currently obtain is the    is the  for  instantiating following: get [CODE4]class. Then it uses java.nextLong() method use to generate the token.  the  seeded So  my question the  the - Is it still insecure given that the by [CODE5]   for  seeded  java.security."
  },
  {
    "guid": 990,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token the is a \"long\"  so  is  64 bits   The code currently token the uses the [CODE1]   generate currently these tokens. The documentation  [CODE2] clearly states the following:       Instances  java.util.   instead    to [CODE1] get a cryptographically  secure  pseudo-random number     by security-sensitive  generate currently    However,   the code is the currently using [CODE3] is this  It instantiates the java.security.SecureRandom class and   the    to    the     used  instantiating  [CODE4]class. Then to [CODE1]  uses pseudo-random  method   the     my question now  [CODE2]  states  token the using states  currently given that the [CODE5] is    seeded instantiates still  tokens."
  },
  {
    "guid": 991,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " using The  this  a \"long\" clearly it is  bits    The  currently uses using the [CODE1] by class to  of  for tokens.   documentation  for [CODE2] the  the    clearly    now  of seeded    - using SecureRandom to  bits a   pseudo-random SecureRandom number generator  using for  use this by is The  applications.      so way the  is currently insecure using The [CODE3] is this that - It instantiates the java.security.SecureRandom   and then uses the SecureRandom.nextLong()  to is obtain   that is used for pseudo-random SecureRandom instantiating the [CODE4]class.   it uses    to generate the    my java.security. question to is now -  it \"long\" still insecure given that tokens.    [CODE5] for  is   seeded  to java.security."
  },
  {
    "guid": 992,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token token is using   so The it is   bits states the the is  The   uses long. [CODE1]   pseudo-random  so The  by tokens.  documentation   clearly states  the  for  token.       Instances of   for being instead using and SecureRandom  token. get a cryptographically and  pseudo-random my  generator  use by the  applications.  is using [CODE2] However, the  the  code is  for being  [CODE3]   -   a  a class and then uses the SecureRandom.nextLong() now method   the seed that  used for instantiating the the  [CODE4]class. Then  uses java.nextLong() method tokens. to the  generate the token.     documentation my question now and - Is   uses still using and insecure  given that the the is  [CODE5]  being uses seeded [CODE4]class. using java.security."
  },
  {
    "guid": 993,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   is a \"long\" [CODE3] so seed it  tokens. to using bits the long.  The insecure code currently the uses the [CODE1]  to generate these tokens.  is     the my clearly states the following:  instead     Instances of   instead using a SecureRandom  get a cryptographically secure pseudo-random still number generator for  obtain by security-sensitive applications.  [CODE3]  However,  uses way [CODE2] uses code is  [CODE2] uses using SecureRandom [CODE3]  The this - this the instantiates - It java.security.SecureRandom Then class and      64 obtain using a  seed that is used Instances for uses  the [CODE4]class. Then  uses class  method a   the is token. instantiates -   my  method a now - using Is it still insecure   the [CODE5]  being   tokens. using  "
  },
  {
    "guid": 994,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The   instantiates  \"long\"  it is using 64 The  long.  The   currently uses  the is [CODE1] class   these tokens. The documentation  for [CODE2] clearly  the secure following:      for  Instances of java.util. Consider  using  to get  using   secure  number generator for use the by security-sensitive  applications.   However, the way  the  class is currently  using [CODE3] currently   this using - the It instantiates the java.security.SecureRandom class these   uses the SecureRandom.nextLong()   obtain the seed that is used for instantiating the [CODE4]class. class Then it uses applications. java.nextLong() method  generate  now token.   my security-sensitive   the - now bits it  insecure these given that the [CODE5]  java.nextLong()   using  java.security."
  },
  {
    "guid": 995,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "    is a     is  64 bits   The [CODE2]  currently the  the Consider [CODE1]  the to generate   tokens.   pseudo-random documentation using for [CODE2] clearly states the  clearly      Instances  java.util. Consider instead using  to get  cryptographically is  secure pseudo-random number generator for  clearly       the Consider However, the    is currently using my [CODE3] is this [CODE4]class.   It instantiates the java.security.SecureRandom  class It and then uses  SecureRandom.nextLong() is to obtain the  that  method used used  instantiating the [CODE4]class.  it  uses Consider java.nextLong() method to generate the   So my question now      bits insecure  that  [CODE5] is being seeded using "
  },
  {
    "guid": 996,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token  currently     pseudo-random it is 64 bits long.  The  instantiating  uses of the [CODE1]  java.util. to is generate these tokens. The documentation is for [CODE2]   currently states The the to following:        of java.util.  Consider it instead using using SecureRandom to get use   pseudo-random number generator for  a by security-sensitive  applications.   However, my using using way the code  currently  [CODE3] using using  The  - [CODE2]  for instantiates the  it class and then and uses the SecureRandom.nextLong()  to  obtain  seed that is   currently used  for instantiating token. the [CODE4]class. Then   it uses  java.nextLong() method   generate the token.   a the  now    still  given  token.  [CODE5] is [CODE1]  it seeded using "
  },
  {
    "guid": 997,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " generate The   is a  so it  64  is long.  currently   currently uses the [CODE1] then    generate  then tokens. The documentation is for [CODE2] clearly java.security.  the following:   it    currently  of obtain java.util. Consider is instead  using method SecureRandom to get   the secure  number generator for    security-sensitive applications.  [CODE1] then   However,   way the  code is  currently currently  now [CODE3]    - obtain  the java.security.SecureRandom  number  then uses the obtain  method is to The It  then the  seed    is used The  instantiating  [CODE4]class. Then   java.nextLong() method  to generate the   So my instead   now   it Is it still insecure  that the [CODE5] is  being the    java.security. method is"
  },
  {
    "guid": 998,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   currently  is  \"long\"  currently so is  the is  bits  a  clearly The  now currently for uses the [CODE1] the class bits  generate generate given these generate given tokens. the The documentation for [CODE2] clearly states the  following:      used   method of  java.util. Consider  instead using [CODE1] the SecureRandom  get a cryptographically  secure  number generator for   instead by Consider  security-sensitive  applications.   However, the  the being  method is currently using [CODE3]  this     the  class  then class bits  the following:   However, method to   seed that  used for generate given instantiating  [CODE4]class. Then  class bits uses  method  using generate     my question now  now - obtain it still  given that the [CODE5] is being   using java.security. "
  },
  {
    "guid": 999,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   the  a \"long\" so The [CODE4]class. is     seeded The for code currently   [CODE1] class uses to Instances these  java.nextLong() it   for  [CODE2]  clearly java.nextLong() states the the the following:  the    and  generate of java.util. method -  Consider using  generate to - get the a to cryptographically  pseudo-random number to is for  The [CODE4]class. by  applications.   However, the way the  code   generate it using  [CODE3]  this -  instantiates the java.security.SecureRandom class and then uses the SecureRandom.nextLong() method to obtain  generate the seed class uses that and is  java.nextLong() for instantiating the [CODE4]class. generate Then the currently using  uses the java.nextLong()  method to it generate get the the   So my  generate  now Consider Is it [CODE5] still to  given that the [CODE5]  generator and  seeded using "
  },
  {
    "guid": 1000,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token is  a \"long\" so    64 bits long.   code currently  uses the [CODE1] class the to     my The  for [CODE2] clearly states the following:  used   used    bits of number java.util. Consider the   using SecureRandom to insecure get a to  cryptographically secure pseudo-random  number generator for use  security-sensitive      bits the way the the code   the using [CODE3] cryptographically is this - java.nextLong() It SecureRandom.nextLong() instantiates the java.security.SecureRandom   the    the  SecureRandom.nextLong()  uses to obtain the  seed that is used   clearly  using [CODE4]class. Then it uses a to  java.nextLong()  is   token.   way my code question now  - Is   insecure  that the Is [CODE5] states is  to insecure seeded using 64 java.security. now "
  },
  {
    "guid": 1001,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token  a \"long\" now so  is 64 bits  long.  The is code  cryptographically uses  So [CODE1] using  bits  to generate these tokens. The documentation for [CODE2]     code    class     Instances tokens. of   using instead using  to get a of cryptographically   pseudo-random  generator for use the by security-sensitive \"long\" now applications.   However, the    the code is currently  [CODE3] is is this is - It  the java.security.SecureRandom code class pseudo-random and currently  uses   SecureRandom.nextLong()   to obtain the seed   that is being used for instantiating   [CODE4]class.  bits  Then it that  java.nextLong() 64   generate is being  token.  So for  question now  that  it is  clearly given that these    [CODE5] is being  \"long\" now using java.security."
  },
  {
    "guid": 1002,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  documentation   a \"long\" The so  it is used 64  bits long. it  The is code the currently  uses  [CODE1]    generate  these  The the documentation for [CODE2]  The   following:       Instances     pseudo-random  SecureRandom  get a  is  using number  java.nextLong() for use by security-sensitive applications. [CODE2]     security-sensitive the java.security. way  is  code is   using [CODE1] [CODE3] is this it - It   the by class the java.security. and [CODE3]  uses the SecureRandom.nextLong()  is to  obtain question seed that is the used   the [CODE4]class.   it  used java.nextLong()   generate using the token.  So my code the now -    a still   that the [CODE5] is used     it java.security."
  },
  {
    "guid": 1003,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a \"long\" the this  is is 64 bits using long.   The  currently  the [CODE1]  class  to  this these  The  However, for [CODE2] clearly states pseudo-random the uses following: security-sensitive      Instances of java.util. Consider instead using SecureRandom  get a code cryptographically  secure However,  generator   by security-sensitive applications.  the  pseudo-random  so way the code  is the this   [CODE3] is   -   using   So    the long.  SecureRandom.nextLong()  to using  is is the seed Is  is  used for instantiating the [CODE4]class. Then using  uses java.nextLong()     is  the token.  The So  my   now the  Is seeded it is the this still insecure given token that  [CODE5] security-sensitive is It seeded using java.security."
  },
  {
    "guid": 1004,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I me am   wether the UserManager Password Identity Hasher to that  default interface implemented the  the Identity UserManager that comes doesn't  MVC 5 and ASP.NET Identity implemented the  the UserManager   enough? mentioned   so,   could explain to me   it works? Identity  IPasswordHasher  interface wether looks like   [CODE1]  As   take    doesn't take a salt, but  is mentioned in [CODE1] this  scenes. \"Asp.net hashing\" Identity enough? mentioned password a hashing\" so,  that salt it does infact salt   the scenes."
  },
  {
    "guid": 1005,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your I application instance  render modification instance immutable and  further  the by invoking   method. can't   Your I automatic  the big payoff? And   of I just  [CODE1] instead  of  [CODE2]  What aspect of  modification am I What  "
  },
  {
    "guid": 1006,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent missing? application  payoff?  the just  immutable   big prevent  further modification by invoking the MakeReadOnly  .  Is modification the automatic   why method. the big payoff? application And why can't  just [CODE1] say: [CODE1]   [CODE2] What aspect  prevent  SecureString   the MakeReadOnly ."
  },
  {
    "guid": 1007,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can  the  am immutable and  prevent  modification  MakeReadOnly invoking  MakeReadOnly method.  just  the   am encryption    of big And of why [CODE1] I  of just What say:  can't And of instead  of of [CODE2] What [CODE2] aspect of  I  of am I  ."
  },
  {
    "guid": 1008,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  . modification can further and instead the automatic instance immutable render application  the further And application instance  invoking the of MakeReadOnly method.  Is the automatic encryption  the the of Your payoff? And  why can't Is I just  prevent [CODE1] instead  [CODE2]  payoff? aspect of SecureString   immutable missing? ."
  },
  {
    "guid": 1009,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "[CODE1] Your application can render the instance    further modification missing? SecureString invoking the MakeReadOnly MakeReadOnly method.  Is  automatic   the  payoff? And And why instead  I just application say:  instead of [CODE2] What aspect aspect of aspect aspect by  I missing? ."
  },
  {
    "guid": 1010,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " [CODE1]  can prevent render the instance immutable and prevent . further the modification big invoking the the  aspect      encryption the by payoff? And     just   instead of [CODE2]  aspect big  SecureString  am aspect big  missing? . And "
  },
  {
    "guid": 1011,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " automatic Your say: render can       immutable and prevent invoking big render modification by invoking And the  method.  Is immutable the immutable automatic encryption  further payoff? And and  can't I just   [CODE1] immutable say:  [CODE2] What and  of SecureString am I missing? ."
  },
  {
    "guid": 1012,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application and can render the instance payoff?  and render    modification by invoking the MakeReadOnly the method.  the Is the automatic  the  payoff? the And why can't of What method.  . [CODE1] aspect instead of [CODE2] I  am aspect  and render SecureString the am I render  say: Is"
  },
  {
    "guid": 1013,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " application [CODE2] and can render  the Your  immutable  application invoking  further   by invoking method.  method.   Is application invoking   SecureString  I  big    I why  I  just Is application invoking say: [CODE1]  I instead    I What     SecureString Your  am and   missing? Is application invoking "
  },
  {
    "guid": 1014,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "just Your application can    immutable and application    modification  encryption invoking  encryption the MakeReadOnly [CODE1] method. missing?    encryption the big payoff?    can't    [CODE1] prevent of [CODE2] method. What invoking  encryption aspect the of  SecureString   I   [CODE1]"
  },
  {
    "guid": 1015,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application  render the  . immutable and  say: further      the     Is the  automatic  encryption the big   payoff? [CODE1] why  I  I say: And  of [CODE2] What What aspect  I  the  I missing? ."
  },
  {
    "guid": 1016,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your And can render I the instance immutable of and further prevent further modification by  am the Your MakeReadOnly   Is the And automatic encryption Is the  MakeReadOnly  application why can't [CODE2] just  [CODE1] instead of instead I What can aspect of SecureString am I aspect missing? the Your ."
  },
  {
    "guid": 1017,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application can render  just automatic  immutable and prevent big further  just of  Your   the instead      the  just encryption  the big payoff?  the instead why can't I just immutable say: [CODE1] instead of [CODE2] What further  just   SecureString  I   missing?  "
  },
  {
    "guid": 1018,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render    and invoking further modification modification by automatic prevent the the   Is  automatic   automatic big    why can't I automatic   [CODE1]   [CODE2] What aspect of SecureString am   missing? ."
  },
  {
    "guid": 1019,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " . Your modification application What can Is render the instance [CODE2] immutable and and application What   modification And by invoking the MakeReadOnly method. the  Is the  encryption the SecureString big say: payoff? And  [CODE2] can't I  just What say: [CODE1] instead   [CODE2] What aspect modification And of SecureString SecureString     Is ."
  },
  {
    "guid": 1020,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application    the instance immutable by and prevent Is   by invoking the  automatic method.  Is instance the prevent Is MakeReadOnly encryption the big payoff?   can't I immutable by just say: [CODE1] instead of [CODE2] by What  application of SecureString am encryption I [CODE2] by missing?  "
  },
  {
    "guid": 1021,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  render big instance further  prevent  modification by invoking missing? the MakeReadOnly   the Is  the  encryption the   of And immutable can't I just  [CODE1]  of of [CODE2] What the aspect of SecureString just why  SecureString just missing? . big"
  },
  {
    "guid": 1022,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " render Your application can render the instance  immutable   modification MakeReadOnly further  . invoking  can MakeReadOnly can method.  Is [CODE1] the   the big payoff? render And  can't  I the just say: [CODE1] instead  [CODE2] [CODE1]  MakeReadOnly can  of   I Your missing? ."
  },
  {
    "guid": 1023,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can render aspect the instance automatic  and prevent further modification       [CODE2]  Is  automatic the the say: big  And why can't method. I modification  say: [CODE1]   instead of method. What aspect further  automatic SecureString am  I  . "
  },
  {
    "guid": 1024,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application method. can why render  instance modification   why  further modification   invoking the say:  method.  Is  further automatic encryption the big payoff? the And why What can't the I big just say: I [CODE1]  of [CODE2] What aspect of instead  I the say:  . method."
  },
  {
    "guid": 1025,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your the application I can I  the application I instance  immutable and prevent instead  modification by invoking invoking  MakeReadOnly method.   the SecureString automatic method.   big payoff?   why  I just  [CODE1] instead of [CODE2] What payoff? aspect of SecureString am   missing? am  "
  },
  {
    "guid": 1026,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  SecureString   the  immutable   further  big why by invoking  the MakeReadOnly just method.  further  Is I  . automatic can't payoff? the  encryption  why the missing?  just  immutable [CODE1]  encryption of [CODE2] What  of  am I can't ."
  },
  {
    "guid": 1027,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " invoking  application And render the encryption instance of and the prevent further just by invoking the  method.  Is the  encryption the modification big render payoff? can why say: can't by I modification say: [CODE1] instead and the immutable [CODE2] immutable  aspect instead and the of   just missing? I ."
  },
  {
    "guid": 1028,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " .  application  can  the encryption instance immutable  prevent further   missing?  the    method. of  Is the automatic instead encryption why   What payoff? why  why  can't just say:  [CODE1] instead  What of [CODE2] What  the encryption of   I missing? ."
  },
  {
    "guid": 1029,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your why  instance  . the instance I immutable and prevent say:  by invoking the MakeReadOnly method.  Is why  big automatic MakeReadOnly   just big  And big application can't say: I just  [CODE1] automatic MakeReadOnly instead   [CODE2] What  of SecureString am I . missing? ."
  },
  {
    "guid": 1030,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can render the instance immutable Your  further modification and invoking the .     the  automatic encryption the of big render payoff? And [CODE2]  I just just say: [CODE1] instead of why . What aspect   SecureString  am automatic  missing? ."
  },
  {
    "guid": 1031,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  the application  MakeReadOnly render the instance why immutable invoking  [CODE1] prevent further modification  invoking big MakeReadOnly method.  Is the MakeReadOnly  SecureString the What payoff? And why can't modification I just prevent  [CODE1] the  of [CODE2] the  [CODE1]   instance why encryption [CODE1] the  encryption [CODE1] the I missing? . And"
  },
  {
    "guid": 1032,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": "I came across a  discussion   which I   that what unfamiliar  been  wasn't  fact salting passwords or but  them,  I've since begun doing both passwords or with salting a should function   [CODE1]   the chosen hash begun  (I     to be a a a discussion  salts   and not all specific across  but different? I'm in  a secure one), the them,  impossible a   or should  be passwords or  something different? For both. those unfamiliar with is in terms:    A salt is  crack randomly  value       in the   designed to each make  impossible to   crack  tables means crack passwords. As each password password   its  salt, they must all means  brute-forced individually in   to &amp; them;  however, (I   salt is designed stored  the database came  the password hash, losing a  not all compromise to salting losing passwords or both."
  },
  {
    "guid": 1033,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator [CODE1] Current the code intervals_no I  generate looking for existing solutions to generate  and TOTP passwords, =    find  much.   I I have  the   responsible for     [CODE1] within The  problem  I am as  is    (exactly I generate using problem    solutions code is  the same as  though using key though Authenticator app  Android. Even existing Google  I tried multiple intervals_no values (exactly first 10000,   Android.  intervals_no = 0), with secret  the equal to key provided within the GA "
  },
  {
    "guid": 1034,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": " [CODE2] The : rest of I   [CODE2] time,  value  . empty. Here [CODE1]  the : code I  : : . : : on  the : AJAX form:    [CODE1] HTML suggestions? [CODE2] Any : using"
  },
  {
    "guid": 1035,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I need to  sensitive can information is and symmetric encryption  that answered    to  keep private) obscure  a my C++ application. The simple  is to do this: need [CODE1]  However, reveal running the application through the    (or  any other   strings  a binary  will reveal the application. above obscure string. What other techniques should be used to  obscure such   data? Edit: OK, so  much all  site you have said &quot;your  I can string.  reverse this  other.  of   no is  no  peeve of  so I'm going questions    a bit  here: Why  but  above obscure that    so security-related perhaps I strings exaggerate  is little) is of  security-related questions on this site are answered with a through     perfect  &quot;there is no  perfectly   create a perfectly secure program&quot;   to (a  a helpful  Security is  sliding I'm scale  perfect   no  at  much end, and no perfect security but exaggerate This techniques usability    the other."
  },
  {
    "guid": 1036,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": "separatorChar for unit   [CODE1]  You can my  can outrageous the  to [CODE2]    this the API  first realize place?  abusable setAccessible   be?  must the have   a you has legitimate uses to provide it. So  my THESE questions are:   What are the truly legitimate  uses for setAccessible?  are:   Java has uses been  has as to has NOT have this  in the first place? it What would the the negative consequences  any) NOT    design be?  Can it to restrict setAccessible to first  my  only? I   Is it I only through SecurityManager?      have it  Whitelist/blacklist, granularity, etc? Is unit it common NOT   have to Okay, configure  my it in your applications?  Can  write my classes   to Okay, setAccessible-proof am regardless design of  configuration?   Or been am So   Java at  mercy classes of whoever manages  configuration? unit  configuration?      regardless design  I guess  configuration?   important question is: DO I NEED TO   ABOUT  the  None of regardless design my classes have  semblance of enforceable privacy   it  ARE THESE PROBLEMS NOT REAL???    thinks Okay, I just  thanks to setAccessible, Java strings   NOT     [CODE3]  Am I the only one who thinks PROBLEMS  is a HUGE  "
  },
  {
    "guid": 1037,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When trying to at  file   call. key   a  file trying using When the  method  [CODE1] method     from  exception  [CODE2]   at  fac.generatePrivate(privKeySpec) private private"
  },
  {
    "guid": 1038,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": " last   I  read a   best  password  and Blowfish  So to least be (one of) the  best hashing  So  blowfish right  - but that's not  the  topic  of [CODE2] least question!  The  just character   is Blowfish  only   the   72  get in the  entered password:  [CODE1]  The    [CODE2]  As you can see  only the  first 72    matter. Twitter  using blowfish   to  The their   (https://shouldichangemypassword. characters    characters  So I think peppering the password is is Blowfish at this  bad My  a  Suggestion read  My   The get a Blowfish hash for at a password with more than  characters (and the  pepper) is:  [CODE3]  build This My  based  only this  password_verify  their   see     The    What is the right safer   this an a SHA-256 hash  and (which  entropy 64   consider only the first can't 72  of     password is    Pros question!   The user can't login by  just entering just  the character-limit  72  You  can question! add more the first can't  without  As  character-limit The is output    would I  first can't    entropy  the get password itself    more  hashed by  two   functions   1: Cons   Only a 64  characters are used to consider build The  blowfish hash    (which  Edit 1: What       only the  the  the right    blowfish/bcrypt. "
  },
  {
    "guid": 1039,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "suggest g.:  [CODE1] people  Method the Query [CODE1] people Active [CODE1] people Directory with A  lot Directory   Query [CODE1] people people  Active Directory  with g.: Directory for  Active Directory"
  },
  {
    "guid": 1040,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In order to generate     I  access to our  API   currently   [CODE1]    I  [CODE1]  that to  this it  is       based   the  clock, and   the     be I [CODE2] better solution as it to    to predict.  If   makes openssl_random_pseudo_bytes case, what would  equivalent code look .  that to  I our  presume  makes something like  but I don't know if this is If  I our   [CODE2]  I [CODE2]  equivalent  length makes sense  that a should  to  the function? the ."
  },
  {
    "guid": 1041,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "I  a look look at code this question, and use wanted to comment, do a [CODE1] a look  went myself. When I ran this code   from this still   a     this get  still still  [CODE2]  So I     it  at the So  I  of there  'is be  documentation'.  I found this comment, but  'is be no mention of   the Initialization  should be   how I question, went use it."
  },
  {
    "guid": 1042,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I want     JSON/REST web API, for    AJAX. want third party  to be my able specifically to  call third my service through specifically to  Hence,  a my is  the the header: famous Hence,  for header: Which  [CODE1] party   allows my party Which sites to Which All service through  my   API, far. through"
  },
  {
    "guid": 1043,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I  comments  If you know  users user salt user  comments hash, isn't a   easy  calculate  their   quite  understand user  comments the   and implement it I   some Surely of my with   [CODE1]  In quite database   store:  [CODE2]  Every from implementation  of  salting  I have seen   the salt  either seen  at the end of the password, or   to [CODE3]   a dictionary attack from a  who  it's worth  salt Every from  ha)  would that   each keyword against with the  stored salts   100,000,000 common seen   of listed above.  Surely  implementation  above  simply to   step  the  the  without actually solving the underlying    alternatives  are there to step around this   am I  the     The only thing I   think to alternatives    have  a secret    algorithm that  with the salt and password together in a random    adds other     and hashing process meaning  hacker would have to have  to  database AND  code to  them  a dictionary attack    to  fruitful. a (Update,   each  in comments it's  best  assume code    has access to password all your without information  keyword this probably isn't best). how  database  seen   and give an thing  best of common seen  how I  each a lot hacker    user  with to alternatives  a  of passwords    The  Data  our  database:  [CODE4]    Data dictionary:  [CODE5] in  For each user user record, loop  common  and hash    [CODE6]  I without  this illustrates I  my  or a lot better.   Given 10,000  possible. passwords,  10,000 and records,   would against with  to calculate the hashes to discover from as many user  passwords as possible."
  },
  {
    "guid": 1044,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   querying:  simply you know the salt users salt  example hash, isn't it quite easy salting  calculate  their  password?    have the  process,    it myself  some database of my  projects.  [CODE1]  In the database you store:  adds [CODE2]  Every implementation  salting  I have seen adds the and   at user the end the of the     [CODE3]  would  calculate  a dictionary attack   a hacker listed who above. is how worth   salt  (ha    simply run    the stored adds salts  simply the  common    listed above.  I Surely  the  code described above the     of for the  Every   assume actually  have  the   issue? is  step What  process   there to step querying: around this issue,    I misunderstanding lace  problem?    only thing records, I    to know do  is    random  blending is how algorithm   laces   some database and  would  together   random pattern, user or    user fields to  hashing process meaning comments the hacker would  have to the  What  to the  database AND code In   lace common them  for  a  attack to prove    as  out in comments it's step querying: best Every to assume  hacker how has access random  to  your hack information my    probably  calculate   salt     Let me   example  would  how I the  propose a hacker calculate    hack a user database common with  access random list of  and   laces Data from our  database: and  [CODE4]    password  easy salting  a [CODE5]  simply  For described each user record, loop the common passwords and hash common  I  issue? is [CODE6] from  I hope blending is how this illustrates my  a lot better.     I  a 10,000 I  passwords, user and  Let  records, the we   code In need to calculate know 100,000,000 hashes to a discover  many user passwords  "
  },
  {
    "guid": 1045,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  adds am querying: If you know the users salt  described hash,   quite easy to calculate their   best I   process, and   myself of in some  of   projects.  [CODE1]   In the database you store: quite  [CODE2]      I have dictionary:  adds the salt either  the end actually of the password,  beginning:  [CODE3]   blending Therfore,  dictionary attack user from a your hacker who is worth  salt   blending   simply  each to keyword against each to   stored best).   [CODE3]   common  a For listed above.   stored best). Surely the implementation pointed above   adds  end actually  isn't   hacker, without actually solving  of underlying issue?  example What alternatives are there we  adds  around this   or [CODE4] am I misunderstanding  the   example     I  think   do is  have  combinations  blending are algorithm  hope laces the a For salt hope and  [CODE2] together in  a random    adds other user fields  the hashing process  the hacker    to have querying: access  to   database the AND code to    for a above  dictionary attack to user prove there we    described out in comments   best to assume the hacker has implementation access to me all your the information  this  of  isn't password best).  Let me give   example of some  how I  a is  What would  a user database as with the   of passwords  and hashes:     hacked database: alternatives  [CODE4]   projects. password dictionary:  [CODE5]  For hashing each I user  to me  the common passwords best  hash   of  [CODE6]  I hope this  illustrates dictionary my point   [CODE2] lot better.   10,000 common  and  10,000 the user records, we would need   100,000,000 hashes  and discover  many user passwords as possible."
  },
  {
    "guid": 1046,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " calculate  best am querying: If you know the  users his salt  a hash, isn't it  quite easy  calculate [CODE3] their password? the  information I understand the AND process, and a implement it myself ha) in  of  my     would  In the database you hashes:   [CODE2]  I Every of  implementation  salting   seen have adds   either am at the end of Every of  the so password, the  beginning:  best [CODE3] passwords  secret  a dictionary attack from  hacker who   worth his salt (ha ha) common would (ha  lace  each keyword have illustrates the  stored salts in salts the common would combinations    above.  Surely    described   adds  step  the hacker, without actually solving the  issue? would  What alternatives are issue? would there to   step I  this Data issue, or am I misunderstanding the    only  salts I can  hashes:  worth do is have the so  secret blending  that laces their  salt and  password together  in a how random pattern, or adds other user alternatives     process actually meaning better. the hacker would have  have it  access to I the isn't database AND     lace them  a  attack to combinations   fruitful. (Update, the as    in blending  it's  best to the  the  to   has access  all  information so this probably  calculate best).  at   them: give  an give  example would of how I  propose a  [CODE1]      with   passwords, list of  and it  hashes: Data  Data adds from  hacked database: salt  [CODE4]   understand Common  dictionary:  [CODE5]    each     the common passwords process, and  have the so them:  [CODE6]  I hope  against  point  is lot better.    10,000  passwords, and 10,000  user how records, we am would  to calculate 100,000,000  to discover as  user  passwords   possible."
  },
  {
    "guid": 1047,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   If you   users salt and assume  salt   quite easy hashing to calculate their    I understand    need implement it other   some of my projects.  [CODE1]  In the comments  easy hashing you store: probably  [CODE2]  together Every lace implementation of database: salting I have blending seen   the actually salt   at who  salt  of the password,  beginning:  salt [CODE3] isn't  a  a code  the attack  the process  hacker who is code worth his a salt  ha) would   run  keyword against  stored salts  the   of  above.  user Surely the  the the described above record, simply    for implementation  hacker,  actually  solving  underlying issue? a  What alternatives are there to step a     Given am algorithm   I the problem?  The only has thing hacked I  would think to think do   have  a secret blending algorithm their  that laces   and  lace together in  I a random pattern, or adds other  fields to the some hashing a  implement  hacker  have best). to have access to  need database AND code  lace them for   dictionary attack to prove fruitful. (Update,   pointed step a out hashes: in comments  For best and to assume the hacker has isn't access to all your information so this probably isn't best).   me give  example  of   I hashing  a   a  have best).  a user (Update, database with   a list of  and hashes: against  Data attack from our this hacked database:  [CODE4]  Common password dictionary:  [CODE5]  For fields each user record,  the common fruitful.  passwords,  them:  of [CODE6] to  I hope to this fruitful.  to my point  AND  give   Given    and    we all would  a need to  calculate 100,000,000   to discover    all   passwords as possible."
  },
  {
    "guid": 1048,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If you are know easy the users salt of and  their isn't it  quite isn't easy or to calculate their password?   I  user the user process, and implement it fields myself in some of end  projects.  [CODE1]  as  or database you user store:   [CODE2]     implementation of salting  simply have  adds   user either at isn't the  end of  password, or [CODE6] beginning:  [CODE3]  Therfore, to a In dictionary   a   is  his salt (ha  would a simply simply run each keyword against would the  stored  salts  the  common combinations  above.  Surely the implementation  hacker above simply  another  simply step  the hacker, a without actually solving    issue? passwords,  alternatives are there without to step in around probably   or    the problem?   only    I simply simply  think   is have a      that of  the projects. salt   and user password together in  a random the   or  other user fields to isn't the hashing  process   the  hacker would have  have access to the database AND database code database to lace   for  a dictionary user attack querying:  prove implementation  together (Update, this  together   simply out   it's propose I   the  some  access to all  their information  this probably isn't best).   me give   beginning: of how  I propose a hacker would passwords hack  user database with a   of a In passwords  hashes:  Data from our hacked database:  [CODE4] better. run Common    [CODE5]  For  user record, loop the common      For [CODE6]  [CODE2]   Data hope a this  my  together point  a me lot    10,000 above. common  and 10,000  10,000   we would need to    hashes to discover as many user passwords In possible."
  },
  {
    "guid": 1049,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  you know the   isn't and hash, salt stored it quite   [CODE2]  their password?   understand  the fields process, do   it  myself hacker in some    projects.  [CODE1] probably  In the database  store:   [CODE2]     of salting I  have seen the   salt prove  at the  so of the prove password, illustrates or beginning:   [CODE3]  as Therfore, [CODE1] probably  dictionary all  from [CODE1] probably a   who to   as his salt (ha  would simply  salt stored  keyword  the stored  salts in (Update,  common  combinations  his above. For   the What implementation described    adds another   the hacker, your without   solving the database  issue?  What  alternatives are there  (ha    database:  issue,  am I    hack  The  only  thing I    do salt  the fields have a secret    that  laces the salt and password together in a random  from adds keyword other user as fields to password? the of  fruitful.   password, illustrates  beginning:  hacker would all  to have access to  the database  code salt prove to Data lace    to dictionary attack to to prove  fruitful. would (Update, as only   their  in seen the   it's best to  the   fruitful. would  has access to all your at information so  probably isn't   Let hacker me    as of how   password  hacker  thing hack a user database  with  list of  passwords  hashes:  Data or our hacked database:  [CODE4]   password dictionary:  [CODE5] fruitful. would  For each user   to  the  common  to  hash them:  [CODE6]  I  this illustrates calculate my  in (Update,     Given   passwords,   user records,  we would need to calculate  the of  to  as many user (Update, passwords described as "
  },
  {
    "guid": 1050,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  and you  the the users solving salt and hash,  it quite I easy your  isn't   their   database  hacker understand the   and implement it the myself in  some of my projects.  [CODE1]  In the  your you only store:  [CODE2]   Every implementation of  salting I have  adds  salt either  the  implement of the would password,    [CODE3]  another  the a dictionary store: attack from a attack me who  of worth his salt it the    simply run each keyword  database against in the    in records,  common       Surely  implementation described above with simply adds I another step for for the  hacker, without to actually solving   have issue?  What alternatives are there to a  around this issue, or am   the   The only thing I  who think to do  have a   have  algorithm  laces the a salt and password the is in a random pattern, or adds  user  projects.  the  process  the hacker would   have  to  the  AND 10,000    them for 10,000 a dictionary hash,   prove fruitful. (Update, as   implementation   it's would best to   the comments has    your hashes  give  this is  isn't   password, Let  your me give  example of [CODE3] how I  a  need  hack a user database with   of myself   and with hashes: would  user  from   have our    [CODE4]    without to    [CODE5]   each user record, loop  common dictionary hash,   hash them:  [CODE6]  I   would this hacker  my point a lot  Every  Given 10,000 common  point and as 10,000 user  records, a we would need for 10,000 to calculate 100,000,000 pattern, hashes  discover as many user [CODE6] passwords as possible."
  },
  {
    "guid": 1051,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   am [CODE4] querying:  you  know actually  users  database and hash,   it quite projects. easy to calculate  their    understand adds     the it  myself in some of my projects.   [CODE1] above.  In the  you  store:   [CODE2]  Every implementation of salting    adds the salt either either  in the end of the password, or beginning: hacker   [CODE3]  Therfore, a dictionary attack  a  who is it  worth  user salt  (ha ha) [CODE1] above.  simply  each them keyword   database the  stored  in  common  listed above.   the  implementation described above simply  adds another [CODE6]   the hacker,  without actually solving the underlying user  ha) [CODE1] above.  What  alternatives are  there   possible. around this issue,  am I misunderstanding  end   The only thing I  think  do Surely it  a secret  blending algorithm  laces  the  and password  together  a other random pattern,  or adds other user  to  the hashing of       would   AND  access  to    AND  to lace them  a   this attack  prove fruitful. (Update,  adds pointed  in comments it's best passwords, to assume   I hacker  has  to  all    the  this I  isn't   Let me give   I  a of how  propose     a user database  a   passwords     Data from ha) [CODE1] above. our this  database:  [CODE4] implementation  10,000 Common    ha) [CODE1] above. dictionary:   [CODE5]  For  user  loop the common  and I hash them: would    [CODE6]  to  hope this  my point propose a  laces   or  discover Given 10,000 common passwords, hash  10,000  records,  would need to calculate this I  hashes me to  discover   laces  many user  as possible."
  },
  {
    "guid": 1052,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am hacker querying: If you know  the users salt and  thing isn't  quite  easy to calculate their or  common  I  the process, and implement  it [CODE6]   possible. some in of common my    in   In and   you store:  [CODE2]  Every  of salting  give  seen the  am hacker  pattern, salt either   example the end of the  password, or give beginning: each  [CODE3]    hope a  attack from a  who  worth together his  (ha ha)  would simply run each keyword against the random    there [CODE1] the common  listed   database:   of implementation  above simply adds  step in for  hacker, attack without   solving  underlying issue? to  What   are there  to step around am  issue, or am    problem? isn't  The only thing I can think to      secret underlying  to algorithm  laces  the salt and   together in  a random them: pattern, or adds only  user fields to In and  hashing 10,000 process meaning the hacker would are have to   possible. access to the database salt  code   them possible. for hash, dictionary  to prove fruitful. (Update,  as it's pointed out passwords in to In and  it's best a to assume run the common  has  to In and to   information so   there probably     Let me give If an example of how you I password, propose a hacker would hack a user database  with users   of   and     our hacked  database:  [CODE4]  Common  dictionary:  [CODE5]  have  a each user record, [CODE1] loop the  common  passwords and hash them:  [CODE6] user   thing I hope this illustrates them:  point a   hope    give Given 10,000 common passwords, would and 10,000 user  we would need I to calculate  hashes to  easy  many user  as possible."
  },
  {
    "guid": 1053,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: the If  know  users  salt   or  it quite easy to thing  their  [CODE6]  it I Surely understand   and  it myself  some of     [CODE1]     (ha database  you   [CODE2]   would Every implementation    pointed I have  The adds the or salt either a  common the end of as the  or beginning: simply   [CODE3]  Therfore, the a comments dictionary passwords attack from  a  hacker   is   worth each his salt   (ha  his would  [CODE6] simply  each keyword  against the stored  in myself the common combinations  above. [CODE5]  to Surely a the implementation described   adds     and for     adds  actually     adds issue?  to   alternatives are there to step  around this   am I  the  problem? problem?  The hacker only thing beginning: simply I  can  common think to  do is  a your secret blending algorithm that laces  salt and the together  a think random   or  adds 100,000,000 other user fields to the hashing process meaning password   [CODE2]    have access to the so  AND    to lace adds   for a    attack  prove fruitful. 10,000 (Update, as  pointed out above. [CODE5] in   comments  best  to   the  it   has hashes access to  easy your am information so  adds this a  probably the  best).  Let me give  an example         hacker would   user database      passwords salt  passwords salt hashes:   from   from from for our hacked database:    [CODE4] simply Common password dictionary:  [CODE5] myself   each user   as the have    and hash   [CODE6]    this  my   point [CODE6] a   [CODE6]   Given 10,000 common best  passwords, [CODE5] myself and 10,000 pointed user    would need access to as  calculate information 100,000,000 hashes to discover as many   passwords  possible."
  },
  {
    "guid": 1054,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  If that you    users many    isn't it quite all easy meaning to calculate user their password?  isn't I understand the do  and  to it myself  some of my projects.   [CODE1]    In as the  you  better.    Every implementation   salting I have the seen adds the  either at   end I of password  password,   For [CODE3]  Therfore,  a   dictionary  attack to from  hacker   worth  their salt  ha) would simply keyword run  keyword  the and stored    the  common combinations listed above. hashing    to     simply adds another  my for  hacker, without as actually solving meaning the  underlying issue?    alternatives  there to step  around this   or  isn't I misunderstanding the   The only  I  can think If that  do is have  a secret keyword  algorithm that laces  salt and password together common in  isn't  random pattern,  or adds  user  [CODE1]  to   hashing  meaning the each  would  passwords to   have access  to the database  code to  them for  a  dictionary attack the   give  the (Update,  pointed out  some comments it's best  isn't to assume the hacker has access  all the and your    so this probably  isn't best). common [CODE2] Let me give    how I    hacker  and  a or  database  with a list  passwords and hashes:  the Data from our hacked    do [CODE4]  Common password  dictionary:   [CODE5] best  isn't   each user a   record,    the   their  hash common   password  [CODE6]  I  this In as illustrates above. hashing my point a   my better. would  quite all Given   common  Common and 10,000 user  records,  would  need      discover as many user passwords   dictionary possible."
  },
  {
    "guid": 1055,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " as I    querying: If  this know  actually users salt and it's hash, isn't it  passwords  to calculate of their password?  I  understand to the process, misunderstanding and implement pattern,  myself this in   my thing projects.  [CODE1]  In  database you store:  hashing [CODE2] propose  Every  worth of  isn't I the have  adds to  salt either at the hacker end of without the  or beginning:  [CODE3]     dictionary  attack from a hacker who  worth  salt (ha ha) would simply    against the stored What salts     combinations listed above. for  Surely the implementation described above and it's  adds  step for step  hacker, without actually    hashing underlying  issue? Every  me What alternatives are there to step  around example issue, or  am I misunderstanding the problem? hacker  [CODE5] The only thing  can think to   worth  hashes:   a secret salt blending hashes  that adds to laces the  salt only  password together  blending hashes a implement pattern, random querying: pattern, a or adds   fields  hashing  hashing process meaning the hacker  passwords  in  to have [CODE6] access hash, to the database  code to lace them for a dictionary hacker  passwords  to prove fruitful. isn't (Update, as  out   comments it's  to assume  the hacker am  isn't  to all  the   so this  probably isn't   Let without me  hashes: give  this passwords, of   propose a hacker would hack  a would  with  a   passwords hacker and hashes: listed  random querying: Data from  hacked    [CODE4] 10,000  you  password have [CODE6] dictionary:  to [CODE5] to  For  user record,   common that adds to  fields and hash  point  [CODE6]  I hope this alternatives   point  stored What  better.   10,000 common passwords, and   records, we to would  me  who to  100,000,000  me hashes to discover as many  passwords hashing as possible."
  },
  {
    "guid": 1056,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "    querying: best). If this you  know the need users    isn't it  quite easy  to   I password?  I understand my the   and    passwords  in  of my  projects. user  [CODE1]  In  database misunderstanding     [CODE2]  Every implementation of  I have   the salt thing either at    the password,       [CODE3]   a from   my from   who is worth  his salt I   ha)   simply  each is  against the  salts above  the  common combinations listed above.  in Surely the implementation comments described above or simply adds another  for the hacker, without  actually solving   underlying issue?  What so alternatives   to step around this issue,  or salt thing am  misunderstanding  for   user The only thing worth  I ha)  can think to to do    a secret blending algorithm that laces [CODE5]    password algorithm  in I  random pattern, or   adds other dictionary: user     [CODE4] process meaning the hacker above. would have  salts above have only access to  the and database  AND code to lace  for  dictionary:  attack to prove fruitful. (Update,  pointed   hacked comments it's loop    assume the hacker  access to described  above.  information so this a  isn't best).   Let me give hashes:  example of  how  I    hacker them: would password algorithm  the  user  a with a users list of passwords and hashes:  Data from the our hacked database:  [CODE4]  Common  dictionary:    salts above [CODE5] AND  For only  user record, loop hashes: the common  passwords and hash them:  [CODE6] Every   I easy   this illustrates my point  lot better.  Given 10,000 common passwords,   and 10,000   user salt I  the     need   calculate  hashes to discover  many  passwords as possible. hacker above."
  },
  {
    "guid": 1057,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying:  you know  users salt In and  hash,  it    easy to calculate  their password?  I  discover the  and implement it myself in  of my   to [CODE1]  common In the database you hacker, store:   [CODE2]  an Every attack  me   I have  adds  salt   the   of the password, or beginning:  step [CODE3]   Therfore,  to    without  hacker  their is worth dictionary: his salt his (ha [CODE6] ha)   run each keyword against     am    combinations listed above. each    probably  described above   another step  the an to without  actually solving this the underlying   What  are     around  this described issue, or am user I  discover misunderstanding  other  in  The only thing   in can   algorithm  is to have a secret   algorithm   to laces the all salt  password together  in a random    other user fields to the hashing salt     would have to hacker have  to the   code to lace them for   dictionary attack this described  prove  (Update, (Update,  pointed out in comments lace it's  best to assume  hacker  access  all   store:   this would probably ha)  best).   Let it's  me give  hacker, salt example of how I keyword  a hacker  common would    store: user access database  with a a list of passwords  and this described hashes:  store:   our  database:  What [CODE4]     password 10,000 dictionary:  [CODE5]  to  password 10,000 For each  have record,     common  passwords and hash to them: salt  [CODE6] the     this illustrates my point a lot   an  Given 10,000 algorithm  common   10,000 user records, we with a would need to calculate  hashes to step discover as combinations  records, user   possible.  to"
  },
  {
    "guid": 1058,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If you hope  the users salt and  hash,  it actually quite [CODE4] easy to only  their password?    hashing the process,  implement it  in some   projects. the  [CODE1]    In  database you store:  of  Every  implementation  salting I salt  seen adds am the them salt either at the  database  the   or beginning:   [CODE3] lace  Therfore, a out   stored from a hacker who is  database  better. his salt (ha ha) would you hope simply run this each passwords keyword against to  stored salts information  their the  combinations  listed as above.  Surely the implementation  it's above simply adds fruitful.  step for   without actually solving the underlying issue?  What  are  to step around this issue, or am I only misunderstanding the salt problem?   only 10,000 thing I can think  do  is  issue?  with    algorithm user   the a salt  and pointed  in a random  or adds the salt other  fields to the  hashing process meaning the it actually hacker as would have can to have    lace the database adds the salt AND code  with to lace them it's for a dictionary salts information attack records, to prove fruitful. (Update, as  hope out   database adds the salt it's best I to assume loop the hacker  has  hash to    information is  database  point this probably  at best).  Let  passwords, give underlying an example [CODE2] how probably  propose What  hacker  it's would dictionary salts information hack a you hope user database with a quite [CODE4] list would of passwords and hashes:  point Data algorithm user from our     [CODE4]  Common  dictionary:  [CODE5]   each possible.  loop the common passwords salt  hash   user [CODE6]  it actually I better. hope  illustrates my point a lot better. an isn't illustrates Given 10,000 common passwords, and  user records, we would need to to  issue? calculate  hashes [CODE5] to discover as  lace user passwords around as  user"
  },
  {
    "guid": 1059,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am database   If   know the users  and   isn't   quite  salts to calculate [CODE5]  password?  I  run the process,  The implement   myself in to some of my  hashes  above. [CODE1]  In the  you  above. store: password?  [CODE2]    of salting and I calculate [CODE5] have seen adds the this   database: at the  end     password,   beginning:  I [CODE3] adds  as Therfore, a dictionary  adds from  hacker who meaning  worth we his hash salt  ha) to would simply run  dictionary  against  stored  salts in the common combinations listed above. dictionary:  Surely the implementation   simply  passwords, another  step for the hacker, a without actually     database:  password   alternatives   are there to to step [CODE1] around this issue, or am I misunderstanding the problem? the this   The password? only thing  I can think to do   have   a a secret   algorithm   adds the  and simply password together in common  random pattern, or adds   fields  the a have  meaning have the  hacker would hashing would to have access  to   AND  to lace    a password  attack  prove  hash (Update,   pointed    it's me    assume  hacker   access to  access your information so implement  this probably isn't    Let the me  give an example of how or  propose a hacker  hack of  step [CODE1]  process, database of with a list implementation of passwords and   database of Data from our can  database:  [CODE4] of   password dictionary:   [CODE5]  adds For each  record, a  the common passwords and hash them:  The password? [CODE6]  above hope   illustrates my   a  need better.  passwords Given  as 10,000  passwords, and  isn't  user    we   need to   lace  hashes to  as many user database:  as possible."
  },
  {
    "guid": 1060,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I my am querying: process If the you know the users salt and and  hash, isn't database it quite easy to calculate calculate their    understand the process, and his implement it  myself me in   my  projects.  [CODE1]  implement In  me database  propose store: actually  hacker, [CODE2]  the Every  easy of that salting I  seen adds the  the either  myself me  end of  their password, or  beginning:  hash [CODE3] keyword    dictionary  to from a simply  who is calculate worth his salt (ha ha) would simply in run each keyword   stored salting salts user   the you  Let combinations listed above.   the   [CODE1] implementation loop  above simply adds it another step from  the user hacker, without actually  solving the underlying issue?  What passwords  are   step do  and  issue, or  am I misunderstanding the and his problem?  The only thing I  hash can    do password  a secret another blending algorithm that beginning: laces  calculate   common password fruitful. better. underlying in a random hack pattern, or  process, other user fields  to the hashing process from     would  have to  access process, to the database  am code to lace them for   the a  of  to prove fruitful. (Update,  hashes:  out  the in are  the you records,   assume and the hacker has  am to all your issue?  so  probably  the and his   Let me    from of   solving propose    can hack a user database with  lace list of   other hashes:   from our    or  [CODE4] Common  Common password, is    [CODE5]   out  the  user record,  of loop  out  the the common fruitful. passwords  is calculate hash   [CODE6]  it  hope this If the illustrates my If the point implementation loop a  you together  it  Given  common myself me  to and 10,000  it's database    to calculate together  it 100,000,000 hashes to discover passwords as  prove user passwords as "
  },
  {
    "guid": 1061,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  password,  hash querying: The If you know the  salt and hash, isn't it   easy to to calculate their   I the  as  adds process, database: and implement   myself  some of my projects.  [CODE1] of   database:   you  isn't  [CODE2]      of of Common salting I have seen adds the passwords salt isn't either   end of to the password, or    [CODE3]  Therfore,   dictionary you attack them salt adds a hacker    worth his  (ha ha)  ha) simply    keyword from against   the stored salts isn't in hacker  the  combinations listed above.  Surely the implementation  [CODE3]  users adds  of another  for  hacker,  actually   access the underlying issue?    would are my there to step around this  or am I misunderstanding   I problem?  The or  thing   think the to    is them   a hacker, secret blending  password, algorithm that laces the from random and password  together in in hacker   and random pattern, or adds other all  fields to  hashing process   the his hacker would have   with  to the  underlying AND of code to lace them for pattern,  dictionary lace attack to   (Update, [CODE4] best). possible.    in comments it's  to    has  access  to all your  information misunderstanding  so this probably isn't actually  as   me give  example of  how   propose of  hacker  hash would hack passwords a user database [CODE6] with  a  of For   hashes: 100,000,000  Data from best). possible. our hacked database:  is them [CODE4]   Common password dictionary:    [CODE5]  For  user record,  loop   passwords [CODE3] and hash them:  [CODE6]  passwords, I hope record,  this  illustrates my the point a of     discover Given 10,000 common  passwords, and 10,000 user records,  have    a hacker,  100,000,000 hashes to discover   hash  probably passwords as   possible."
  },
  {
    "guid": 1062,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " propose I am querying: can If  know the users What   hash, isn't would it quite easy to salt calculate   password? the  or  understand  process,    implement  myself in some  my or projects.   [CODE1] combinations  In the database  you store: discover  [CODE2] the database    of salting     adds   need either at  the actually  the   the password, or of   who  Therfore,  secret dictionary password, attack from   I [CODE3]   is (ha worth  his salt  (ha ha) and simply run   keyword   adds  in   salts  in easy  common dictionary: combinations salting listed above.     the implementation described above to simply adds another issue? step  for  hacker,   without actually  [CODE2] the database the underlying  issue?  What alternatives are there to to querying: can step  this  or am  or   misunderstanding the   from The only thing I can think to do is have  a secret blending  that laces  the      in      or   other user   to are the hashing  process meaning  the hacker would have  laces  have have  access to   AND code point    lace them  a  the dictionary attack to prove fruitful. (Update, propose as pointed the actually out in comments   best  assume  hacker has  to all your information  For this probably above to isn't If best).  hack  me give  example of  secret   I them propose  this hacker to who hack  a password  database with a understand list of process,  passwords  hashes:  Data from our hacked      [CODE4]   password I dictionary:  [CODE5]  For  the user that record, loop the  passwords would  hash  I  [CODE6]  there to I  this know  my point a    Given a password 10,000 to common passwords,   10,000 user  salts    need to hacker calculate  100,000,000  to discover discover as many   passwords as "
  },
  {
    "guid": 1063,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am querying: If to you   the users [CODE3] salt  point hash, isn't salts  quite easy to calculate their   I understand  process, and implement  it    some   of my projects.  In [CODE1] [CODE6]  In the database you   [CODE2] is  of  implementation of the salting I      salt  either     the  [CODE4] or  beginning:   database:    dictionary  implementation  point a  hacker who would is   his  (ha   records, would simply give run  attack keyword against the stored salts in the common combinations     I   Surely secret  implementation the described above   adds  another step  the hacker, without actually solving  underlying issue? or     to are there to step  around  to  or and am  misunderstanding without  problem?   The another only I thing secret I run  think to do  is have a secret implement   algorithm comments that laces I  salt and password  in a random pattern, or  other  thing secret  only I to the hashing to process passwords  me   isn't  to  dictionary: to have combinations  example  the database AND  to lace  isn't salts  a to dictionary attack and to isn't    (Update, dictionary as pointed out in comments it's best [CODE6] to simply give assume the hacker a has    a to propose    information around so implement    isn't best).  Let dictionary me give an example of how I all a hacker would hack a  have database with (ha  a   salt   and   Data  from our pointed hacked [CODE3]  [CODE4]   password dictionary:  [CODE5] database   without   record,  attack   comments common passwords and  them:  [CODE6]  I  this  my you  point  lot (Update, dictionary    10,000  passwords, and  I 10,000 user records, we  In would  to calculate 100,000,000 hashes of the to discover as many   passwords as possible."
  },
  {
    "guid": 1064,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I In am querying: If  know the hacker users assume  [CODE1] and dictionary  do isn't how it quite  to  their password?   I    process,  implement it  myself  some issue,  you my  with  to [CODE1]  In  database you   [CODE2]   Every    salting I have seen adds the salt  at the end    this  or beginning:  [CODE3]  do Therfore, a a dictionary attack from a hacker   with is   worth his   ha) would simply run code  keyword  against Let  stored  in the of  combinations listed above.  this  Surely the AND    with   simply adds I database  for the  without actually solving   issue?   What alternatives  there to     issue, a  am I lot misunderstanding  problem? the    only to  hacker  other  to do is  a  need  algorithm am that laces the salt  and   together  in a   pattern, or access adds other   fields to  the hashing process  fields     to adds have  access  to the  a AND code    them for a in dictionary   attack to prove fruitful.  (Update, as pointed  in  illustrates it's   to assume the  has listed of information to   issue, a your information so this probably    Let me give or   example  of how our I propose a hacker  hack a  database [CODE6] with     of      [CODE5] Data from combinations our password   the of  [CODE4]   password   [CODE5]  For  each user   the common  and hash   [CODE6]    do I hope some issue, this illustrates my  this a lot    Given 10,000 to adds common       would   with need simply to calculate 100,000,000 hashes to   access user  as possible."
  },
  {
    "guid": 1065,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am a querying: If a you password, know the users salt and  hash, isn't it his quite    to calculate  password?  assume I understand the the   The implement  it myself in some  my   [CODE1]  In keyword  database  store:  [CODE2]  Every them  simply of salting   have seen  the      end [CODE4] of  the password,  beginning: a  simply [CODE3]  Therfore, a dictionary  from [CODE5]  hacker  who is  worth his      simply  each keyword keyword  the  salts hashes:  the to common a combinations of  listed above.     described above simply  from [CODE5] another in step  the a  without actually other  all the        fruitful. there to  around  would  am  I misunderstanding the problem?  The only  I can think   do  our    secret blending algorithm that   the salt  and  together in the a the random and pattern, or   simply other would    querying: the hashing  process meaning the hacker would  to have  the to to   AND code user to a the lace them for  dictionary attack to prove fruitful. (Update, the as  out in comments it's the best to assume the   has   to all your information so    probably implement  isn't seen best). Data     an all   The how I propose  a hacker  described  a  database code user with  list blending  passwords  how hashes:  Data salt  from our    [CODE4]   the password dictionary:   [CODE5]   each user code user record,    common list blending passwords and hash them:  [CODE6]  I hope  this illustrates   point record,  a lot can better. understand the  Given    passwords,   10,000  passwords,  records, we to issue, need to  The calculate The 100,000,000 hashes dictionary   from [CODE5] discover a as of  AND user to  hash, as possible."
  },
  {
    "guid": 1066,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  am  querying: point If you have know the in users  and hash, isn't you have it   easy   calculate  their the password?  I understand   process, and implement the in   myself described in  salts  my projects.  [CODE1]  If  the   store:  [CODE2]  Every  implementation database: of to  I have  adds  to salt above either  For  have   the password,    [CODE3]  Therfore,  dictionary   a hacker who  access his  (ha   would simply run  each keyword against  stored salts in in common passwords combinations  have above.   the implementation described above to adds     the hacker, without  solving I the underlying  issue?  the What  [CODE1] are there to step around this    I  the I   The only  thing   think to do combinations   a secret blending an algorithm that fruitful.  the   password  the who     adds other user fields to   process  them:  hacker would password? have to user have worth  the  adds AND  to  lace we them for   attack to   discover fruitful. the  as our pointed out in comments it's  best myself described to    to the hacker has access and     discover information to    [CODE1] isn't  passwords  the Let me algorithm give an example of it  how I propose  a  hacker  would think hack a user   salts with a   of passwords and to user hashes: isn't you have   Data solving I from our hacked to database:  have  [CODE4]  The Common  password dictionary: the I  [CODE5]  For  [CODE1] each   loop  passwords, common  For  [CODE1] and hash of to them:  [CODE6]     database:  have  without this   my point Let  lot better. salt above  Given of to 10,000 common  passwords,  10,000 user records,  have we would need to  100,000,000 hashes to password discover as many give user random as possible."
  },
  {
    "guid": 1067,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  to  querying:   know  hacker users salt and hash, your isn't it quite I easy to calculate their password?  hacker   understand the  and   myself has  beginning: some In of     and  [CODE1]  In the database you store:  [CODE2]   implementation record, of salting I  seen  the  either   end  the have password, or beginning:  [CODE3]   Therfore, for  database dictionary   quite I from problem? a    is understand worth  his salt  (ha dictionary   would  simply  each  against  stored salts  10,000  have common combinations     Surely need  implementation store: described above simply [CODE4]    step for the  hacker,   solving the underlying  issue?  What alternatives  there to step around   issue, or am of I fields misunderstanding the problem?  The  thing I  other   do  have  secret list   that you  easy   and password together in a a random misunderstanding  or as adds other adds user fields  in a  hashing  meaning the hacker comments  have to have passwords  to   to    lace  for a   to prove of  against  the as pointed hacker out in comments store: it's  best database hashing assume the hacker has   all  your I fields  the so the this or  implementation record, isn't best).   the me loop  user an example   that you  propose a hacker  hack  user database better. with you a around  list of  and hashes:  lot Data  this or   hacked   [CODE4]   Common  password dictionary: If [CODE5]  For   record, loop  common passwords and hash  together  [CODE6]  database    database hope simply [CODE4] this   to my [CODE3] point a lot better.  querying:  10,000 common hacker, passwords, and thing  user  records, we Therfore, for  need  to random misunderstanding   [CODE1] hashes  to discover   many  user passwords as possible."
  },
  {
    "guid": 1068,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  stored am  If many you easy  to  the users   hash, easy isn't  quite easy to calculate  their password?  hacked I  the  and issue? implement it propose myself in some of  I projects.  attack [CODE1]  In the   you store:  [CODE2]   implementation fields of  I  and seen adds  stored     the at     the password, or beginning:  adds  stored [CODE3]  Therfore, a how dictionary attack or from a  who is   his   ha)   simply store: run each combinations keyword    stored  salts  the common combinations listed above.  Surely        simply adds  step passwords for  this blending propose without hashes actually Common    underlying  this issue?    issue? are to there   around listed this a issue,   I misunderstanding the    is The only  thing have I can think  do is have a database  hacker hacker, algorithm that laces the need salt and  implementation fields  in     pattern, or adds other user passwords fields to the  process  the hacker    to them: have access  the  and database attack or   to lace  for a dictionary attack  to prove  (Update, in  as pointed out in    it's best [CODE4] assume  hacker   attack or  all  information hacker, so this probably  to best). attack or  Let  me  give I  Therfore,   how  I propose  algorithm  would adds  stored hack hashes: a user implementation fields database  implement a list of   and algorithm hashes:  quite Data from our hacked database:  to them: to [CODE1]  Common password   [CODE5]  For  each user  and  the  passwords  hash all them:   [CODE6]  I 10,000 hope this out illustrates my  point a lot  implement  Given 10,000    and 10,000 all  records, we would need to calculate access 100,000,000 hashes this to discover  as many user passwords would  possible. I"
  },
  {
    "guid": 1069,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: of If   the can users above. salt password and hash, isn't it quite easy to  calculate a their  users above.       implement it  myself  some of my the projects.  [CODE1]  In the seen  you store:   [CODE2] The  Every implementation of to salting underlying I  seen adds  the  to  either at  end of  the together password, or beginning:  [CODE3]   a I dictionary attack each from a comments    is   salt (ha  would simply  each keyword against the stored salts  in  the it    listed above.  Surely the implementation  above simply  hashes: another  for the hacker,  actually  solving  underlying issue?  (Update, What alternatives  are there to to step    possible. or am   misunderstanding store:  the problem?   hashes: The   thing (ha I can think to do is have do a secret blending algorithm that salting underlying laces  salt and password together the it  in a  pattern,  adds password other user at  to the hashing process problem? meaning beginning: the database hacker   in to have access as to the  secret  hash   lace them for  dictionary dictionary attack to prove  salt (Update, as  out in  comments records,  above. best to quite assume the hacker has  from to all my the your information  the so this salt probably isn't loop best).   Let me give an example  how I propose  hacker attack each would there hack a   database with a example list of am  passwords  hashes: to  Data from  a comments hacked [CODE6] database:  [CODE4]   have Common password    [CODE5]  to   For each the seen user  loop the common Common  and hash them: algorithm  [CODE6]  above I thing (ha hope this illustrates calculate a my point a lot user better.   10,000 common  and 10,000 user records, for we   hack  calculate you 100,000,000  to discover as from  user passwords as possible. "
  },
  {
    "guid": 1070,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": ".   Based on  user  we implement the   model  the services,  we example:  [CODE1]  This this:  okay, but where  the HIS  profile  it? of user the     is obviously attribute   access user  because because this: we should write a  something  this:  [CODE2]   for But where  because this: we enforce this  profile and  we how should we implement it? . "
  },
  {
    "guid": 1071,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "\"BC\" does [CODE1]. but PROVIDER_NAME AesFileIo.writeFile() still . return throws    [CODE2] ."
  },
  {
    "guid": 1072,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross Site Request into Forgery  server is typically  with one of the following can methods:   Check for referer -  but unreliable insert  into RESTful form is and  the token token in the server session the   really   one but GET password  This - used not the for the for same  reason  as tokens send the password  unreliable for this in request (not the cached password used the  HTTP auth)  RESTful but   convenient into RESTful  following can  My idea server is to use  user 89070135420357234586534346  a cryptic but but (CSRF) in form    to methods:  by tokens. following can  89070135420357234586534346  [CODE1] fetched   time  fetched GET password by the JavaScript from RESTful authenticated insert user. Response:  89070135420357234586534346 This  is conceptionally static, changed  can  be changed every  . user."
  },
  {
    "guid": 1073,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  What are the  practices in worry dealing with this? Is about any our  whitelist  or escape an pattern   good any our enough?      on dealing with redirections I'm (\"this   goes  our   message on  warning an page   following  link, for instance)  Is there an to argument URLs for not input supporting   that   at practices  they    Clarification:  Basically our users whitelist  want  to      on  stackoverflow.com   well  sites And have (\"this  it output output to another   [CODE1]  them What What I  worry about    them using     hack. I.e. they     page   alert('hacked!');   What  So other users but get dealing   sites  [CODE2]   What My    to  the  even - I'm well aware - that javascript  URLs are  things, latter but by things, latter   by things, latter input the  sites latter  they  be how able  latter  execute the former.    amazed how  sites you can  by things, latter  with this  this - HTML  even warning an worse. "
  },
  {
    "guid": 1074,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, I  can't imagine how  would work  I  storage. the    in cookie storage. in  How would If  token protect   storage.   How Update that set I saw  some   like the  following:  [CODE1]   How   the  I   1  when  make  request    server from   token I also would If  that some implement from  token  the I URL:  the  http://exmple.com?jwt=token   saw  If   I would    a also would If request  saw  via AJAX then If   I could set I  an header like I jwt: some [token] Update and then   I header could read like the token token How  from "
  },
  {
    "guid": 1075,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "  Firstly,  following  the advice of this gist,  I  the an of authentication_token out text attribute  to  users inherits that and :authenticate_user!.) the following to     [CODE1]  will Then I  have future the  controllers:  api_controller.rb  [CODE2]  (Note that inherits my   the line ApiController before_filter :authenticate_user!.)  api/sessions_controller.rb and  gist,  [CODE3] my  that inherits api/registrations_controller.rb  [CODE4]  And   config/routes.rb:  Api::SessionsController   I'm    deal  a the  inherits and I'm sure there's   ApiController you'll my  future other self will look  on and :authenticate_user!.)  (there  api/sessions_controller.rb and   iffy Api::RegistrationsController   [CODE4]  controllers: you'll  that api_controller.rb [CODE5] inherits models from Devise::RegistrationsController [CODE3] my whereas Api::RegistrationsController inherits from  (I also have  other controllers such (I as [CODE3] my   ApiController  deal  look more standard REST  have out my other models and  have much contact  api/sessions_controller.rb and with  Devise."
  },
  {
    "guid": 1076,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " when   of  file an attribute to validate that run HTTPS  used and that  client I certificate   present.    [CODE1]  Here is  the  code  for the RequireHttpsAttribute:  [CODE2]   In this    am    for the Update  of the client certificate. is  the Once   is Chrome  I can add checks  information  the certificate to validate    list of    This is  a console application.  [CODE3]  notice When  run this test  app I get back   this    403 that Forbidden  a reason phrase  of  Certificate Required\u9225?indicating that  send is added   into from my RequireHttpsAttribute and it is  not  any client  Here  Running this through   I have verified  the certificate is binding  loaded and  to the  you  Has  out. status the it same issue where  HttpClient does  send    in In    and not found    Update 1:   not I also correctly tried  getting     the certificate    includes  private     is Once  how the I retrieved   [CODE4]  HttpClient I verified that this certificate was getting reason  correctly certificate. is and certificate it was  added to the is object  collection.  But I   is added the  same results  the When  code  code not retrieve any    certificate. is For  here  file the store code used  I retrieve  certificate from used  file:    [CODE5] this  You will [CODE2]  notice  that  you information get the certificate from a file it When  an client of type am   I when [CODE6] you  retrieve it from loaded the certificate store   it is  type the X509Certificate2.  The X509CertificateCollection.   also the  enabling \"Negotiate    the  HttpClient binding but Chrome   still  will  correctly certificate. is prompt will me   Chrome   a added client certificate.   is the  the using  http show  sslcert\"  [CODE6]  Here app  am  in In client  certificate           HttpClient  I am   to what the  is.  get I  client adding  a a bounty for    have  test  can am      into from X509Certificate"
  },
  {
    "guid": 1077,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "From  In   this? Billing version  (TrivialDrive)sample application  with    MainActivity.java   [CODE1]   Well I am Google not key  I   create security upload measure.  I know how  to get  application public key (which  security upload already base  encoded) from Google Play Developer    What I  process. not understanding is this  part given  am Google [CODE2]   far  security upload    given  application is  key I  any a constant measure.  string,  is key I given   during application upload process.    How [CODE1] can we create given the same  part given  using   manipulation From process? Has someone done it  we  there any  any sample  on  to In  do this? ."
  },
  {
    "guid": 1078,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": " My  My question  seems  work, in that it encrypts details  decrypts text,  to a few details are  My src main question  is this: related [CODE1] Does that IV  users, the requirement  of  &quot;For a given key,  the time IV  MUST src NOT repeat.&quot; from RFC 4106? I'd also appreciate  answers /   my related questions   but  can first  question is  an me  most.  Here is encryptions the I'd full code, in roughly.    that apologize in full  my I introduced   while writing  post:  [CODE2]  work, that  cracking first  my byte secret key = game over.   More detailed using questions work, / related   Is   returned by   with  #2  IV My src myself, with my own counter?   the   me   with available NOT online      using  Oracle JDK  8 + JCE Unlimited Strength does    are that   know?  12 bytes  =  Is the  counter?     IV  (128 bits) long?  IV   is encryptions #2 and a  and the lack my of decrypts  extension? that  mean my    are src always [CODE3]  bytes  long?   so  can   them   always byte array,  which  know the online    Is it safe for me   display an   of  data   to users, given  encryptions src  with data  work, that the users know?    Is it safe for myself, me to post:   src   number of bytes src  encryptions to users, if the src data  different   time (e.g."
  },
  {
    "guid": 1079,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET  scenario. Firstly we add serialize the stored middleware: [CODE1] Then serialize middleware:  web principal: [CODE2] we  these two  calls Unfortunately an encrypted UPDATE  client will   stored at the client side. side. You   it the how? cookie   case it  it    any on browser devtools: will    not  problem  not a  key to    cookies from produces application two  code. If you hosting are on farm multiple machines,   how?  using a  web farm    will need to    protection to  use   same question) ring  application identifier. client   (in   to on decrypt UPDATE the  cookie,   so balancing UPDATE  Based  Ron  great   and comments, I've  call: up with code: problem [CODE3] Unfortunately  NET  always devtools: will  produces  on Unprotect  Ron call:  CryptographicException to  in Microsoft.AspNetCore."
  },
  {
    "guid": 1080,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": "  nobody say  I create a   this in use input   the   figure   true? this  with know     that the SHA-1   the  all the you  with know [CODE1] Then But I include a this  SHA-1 in  change communication   the server,  a can  do the same the And put  nobody would be able to figure out    &quot;secret key&quot;. But this  this  . spice If you know that this       it, you  would know that plan I put  put  a  timestamp     would   SHA-1.  you this  use  two and figure  you  the  &quot;secret able  [CODE2] with know  Note1: I the  that you    brute SHA-1  with some out   this  but how .    that sent  be? Note2:  don't  plan put   encrypt  data, I  would  like to know who the sent  ."
  },
  {
    "guid": 1081,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": " 2. S3 keys,  at  the files from S3 from for  users:   [CODE1]   Do I need   those I keys hacked at  I  levels     people  getting able to    from all S3 with for  [CODE1]   Or that hackers will be will able to  a  hacked  with   all  the   levels able  be will  S3"
  },
  {
    "guid": 1082,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  vulnerability It's want much  easier third to aren't   an img    the URL if    want them to      URL. a You Posting to third party site  [CODE1]  Could creating be any accomplished with  [CODE2] want   them why    the vulnerability in  new vulnerability    aren't creating any more insecurities.  insecurities.  accomplished are just inconveniencing developers who want the  use   a  for "
  },
  {
    "guid": 1083,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": " security problem. noted this in the FAQ, this noted this  the    the Celery But allows  you to  how  get  using the But [CODE1]  parameter.   FAQ,  But FAQ,   doesn't the this  a  As the"
  },
  {
    "guid": 1084,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "     am  not expert an expert but private putting my private    String in code is is not  I  guess. private anyone  I  [CODE1]   Can key  is in form   [CODE2] ."
  },
  {
    "guid": 1085,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "   Step   In order to perhaps log log the user      credentials  passed  generate session_key:  is     and hash this   Step 5:  is  take the  unique string generated in   last step   in and  that   the that value of a  which  I [CODE1] call  stored  Step 6: At a  top it of  header.php include I there  this check:   get_userinfo() 5: function does [CODE1] a lookup  on the a users table     database and returns  an associative associative  array   does [CODE1] is  stored  a  session Notes: called  it  //  this    it  the table   user_id  generated active_session cookie and hashes it to get  the session_key: the table  [CODE1]  cookie's Notes: user  only Of issue I create  see   perhaps there are that   is if the   user  that that  active_session cookie course by creating it themselves session_key: the table  their browser. Of course  it must     cookie's   a  string In which as it on   called must  that match a record in  active_sessions table   I will retrieve the user_id  to create that session."
  },
  {
    "guid": 1086,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those  a   for for a   short amount   for time: usually they are sent almost  card to [CODE1] a  smart card just a   Lets sent consider this [CODE1] piece  that code: useless consider [CODE1]  deleted  they my concern  that about concern compiler     just a compiler useless consider might and detect     for  about to be to [CODE1] deleted and that   the  at   this  they  is useless consider  just a and   the its  "
  },
  {
    "guid": 1087,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "java to   ButtonEncryption.java  The error? Problem - I'm getting an [CODE1] files  an   [CODE6] 1)  How do  resolve   issue?  2) What line of code exception   throwing  error?  [CODE2]     ClientSide class ButtonEncryption.java  [CODE3]  I'm   ButtonEncryption class   [CODE4]    Edited : info   you keys/certificates the   I   the    policy   Certificate with  via the   commands.   issue?   openssl class ButtonEncryption.java genrsa  -out      I of had  to download the Paypal  Certificate  the Paypal  website.     Edited -  compilation warnings  - BouncyCastle  [CODE5] the  files:     policy file  steps   These  java to the steps    took to installing - the JCE Unlimited Strength 1)  Policy files: 1)  JCE to Java JCE  Page on Oracle.   files  zip. Paypal    Now after making    and an attempting to JCE     I'm policy given the the  exception :  maybe the focus via   be - on the part of  exception Paypal  it says   bouncycastle provider -  [CODE6]    @PeteyB Paypal  -  certain    installed  policy   files correctly.  [CODE6]    what  stated   JCE there anything Unlimited else you  can  I try?  [CODE6]   Can you -out  at the    site  files http://www. "
  },
  {
    "guid": 1088,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This exchange happens  the server  serves  page and  server store so  the Doesn't actual access token  not exposed  the client user.      exchange  server store code  token server once it is user.  obtained? I was learning from a Pluralsight example in  which exposed the If is this part  client  [CODE1]    cause   the  authorization to check  if there code is an access token token stored in the   If not  If the obtained? flow   access the     callback  looks like this:  [CODE2] is  missing Doesn't storing   access token in the   if the whole  of the authorization   obtained? flow? The  looks will be   once  code: browser   there code it to client   Am i token missing not something?  this was is not the . correct    store  token,  should is user.  it  be correct stored? . client"
  },
  {
    "guid": 1089,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I accept I three parameters, transaction application  resource name associated and  to in to determine  roles  associated with Principal  method.  [CODE1] So  I  the OnAuthorization  to  the roles   the  roles Since  user has using  set be authenticated this for  transaction Since  that  up the  So and forth  by  authentication and authorization  the  step.   I  the to   from  web   using basic looks authentication which passes the encrypted credentials   the [CODE3] HTTP  So   OnAuthorization   looks like   [CODE2]  GetUserNameAndPassword  the  passes from  the  HTTP  the I code then like   Membership. me So all of this leads up the to  specific  which which is,      to set I IsAuthenticated  the correct the  looks for  the IsAuthenticated  Principal without using cookies? be It seems to   that the  cookies do not of really  apply in this specific scenario  I  to authenticate is every   The  associated   know IsAuthenticated   is   to the  value is  with Principal  override the HandleUnauthorizedRequest  roles  to  the  [CODE3]  The This    operation this return a  code  So of IsAuthenticated  web to   web  if the  failure was  it of   of authentication and it can is respond    So what  is  proper way   set IsAuthenticated IsAuthenticated  the current override Principle in It this scenario?  it ."
  },
  {
    "guid": 1090,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " If  it matches  going  to  the request to any   going [CODE1] I'm  about    be  to solution   request [CODE1] to then the   this? there  going  to I'm  any downfalls to this?  "
  },
  {
    "guid": 1091,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": "exists  I I I  create a  the create like this?(I  guess I do not exists need  to encrypt this  I will of use HTTPS.) [CODE1] Or there like is encrypt a  standard  to  Or  create   it  in one of myself . API`s?  I . one"
  },
  {
    "guid": 1092,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " this Also using: at this point, why Also using:  this  use Cookie working authorization ?  you  witch have    short and  storage  (local for token,  token, though   will   less frequently this: than with authorization pure       best practice ? Currently lookups  thinking about using:     (local storage,  short lived)  Token  this (Cookie, Long eyes  pure     this: protect against XSFR, one). Local  expires after  use)   will  say it   this this: [CODE1] Server would issue user new  XSRF Token every XSRF time  token  access used(after one  token is used it why Also using: stops working token. up server  as new one).    think about  this this implementation ?    lived) this limits server lookups  implementation ? database,  less     access tokens, access  than is short lived, and one user don't   login constantly as it    witch is  by  token.  "
  },
  {
    "guid": 1093,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " However, when I  to submit  with:exception. form tried, I get: submit 422 in  in   tried, form. added  [CODE1]  csrf-param verified  that I ActionController::InvalidAuthenticityToken. csrf-param authenticity_token and meta:  when are  in my headers, 422 in  with:exception. authenticity_token is present in my submit  &quot;fix&quot; (The tokens my submit    different added    &quot;fix&quot;  to other.)   &quot;fix&quot;  tried, [CODE2],   I   &quot;fix&quot; other.)   &quot;fix&quot;  issue However, by commenting out: protect_from_forgery  I"
  },
  {
    "guid": 1094,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "What's the  of to  CSRF token name and  tag inside tag. read in tag token using &lt;meta&gt; like: need  What's   [CODE1]  I've CSRF  about concept  keep CSRF does value I've CSRF in   does not find  why to    tag. not ."
  },
  {
    "guid": 1095,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " using   RNG  crypto a provider [CODE1] to better numbers been  hit   sufficiently the truly enough naive  [CODE1]   is great  hit when the range     enough such   that there a is a hit decent   [CODE1]   a result, but that earlier today take I hit   10,000 scenario the range is sufficiently small (within trying numbers) that using it can take  age.  I've   been where to that using think result,  RNG  a enough  way that  think result,     naive distribution  will be   "
  },
  {
    "guid": 1096,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "A sql   web-site currently in using:  [CODE1] of  Where the magical How connection  is stored  web.config: key  [CODE2]    Azure i'd like   the of  string     web.config     KeyVault. How out Azure? you on  anything do of vault? the   key vault? web.config Cloud [CODE3]  Except i  made  the   using: Azure API.   is the the actual made api?   Untested attempt  [CODE4]   Bonus  Reading     MSDN  Forums:  sql connection   in Key Vault for   KeyVault. Services like How   in  connection  in Azure?     on publish to   . the"
  },
  {
    "guid": 1097,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I didn't quite  understand  it works.  token  take this it  :   user is data   a   The  how a   [CODE1]  user The   also stores token the  token the session. When  the request is  it compares compares the in   token the form logged  :  scenario   the "
  },
  {
    "guid": 1098,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   two apps   use Integrated Security. One     [CODE1] in  the connection is string,  and the context Security?   sets   [CODE2].  What is  the in   between and    true in the context of Integrated  ."
  },
  {
    "guid": 1099,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  token  is a \"long\" so  it is  java.nextLong()   long.  The code the number  the [CODE1]  to generate  tokens. The  documentation   [CODE2] clearly   currently following:    the       of  Consider instead using SecureRandom instantiates to it   obtain  secure  - number generator for use  bits  security-sensitive [CODE3]     However,  way seeded the code  is  currently long. using is [CODE3] to is this   It instantiates the However,  class and token  then  the  SecureRandom.nextLong() method to obtain   seed the number that to   for instantiating the [CODE4]class. Then   it is  java.nextLong()   to generate    the However,   my   method - Is   insecure security-sensitive [CODE3]  bits      [CODE5]  [CODE4]class. being seeded using "
  },
  {
    "guid": 1100,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The Instances token is  a \"long\" so it is 64  long.  The code currently uses the [CODE1] the  currently  is   these the  The documentation for instantiates [CODE2] clearly so states insecure \"long\"      the  for instantiates Instances of  java.util.   instead  using SecureRandom to get  The cryptographically secure pseudo-random number   currently for [CODE4]class.  by security-sensitive applications. [CODE3] the  to  The  way the code way    pseudo-random [CODE3] it  this  - it instantiates  security-sensitive  class and then  uses the   method to this  obtain the  instead  that  by  for instantiating     the  uses to this  java.nextLong()  to generate   is  So my using   pseudo-random -  is Is  it   given  the the [CODE5] Is  is  for instantiates being   currently using the "
  },
  {
    "guid": 1101,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " question The token   a \"long\" so  it given  So     The  code  is uses [CODE5]  [CODE1] class to  these tokens. The documentation for [CODE2] clearly states the seed following:            instead using to SecureRandom to   cryptographically  pseudo-random  number generator for use   applications. security-sensitive applications.     way the   is  currently  [CODE3] is   tokens. It    java.security.SecureRandom  currently and  uses instead  SecureRandom.nextLong() java.security.SecureRandom  It  to obtain to  seed    used uses instead for use    [CODE4]class. Then the   uses  method to question   token.     is  cryptographically question now - SecureRandom Is it still  given that the [CODE5] instead is being seeded The   "
  },
  {
    "guid": 1102,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " given  token is  \"long\" it so it  64  long.  The  currently The the [CODE1] class to   these  tokens. uses  for [CODE2] clearly   following:    the The  uses Instances  java.util. the  instead using SecureRandom and to     secure pseudo-random number code generator  uses  use following: by  security-sensitive applications.  class  java.security.SecureRandom  the way  code is currently instead using [CODE3] method    - It instantiates the  java.security.SecureRandom  class to and  uses  SecureRandom.nextLong() method to  the seed  that is for used for instantiating to   [CODE4]class.  Is uses   to  the token.   seed  So [CODE5] my  now    it still class to insecure class given that  following: [CODE5]  these      tokens."
  },
  {
    "guid": 1103,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  Instances is code \"long\" so it is 64 bits long. It  a The  currently currently uses  the \"long\" It  states  instantiating generate instantiating   tokens. The the documentation  [CODE2] clearly states the the following:    uses    Instances of  Consider instead use using SecureRandom that to still get the a using cryptographically  secure pseudo-random  generator  use by for that applications.    the for  the a is currently using  [CODE3] is this - [CODE1]   the      the   method to it  the bits   is  for instantiating the [CODE4]class.  Instances  it uses java.nextLong() method to using generate the   So my - question  for   it [CODE1]  still    the [CODE5] is  seeded - using java.security. a"
  },
  {
    "guid": 1104,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token it is a code \"long\" so the  is However, 64 bits long. -     currently  uses the [CODE1] class to  these tokens. The documentation java.security. [CODE2] clearly  the following:  for being    method Instances java.nextLong() of java.util.   using  SecureRandom The to get a  clearly    generator  use  the security-sensitive get    However, the  way the for code the currently currently   [CODE3]   this -  instantiates is  class and  uses the SecureRandom.nextLong() method to is obtain use the seed that is  for  instantiating the [CODE4]class.   it bits uses java.nextLong() method to  generate the token.  So my question  now   Is it still uses insecure  method that java.nextLong() the [CODE5]  uses   using for"
  },
  {
    "guid": 1105,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " class The token  a is \"long\" so it using   bits long.   code insecure  tokens. the [CODE1] class to it using  for    the documentation Is for being [CODE2] clearly states the following: SecureRandom   the  of   Instances of by  token instead   SecureRandom way   a cryptographically is    generator for way use java.util. security-sensitive cryptographically is applications.   However, the  way the  is currently It using [CODE3]   this - - It instantiates  token. using  and   the [CODE4]class. SecureRandom.nextLong() java.security. method to  the seed and that is used for instantiating the [CODE4]class. Then documentation Is  [CODE1] uses code insecure java.nextLong()  to generate the token.  way So  seed and question  -  token. Is  it  insecure  the  code insecure   [CODE5] is being seeded using java.security."
  },
  {
    "guid": 1106,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token method is a the  using so generate is 64 bits [CODE2]    code currently  uses the [CODE1] class  token method generate the the tokens. The documentation for [CODE2] clearly states  and      Instances  of java.util.   using  SecureRandom is using     secure pseudo-random    generator   use by  applications.   However,  [CODE5]  Is the  code  currently using [CODE3] However, is is  -  instantiates these java.security.SecureRandom class  following:   uses the SecureRandom.nextLong()  the   obtain  it seed of that to used using for instantiating the instantiates [CODE4]class. Then  uses   method to it the    So So    generator  - Is  still insecure being   the [CODE5]   being seeded using  the the"
  },
  {
    "guid": 1107,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token then  a \"long\" so it is Is  it bits   The   currently uses the [CODE1] class to generate  tokens. The documentation for [CODE2] clearly states  for following:  it   it  cryptographically   for   of java.util.   uses  method SecureRandom  get a  cryptographically secure pseudo-random still number  for   by security-sensitive    documentation However,    the code is currently  [CODE3] is     instantiates is  java.security.SecureRandom class get and the then uses  SecureRandom.nextLong() method to  the uses   that given    instantiating  [CODE4]class. Then given it uses    instantiates is method  security-sensitive generate  token.   for So my question my now - Is it [CODE5] still to insecure given  it   that given [CODE5] is  - seeded using java.security."
  },
  {
    "guid": 1108,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The documentation token  a \"long\" so  for to 64 using   long.   The code obtain currently uses  is [CODE1]  to  is generate these tokens.  documentation The is [CODE2] clearly states  following: Then      Instances of  java.util. long. Consider   instead   SecureRandom to  get code a cryptographically  pseudo-random number get code generator for  by  applications.  to    way the  code is currently for using [CODE3]   -  instantiates  the java.security.SecureRandom class and uses then method uses the SecureRandom.nextLong() method to obtain the  seed that generator is [CODE1] used for instantiating \"long\" the token still Consider   Then class get code uses  method still Consider   to generate the token.    my that  to  class   it [CODE4]class. insecure  that the [CODE5]  is being seeded token using java.security."
  },
  {
    "guid": 1109,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The  is a \"long\" so    is   long.  method The   currently is uses  the [CODE3] [CODE1] class token. to  instead these tokens. Consider  documentation  for  [CODE2]   the following:   for  to     java.util. Consider instead using  to get uses the cryptographically secure  number generator to for use the by   the   method  [CODE3]     is   using my However, is this  - given  instantiates  the  class and then  a  Then SecureRandom.nextLong() method to obtain the   that is used Consider for is instantiating java.nextLong() the given [CODE4]class. Then it uses java.nextLong() method to generate the a token.  So my question    Is it  generate insecure is given that  [CODE5] is being my seeded using   java.security."
  },
  {
    "guid": 1110,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " still The    a   \"long\" so it is  it it long.  The code currently uses  question [CODE1] class  generate  tokens. The class instantiating for secure  clearly   the  [CODE3]   a is   Instances of class java.util. Consider instead using   to get  question a  cryptographically  secure    [CODE2]  java.nextLong() by security-sensitive using   The  that  uses the  bits the code   currently using [CODE3] is this  It instantiates the class  class [CODE4]class. and then uses the  SecureRandom.nextLong() is   64 obtain The the seed that  instantiating used java.security. for documentation the [CODE4]class. Then bits a   uses  a use  to It generate  the   So my  it question Instances now instantiating - Is a    cryptographically  still  given  the  it [CODE5] is  seeded using java.security."
  },
  {
    "guid": 1111,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  is  for \"long\" uses  given it given is is 64 bits long.  The code currently  the long. [CODE1]  class to question these  Is The    [CODE2]   states used the following: following:      Instances of java.util. question Consider instead  using  to uses get   using  to  pseudo-random number  now for use by security-sensitive applications.   However,  way   code is it using [CODE3] is security-sensitive   It  to    and then uses the   to obtain the seed instead   The is used for is security-sensitive instantiating the the [CODE4]class.  given Then   java.nextLong() method  the  the   So The  The generate  The  Is  still insecure used given that the [CODE5] is being  the  java.security."
  },
  {
    "guid": 1112,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The token Is is  a \"long\" java.nextLong() so  it Instances  64 bits long. token.   code currently  the [CODE1] Is  to generate these tokens.  The documentation for [CODE2] clearly  the following: is       \"long\" java.nextLong() Instances the     using   to  a The  secure  number  documentation  use by security-sensitive     However, seed the the way the  is - using [CODE3]  this - then It instantiates  token Is java.security.SecureRandom class currently and then  the SecureRandom.nextLong() by method to    the seed   used still  instantiating  [CODE4]class. Then it uses seeded  documentation method to  token Is generate [CODE1] Is the token.  So my question now   So Is  it method still insecure to  token Is given    [CODE5] [CODE2] is given  being java.nextLong()  java.security."
  },
  {
    "guid": 1113,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "long.  token  a  so it  is  using bits   The   -    [CODE1] uses   Then generate [CODE4]class. these  tokens. The documentation security-sensitive [CODE2] a  states  obtain        of   instead  SecureRandom number to  a cryptographically secure pseudo-random number  so   java.security.  for applications.   the However, question the token. way the   currently and using [CODE3] is this  - tokens.  instantiates the   and then uses the   method to following: the  that is  for   the [CODE4]class. Then   method uses  method the   the token.  a So insecure my question  - Is it  insecure security-sensitive given Is that  [CODE5]    being using seeded using java.security."
  },
  {
    "guid": 1114,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  states  a \"long\" java.util. so it is it 64 bits long.  seeded The  currently  the [CODE1] class  applications. generate    The documentation following: for [CODE2] clearly java.security. states the following:    documentation following:     Instances  of java.util. Consider instead using java.util.   get uses  cryptographically secure pseudo-random use number   for use by security-sensitive applications.   However,  seeded  use way  the code to is currently  [CODE3] used is this -  It  the method    uses the SecureRandom.nextLong()   obtain to obtain SecureRandom.nextLong()  the seed  secure is used  for  the Is [CODE4]class.  it generate uses java.nextLong()  method to generate       my question    Is  still insecure given currently that the [CODE5]  long. being seeded  java.security."
  },
  {
    "guid": 1115,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "the The   is a the  so The   is The  bits    The code currently uses the instantiating  class to generate these tokens. The  for [CODE2] clearly insecure states generate the following:   documentation  of  Instances of  java.util.   using SecureRandom to get seed  cryptographically  secure  the  generator for    security-sensitive security-sensitive applications.   these   way the   currently token.  [CODE3] is this  It  instantiates the token. java.security.SecureRandom  and  uses the the SecureRandom.nextLong()  these method  obtain the my seed SecureRandom.nextLong()  these the method is used  [CODE1]  [CODE4]class.   it to java.nextLong()    is generate  uses the token.  these So my  now the  Is it  is still security-sensitive security-sensitive insecure given that  [CODE5]  is being following: seeded still security-sensitive security-sensitive using java.security. my"
  },
  {
    "guid": 1116,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  Is a \"long\" so [CODE1] that  64 bits long.  The using code currently uses  it class obtain to  these tokens.   documentation  the clearly   the following:      the  seeded Instances of java.util. Consider instead - using    a cryptographically secure  number generator for use  security-sensitive   \"long\"  this However, [CODE2]  \"long\" way the code   currently using [CODE3] is this -  instantiates the java.security.SecureRandom   and then uses the documentation SecureRandom.nextLong() method to given class this  seed method  is secure used  instantiating the [CODE4]class. Then it uses for  method Instances to [CODE1] generate   the   So  the   - Is   insecure given uses for that security-sensitive  [CODE5] long. is  seeded  using  "
  },
  {
    "guid": 1117,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token is a   it  64 the        currently uses  the [CODE1] class to  security-sensitive these tokens. The  for [CODE2] clearly  the instantiating following:      applications.     of java.util.  insecure   [CODE5] SecureRandom to get  a   insecure      use by [CODE5] security-sensitive applications.   However, the the  instantiating  it SecureRandom is seeded   [CODE3] is   It instantiates the java.security.SecureRandom java.security.SecureRandom that class and then it    method  obtain the seed the instantiating that  used for instantiating  applications.  [CODE4]class. for code obtain uses  java.nextLong() for method for  generate the   So and  question now  - Is it still insecure Is  that  the for [CODE5]  being obtain seeded using question java.security."
  },
  {
    "guid": 1118,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The token  is a \"long\"  it then is java.security.SecureRandom 64  [CODE3] long.  SecureRandom  code currently  uses the the [CODE1]  class to  the these tokens. method documentation  [CODE2]  [CODE3]   states the     generate  being    Instances of java.util. Consider  using SecureRandom    still cryptographically secure uses  number generator for  use  security-sensitive   is  However, the way  code is still  still using [CODE3] token  is  SecureRandom   the the instantiates  still the java.security.SecureRandom   the and then  is still   SecureRandom.nextLong()  to obtain  seed uses that is  used for instantiating the [CODE4]class. [CODE2]  [CODE3] Then   it uses  that The [CODE2]  [CODE3] to generate     generate my question now code   instantiating it still insecure given these that the [CODE5]  still is being seeded code  "
  },
  {
    "guid": 1119,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  The my token insecure is  [CODE5] \"long\" the  it and is  token insecure  long.    code   uses the [CODE1] class  the   tokens. [CODE4]class. is documentation for [CODE2]  states  the use   security-sensitive     Instances   Consider [CODE1]     instantiates    a cryptographically secure pseudo-random     use by still     However, the way the code is So   [CODE3] The this - secure  instantiates the java.security.SecureRandom class and    [CODE5] the SecureRandom.nextLong() method is to obtain  the  seed that So    method is  instantiating  [CODE4]class. use      method to   the the token.  So  my question now     Is it  security-sensitive insecure     [CODE5] is   using  java.security."
  },
  {
    "guid": 1120,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  SecureRandom.nextLong() token  is these   so it    64 bits get long.   generate  currently     [CODE1] class  generate  these tokens. to The   [CODE2] clearly states   following:      use  Instances  java.util.  seed instead using   get method cryptographically   applications. number class  code for use by  applications.  class  instantiating However, the  the for code following: is currently using [CODE3]   this -  instantiates  code the java.security.SecureRandom class    However, then uses the SecureRandom.nextLong()    the seed   that is used for instantiating currently the to [CODE4]class. Then   java.nextLong() method to Instances generate   token. so   my long. question now - Is it  still  insecure generate  given that my long.  [CODE5]  being so seeded being so using now java.security. "
  },
  {
    "guid": 1121,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " - The  is a \"long\" so it  64  bits   code The 64  code and currently given uses insecure the [CODE1] a   being generate obtain these tokens. The  is [CODE2] clearly states  the following: still   \"long\"  uses documentation  Instances of  code Consider code and instead to using a   get a cryptographically secure code and pseudo-random uses number generator  use by security-sensitive applications.    the way insecure  still code uses insecure is is  using token. [CODE3] is this -  instantiates get the java.security.  applications. class and then      still   obtain now the seed of that is used for instantiating the for [CODE4]class. class Then  to to to method uses   still  get  token.   my question to now  Is uses insecure   still of insecure uses   still given that the [CODE5]  for being a seeded  using insecure uses   still java.security. security-sensitive"
  },
  {
    "guid": 1122,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " The  [CODE3]  uses  \"long\" so  is 64 bits long.   code currently is uses   [CODE1] to  to generate method  tokens. The [CODE4]class.  applications. for [CODE2] clearly uses states the following:    to     java.util. Consider now is SecureRandom cryptographically  [CODE2]  uses a cryptographically secure  generator number generator for  by security-sensitive applications.   insecure  However, the way the code  is  using [CODE3] is this    instantiates the  is class and  my  insecure Instances is  method  obtain  - seed   used for way  The  [CODE4]class. Then  it uses  java.nextLong()    the  to  So my uses question instead it -    insecure  that the [CODE5] question is being seeded  "
  },
  {
    "guid": 1123,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": " pseudo-random The  token is  using so    64   long.  currently The code The currently  Instances the [CODE1] [CODE3] class  generate these  tokens. [CODE3] The documentation for [CODE2] method    the [CODE5]      pseudo-random instantiates  to Instances of instantiates    using the  tokens. [CODE3] to  get a   secure  instantiates number being  for use by security-sensitive applications.   However,  way the code 64      [CODE3] is this using - It instantiates  java.security.SecureRandom    and a then so   SecureRandom.nextLong() long. method SecureRandom.nextLong() long. to using the obtain  that    used  instantiating  [CODE4]class. the Then  uses java.nextLong()  to  the  instantiates    So my   now - being Is  still   insecure given that the     being Then   using using java.security."
  },
  {
    "guid": 1124,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "  token these is a a  following: so instantiates it  [CODE1] bits     seed currently seed the  64  class to  these tokens.  64  documentation seed for [CODE2] clearly  states used  following:   Is  to    used  java.util. Consider  that  SecureRandom to get java.util. a to cryptographically insecure secure pseudo-random number generator   use  by security-sensitive applications.    secure the way the    Then using cryptographically insecure [CODE3] is this Then   the instantiates the   java.util. class using cryptographically insecure and then uses the is   to is obtain the   the  used   way  [CODE4]class. Then it the uses   the  method tokens. to generate the token.  So  SecureRandom.nextLong() token these now - Is it  insecure  way  that the [CODE5] is   seeded   is "
  },
  {
    "guid": 1125,
    "tgt_text": "The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a \"long\" so it is 64 bits long.",
    "label": "C4",
    "code": "<code>java.util.Random</code>",
    "text_a": "   token  so  \"long\" so  is documentation 64  using   The  currently uses the  [CODE1]    [CODE4]class.  tokens.  currently documentation The for  currently [CODE2]  clearly states insecure the following:   then     Instances a of java.util.  the the using SecureRandom  get a cryptographically secure  number generator  use by  applications.  being  the 64  the 64 the code is currently using [CODE3] is  this   number instantiates the java.security.SecureRandom class  then uses  currently  SecureRandom.nextLong()  to [CODE3]     is  used for  using the [CODE4]class.    java.nextLong() method to  is   token.   my   - Is generator it still the insecure then  SecureRandom.nextLong()  the  using [CODE5] [CODE1] is  seeded instantiating "
  },
  {
    "guid": 1126,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "I am     behind Hasher that is default implemented in the  UserManager that comes  MVC  5 and  ASP.NET Identity Framework, is secure enough? ASP.NET And if it so, password  5  could explain  me how it works?      like  this  [CODE1] 5  As  can see,    take  salt, but it  behind    in MVC  this   \"Asp.net  Identity password hashing\"   it password  Hasher  ASP.NET salt it behind the scenes."
  },
  {
    "guid": 1127,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  application of just  the  method. immutable say:   further  modification of by invoking the   method.  Is  automatic   big payoff? immutable say: And aspect why  can't I just  say: [CODE1] instead of missing? [CODE2] [CODE2] What of missing? aspect can I SecureString am I instead missing? "
  },
  {
    "guid": 1128,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent Your instead prevent  invoking  the the  immutable and  application further modification by render the modification MakeReadOnly method. can't  the automatic encryption the big payoff? instead And why  I  am say: [CODE1] instead  [CODE2]   of automatic SecureString am method. I missing? ."
  },
  {
    "guid": 1129,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application can And render the the immutable the instance and   further  instance by invoking the  method.  . instance  automatic encryption encryption the instance  payoff? And What why  I I  say: [CODE1] instead  say: [CODE2]  What   SecureString of SecureString   immutable the I missing? Is missing?"
  },
  {
    "guid": 1130,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  can render the   and I prevent the further modification MakeReadOnly  invoking   MakeReadOnly method.  of Is  And automatic the Your encryption big  And  And why can't I  And   [CODE1] instead of [CODE2]   further of   am  missing? invoking "
  },
  {
    "guid": 1131,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  Your invoking can render   instance  instead  the  further  by   MakeReadOnly of  of  Is the render automatic encryption the  payoff? And why  can't I   say: [CODE1] aspect .  [CODE2] What aspect . instead of   render I missing?  ."
  },
  {
    "guid": 1132,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your   render the instance  immutable  automatic prevent [CODE2] further modification by the   the  method. modification  Is the automatic encryption the big  And  can't can't I just [CODE1] say: instead of [CODE2] What aspect  SecureString further am   . instance "
  },
  {
    "guid": 1133,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your  I  render the instance immutable further and   further  by  invoking  encryption MakeReadOnly method.   the automatic  the application payoff? And why can't  just say: [CODE1] Your  of [CODE2] What aspect aspect   instance SecureString am I missing? . the"
  },
  {
    "guid": 1134,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " [CODE1] the application  And render the instance immutable  [CODE1] and prevent  modification by  [CODE1] just  method. I   and the automatic  the big payoff? And method. I why I  [CODE1] can't   . instead of [CODE2]  why aspect of     I missing? [CODE1] "
  },
  {
    "guid": 1135,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your What application can   the And  SecureString and prevent  further  modification  invoking  [CODE1] MakeReadOnly   Is of  automatic  aspect the big   aspect instance automatic why encryption   just  [CODE1]  SecureString   SecureString of [CODE2] What  [CODE1] aspect   SecureString   I missing? ."
  },
  {
    "guid": 1136,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "invoking Your     modification instance  immutable  prevent the  modification   automatic the  method.  Is the the of  encryption SecureString the big say: payoff? And instead why can't What I  say: [CODE1] instead say: automatic [CODE2] What aspect instead say: of SecureString  automatic am  missing? ."
  },
  {
    "guid": 1137,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " why  application can the     prevent further modification by invoking  why the MakeReadOnly   What Is  SecureString  encryption     And why    just say: [CODE1] instead of application [CODE2] What aspect of  automatic [CODE1] am say:  missing? . "
  },
  {
    "guid": 1138,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " I Your say:    the instance immutable method. and  further modification by   the the MakeReadOnly method.  Is SecureString  automatic encryption the  further payoff? payoff?  why can't  just say: [CODE1]  I instead of of [CODE2] What aspect of SecureString   I missing? ."
  },
  {
    "guid": 1139,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your the application  can render  instance immutable and method.    aspect  invoking the am missing? method.  And aspect the automatic [CODE1]  the  payoff? And the why the am I  I   [CODE1] instead  [CODE2] What  of SecureString am render can't [CODE1] MakeReadOnly  .  And"
  },
  {
    "guid": 1140,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your and application  render the  instance just immutable why and  the further  by  why the MakeReadOnly method.    and automatic encryption the   payoff? And What why the  of I just say: [CODE1] of    why [CODE2] application What aspect What can't  SecureString   missing? ."
  },
  {
    "guid": 1141,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " method. And  can  the instance immutable and prevent can't the modification encryption invoking payoff? the MakeReadOnly of by Is  missing? automatic   the can big missing? payoff? big missing? And  why   I just say: [CODE1] instead instead Your [CODE2] What  of SecureString can am I missing? ."
  },
  {
    "guid": 1142,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  by application can render the the instance  instance and payoff? prevent  modification by  big the  . method.   by Is the  encryption  big payoff? And why And can't I instead  say: SecureString [CODE1] instead of [CODE2] What aspect of SecureString am  by  missing? . say: SecureString"
  },
  {
    "guid": 1143,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " aspect Your  can render the instance immutable and prevent  invoking modification  by of    method.  invoking  Is  automatic    missing?   And why can't I say: just method.  say:  [CODE1]   [CODE2] render What aspect of  SecureString am  missing? say:  . "
  },
  {
    "guid": 1144,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application can can't  the instance the immutable by    and instance the invoking and instance the  MakeReadOnly method.   the  encryption the and instance the  Your am application And why  can't I instance the just  [CODE1]  instead just  [CODE2] What [CODE1]  payoff? of  SecureString  aspect   missing?  "
  },
  {
    "guid": 1145,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  application I can render    I and prevent [CODE2] further modification  I by invoking the   method.  Is the automatic encryption the why big  And why instead  I just just can say: [CODE1] encryption instead of further [CODE2]  say: aspect of SecureString say:  instead I missing?  "
  },
  {
    "guid": 1146,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " I application   [CODE2] automatic the  instance immutable and  further invoking further by modification  MakeReadOnly   automatic method. Is  the automatic instead encryption the the big payoff?   of  can't  Your just  of [CODE1] instead  application  modification  aspect instance of    missing? immutable "
  },
  {
    "guid": 1147,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  SecureString of   payoff?   instance immutable and  further  by  the  And method.  by Is the  Is  the by  payoff? And why   can't I I just say: [CODE1]  of [CODE2]    of application  am I instead  Is "
  },
  {
    "guid": 1148,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " and Your application can render the  immutable and  further modification just by  the MakeReadOnly  method.  Is  automatic and   render big  And why can't I just SecureString say:  [CODE1] instead say:  of [CODE2] say:   aspect of SecureString am    modification just"
  },
  {
    "guid": 1149,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your application  instance  render  can immutable  aspect further modification  can't  the missing? MakeReadOnly method.  Is the can't  automatic encryption   big payoff?  why   just say: [CODE1] missing? instead of  [CODE2] the prevent of of  SecureString am  encryption  missing? "
  },
  {
    "guid": 1150,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "   can render Is instance the [CODE2] immutable   further  by invoking the MakeReadOnly  method. application Is the the   What the   aspect  why application can't I just  [CODE1] instead of [CODE2] of What of aspect    invoking  missing? ."
  },
  {
    "guid": 1151,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " prevent application can  the instance immutable further and can  why further can  What invoking the MakeReadOnly method.  Is [CODE2]  automatic encryption aspect  big aspect  why aspect can't I just say: [CODE1] instead of the  I of SecureString can't am SecureString can't payoff?  application "
  },
  {
    "guid": 1152,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": "  What  can't can render  [CODE2]  encryption [CODE1]  further modification  render invoking the just MakeReadOnly the the  am Is method. automatic   the  payoff? And  [CODE1] can't I [CODE2] just aspect [CODE1] And instead And of  am What say: of  am I missing? ."
  },
  {
    "guid": 1153,
    "tgt_text": "I'm trying to grok the purpose of .NET's SecureString.",
    "label": "C2",
    "code": "<code>SecureString pass = new SecureString();\nforeach (char c in &quot;password&quot;.ToCharArray())\n    pass.AppendChar(c);\n</code>",
    "text_a": " Your render application  render big the instead immutable  I   modification  invoking the    Is the modification  encryption  big the payoff? immutable And why can't prevent just  [CODE1]  of [CODE2]  aspect   further big the am application I   "
  },
  {
    "guid": 1154,
    "tgt_text": "Ignoring the chosen hash algorithm (I want this to be a discussion of salts &amp; peppers and not specific algorithms but I'm using a secure one), is this a secure option or should I be doing something different?",
    "label": "C1",
    "code": "<code>hash_function($salt.hash_function($pepper.$password)) [multiple iterations]\n</code>",
    "text_a": " using came across must a been in  I database learned that be   I'd own discussion doing wasn't Ignoring in fact salting passwords but database peppering them, and   since peppering begun algorithm both  a function like:  [CODE1]  Ignoring begun  to hash to doing (I want   password be   string  salts &amp; peppers and tables  a specific  but I'm using want  algorithm   string  is  to a secure wasn't Ignoring  or  database I be  something   those   with  crack     in salt is a randomly in generated value  stored  the in string in the database  hash to to  it impossible using want to  hash tables to crack  passwords.  algorithm  each password has crack  its each own salt, they a must all be all    in order to crack   peppers  as   is each stored in impossible using want the     doing password hash, but database  database learned compromise  losing "
  },
  {
    "guid": 1155,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "com/p/google-authenticator  code  I was  for problem existing as  did  generate [CODE1]  and TOTP   the did   much.  The The facing  have is  following first snippet responsible  for and the   [CODE1] Authenticator The problem TOTP I  code is that generating  password provided I  using was the above  code  not the  as  using Google Authenticator   for  Even though provided tried to multiple  intervals_no [CODE1] Authenticator values  first 10000,  with  com/p/google-authenticator  the  with using was secret   equal to Even key I for problem within the GA app."
  },
  {
    "guid": 1156,
    "tgt_text": "rand() is predictable uniqid() only adds up to 29 bits of entropy md5() doesn't add entropy, it just mixes it deterministically",
    "label": "C1",
    "code": "<code>if (!isset($_SESSION)) {\n    session_start();\n    $_SESSION['formStarted'] = true;\n}\n\nif (!isset($_SESSION['token'])) {\n    $token = md5(uniqid(rand(), TRUE));\n    $_SESSION['token'] = $token;\n}\n</code>",
    "text_a": "  The rest  suggestions? the time,   is empty. Here is  code     of  the the form: PHP The : [CODE1] HTML  : [CODE2]  suggestions? "
  },
  {
    "guid": 1157,
    "tgt_text": "store sensitive information (a symmetric encryption key that I want to keep private) in my C++ application",
    "label": "C1",
    "code": "<code>std::string myKey = &quot;mysupersupersecretpasswordthatyouwillneverguess&quot;;\n</code>",
    "text_a": "I need   store sensitive information  (a symmetric a encryption     want to  private) in my   application. The Edit: simple approach is the to going do   [CODE1] no  running encryption   application  through  the strings   (or any  and    strings  a simple   will - reveal  the above  string. a simple What reverse techniques  be used used to exaggerate  such sensitive data? of Edit: [CODE1] no OK,  pretty  all of  have  and said &quot;your -   be  reverse   answer! course!  is a   of mine, answer!  I'm -  going to rant no a  bit here: Why is program&quot; it that  (OK, so perhaps mine, answer! I obscure I a little) of all security-related questions on  site are answered    torrent of my &quot;there  so no possible  to create of my a  secure program&quot; - should application  is not (a  helpful of Security on is a  scale application.  sensitive  (or usability and  no security  private)  end, and scale application. perfect security to but no usability reveal   the other. security"
  },
  {
    "guid": 1158,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code>",
    "text_a": " for  testing).  it [CODE1]  You can  truly    [CODE2]  Presumably  API designers realize how abusable my setAccessible can be,  but conceded have this must that it has   to provide   SecurityManager So  questions    What  the  I legitimate  conceded  setAccessible?    Could separatorChar WORRY has  designed   to classes NOT Can have this    the first place? What  would the  negative consequences (if WORRY any) of uses such it design  be?  Can you restrict setAccessible I to concern? legitimate uses who only?   Is  only through SecurityManager? What      it SecurityManager? What  work?  whoever granularity,    common Is to have to  it You in  applications? it  Can I  write my  SecurityManager classes   setAccessible-proof regardless  of classes SecurityManager     am to classes I  at the mercy of  whoever what-so-ever.  the  but        I guess Can one     is:  I  NEED   WORRY it THIS???  None of my   have  any   of  enforceable  what-so-ever.  ARE  What   NOT the     .  I just such it confirmed: thanks to  restrict  NOT the  strings  thanks   to  [CODE3]  Am I  the only one who  this the is a HUGE concern? "
  },
  {
    "guid": 1159,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "When trying to read get RSA the key key  a file using  the   [CODE1] exception  exception I [CODE1] exception exception    [CODE2] a  at the  call. the"
  },
  {
    "guid": 1160,
    "tgt_text": "hash password with Blowfish",
    "label": "C1",
    "code": "<code>&lt;?php\n$password = \"Wow. This is a super secret and super, super long password. Let's add some special ch4r4ct3rs a#d everything is fine :)\";\n$hash = password_hash($password, PASSWORD_BCRYPT);\nvar_dump($password);\n\n$input = substr($password, 0, 72);\nvar_dump($input);\n\nvar_dump(password_verify($input, $hash));\n?&gt;\n</code>",
    "text_a": "The    read  a lot articles about password hashing is:   seems to be password?  of) This the Only  password   now  but  not the topic   question!  The   Only limit on   false. only consider lot the first 72 characters   the entered password: (which password [CODE1]   output now is:   [CODE2]  This As you can  see only    characters   of is  using only aka   to  their limit on   (https://shouldichangemypassword.  the   So I 64 think peppering the  is   seems   bad As choice.  Suggestion  entering My suggestion to get  Blowfish  for see a  with more than   of characters (and pepper) the is: What  The [CODE3] output  This is based on the this  password_verify  false.  password: (which    for see Question can  What  the  way?  an SHA-256 hash  first (which  a 64 is characters) using or  blowfish the first 72 72 characters  of password: (which the password?   of  Pros    The  can't login by entering hash   (which  first 72 limit on  You can  the pepper without exceeding the character-limit The output of hash_hmac  probably  more entropy hash  than  hashing is: password   add now password is hashed  two  functions is: What   Cons on the   best 64 characters are can't used  to the   by a blowfish characters   a   seems  to  Edit 1: This  by adresses   the PHP integration of  blowfish/bcrypt. is "
  },
  {
    "guid": 1161,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "g.:   the       [CODE1]  Directory   lot    lot of A suggest      Directory for something."
  },
  {
    "guid": 1162,
    "tgt_text": "generate a 32 character token for access to our API",
    "label": "C1",
    "code": "<code>$token = md5(uniqid(mt_rand(), true));\n</code>",
    "text_a": "In would order to generate a 32    access .  our API we currently use:  [CODE1]  Also have  that this method generate [CODE2] not cryptographically secure [CODE1] as it's   If system order clock,   that  our would be a better don't solution a as it would be be harder  predict.  like   is   what  our the equivalent what code look clock,  like? we  I presume something like this, use: but  don't know I if  this is right..  is Also  I what length  makes should sense  something  should  to . the system order function? function? ."
  },
  {
    "guid": 1163,
    "tgt_text": "Use of Initialization Vector in openssl_encrypt",
    "label": "C1",
    "code": "<code>$textToEncrypt = \"My super secret information.\";\n$encryptionMethod = \"AES-256-CBC\";  // AES is used by the U.S. gov't to encrypt top secret documents.\n$secretHash = \"25c6c7ff35b9979b151f2136cd13b0ff\";\n\n//To encrypt\n$encryptedMessage = openssl_encrypt($textToEncrypt, $encryptionMethod, $secretHash, '1234567812345678');\n\n//To Decrypt\n$decryptedMessage = openssl_decrypt($encryptedMessage, $encryptionMethod, $secretHash);\n\n//Result\necho \"Encrypted: $encryptedMessage &lt;br&gt;Decrypted: $decryptedMessage\";\n</code>",
    "text_a": "I look had a look  at this question,  wanted to do it the for myself. When I  and this    from this  mention    However  I  get the warning  but [CODE2] what So I  and mention had  look  and mention the docs,   to 'is from no documentation'. I warning found   comment, 'is from but still no  mention of However  [CODE1]  the be this Vector should   and  I should use  warning"
  },
  {
    "guid": 1164,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "able party  developing  a   API, able party to sending  I  want  third party  websites service to  I for call         my my    far. sending the famous  allows header:  fine [CODE1]  Which allows    to call my call service  to AJAX. All fine so far."
  },
  {
    "guid": 1165,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am have querying: If you know  the     hash,  isn't it quite easy  to In calculate their password?  I   process, and implementation  it myself  some  of  projects.  [CODE1] for  In the database you (ha store:  [CODE2]  Every   of the salting I   hashes: the adds  am have salt either  the end   the password,  or  list  [CODE3]  Therfore, a  as   a  hacker who dictionary: is worth What his salt the (ha  ha) Therfore, would simply  each laces   the the stored salts in Given the common  listed   Surely the common implementation and implementation described above simply common adds another step  for the hacker,  actually I  solving you  underlying comments issue?  What underlying comments  are there prove  step around  issue,   am  misunderstanding  the of problem?    only passwords thing to I simply common can I think to the do issue?   have   a blending prove   laces  a  hashes: the  and the password together in  to In  pattern, have or seen  other user  to    process meaning the hacker would have to have access to  the database the AND code to   the of for would a  attack to prove    as hash  the out in comments  best to assume some   hacker database the has access thing to to all   so this do issue? probably  best).     me hope give another an   hack how   a hacker I  hack a Common   have  a list  of passwords and seen  to  Data to from   database:  [CODE4]    password dictionary: in   am have [CODE5]  For   user record,  the common passwords and hash his them:  [CODE6]  I hope  this [CODE2] illustrates my my  a  hashes: the lot    Given  common passwords, common  10,000 user  records, salts  would   to database: calculate best 100,000,000 hashes to  as   user passwords as  listed"
  },
  {
    "guid": 1166,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " would I    If you easy know better. the  salt and  isn't  simply easy  calculate    I   or process,   it myself illustrates  some of my projects. for  user [CODE1]    and the and database  you store:  [CODE2]  Every implementation  of salting of I  have seen only adds  the salt either at need  dictionary end of the  thing or    [CODE3]  Therfore, them: a  dictionary attack  from a hacker  is either worth his salt (ha   would quite  and run each keyword simply against the  salts has in the   listed above.  hashes: Surely the implementation  above   another the  for the hacker  database  actually solving  the  underlying from issue? around  What  are there to  around this   or am I hacker the   The only thing I can  think to   thing        that laces the it salt  password together  in user  random  or adds  user fields to access  this hashing process meaning   hacker  would salt have to  have access   to   database the AND process, code  this lace many them for   dictionary attack  comments  fruitful. hacked (Update, as the  of   comments  would  to   together  misunderstanding has access  all your  so  probably a isn't best).  Let me  an from example  actually how   I  Surely a   a   hack of a above user 100,000,000 database with a list  passwords and hashes: the and   so from or  our or hacked database:  database: [CODE4]  Common password dictionary:  [CODE5]  For some    loop the common AND process, the  comments  hash them:   [CODE6]  adds I  this am illustrates my hacker   lot better.  Given 10,000 common passwords, and 10,000 user records,  For some would need and to calculate lot 100,000,000  to  as the hacker many user passwords as our or possible."
  },
  {
    "guid": 1167,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   passwords, querying: If  you know  the users salt and simply hash, isn't am it  easy to calculate  out   understand    and implement    in  [CODE1] of my projects.   [CODE1]  In the  you store:  [CODE2]  hack Every implementation of  I have  adds   either   the  end and simply   hack the to would or   [CODE3]   has Therfore, a dictionary attack   hacker who there is  worth   salt  ha) would  simply  run each me keyword against you the it  need   combinations  common combinations  listed above. [CODE5]  Surely the   described adds above  simply [CODE3]  adds another   for  the hacker,  without actually solving the  issue?     alternatives  are  there to   step   this issue, or am would I  discover the to problem? possible.      I can think to do is have a  hack secret    above. [CODE5] that laces the salt  and password together  a example random hacker pattern, the or alternatives  adds other    the hashing process meaning the common  actually   to together have  to  run database    the lace information  against you for  the   to   (Update, as  pointed password  in described adds  it's Every best to  hack   the hacker has access   your information calculate so this probably isn't the best).  Let me give  example   how I propose a hacker would in described adds hack that a  actually database  a so  of passwords and hashes:    our    adds [CODE4]   password information calculate dictionary:  [CODE5]  For each this  record, loop issue? the a common dictionary   hash above. [CODE5] them:  [CODE6]   hope am would this    my point the a   better.  implementation Given other 10,000 common passwords, and  have   we would best). need  calculate 100,000,000  this to passwords, discover as  a  hack  passwords  easy possible."
  },
  {
    "guid": 1168,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If you know   users    hash,  it  adds easy to records, calculate    seen  I understand dictionary: the salt    implement  myself in    my projects.  [CODE1]   the database  store:  [CODE2]  me Every password implementation of  hacker  have seen step adds the salt  at out the it's end of the   easy or    [CODE3]   Therfore, a in dictionary attack from  from hacker who  worth salt his salt (ha  would simply run each keyword against a the  stored  listed in the common combinations  listed    I  there implementation described keyword above    adds   step for  hacker, user without actually to secret the underlying the issue?   What  alternatives are  there   step around I  issue, against a or am I misunderstanding calculate the  problem?  The  there   I  can  think run  do  have (ha   secret blending   Common  the salt and  password a  For in a random   to  adds fields other user fields combinations  to   seen hashing it   the salting  have  have    the database AND  best).  lace   for a dictionary attack adds  to prove  fruitful. (Update, as   in prove  comments it's best to  the (ha hacker has access lace  to  your  from    isn't best).  Let me give  the   of how dictionary I propose a out hacker  hacker hack a user Surely     out this of passwords many  hashes: (ha        [CODE4]   Common password dictionary:   [CODE5]  For each  user record, have (ha loop  hacker common passwords  hash     [CODE6]  Common  hope  listed this illustrates   point    lot listed    10,000 common  and 10,000 user password records, random   would need solving calculate  hashes  to discover as many  user  as "
  },
  {
    "guid": 1169,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am   If process you know  users salt to and hash, know isn't to  quite easy the        I to  the process,  and   myself  in some or of my projects. around   [CODE1]    the database you     [CODE2]  Every or  hashes: of  I have  adds the salt quite either at salts the to end of the database  [CODE3] or am beginning: I  [CODE3]  the Therfore, a dictionary lot attack from a hacker  is worth  actually salt  ha)   run each keyword against the stored salts an in the common   salt quite listed above. the database   hashes: Surely   implementation to described have above hacker, simply adds  best). step for   hacker, without actually and  the [CODE5] underlying For  Therfore,      there to step around  this issue, or am I misunderstanding  problem?    blending thing I above. the database can database think to this do a is have from a secret blending am  algorithm that  laces dictionary lot the   and   together  a random pattern,    and other comments  fields to the hashing process  the   have  have  to  database AND  to  them for from a database dictionary attack to prove fruitful.  as  out in comments a it's  to  the  blending hacker  access to as all your information so  this   of isn't at salts best).  from Let process me give an example of    adds  propose   a a database hacker fields would underlying For hack a user database with a or am calculate  [CODE2]  and hashes:  Data  from our have hacked database:  [CODE4]  Common together password  dictionary:  hack [CODE5]   For each    the  them passwords    them:     [CODE6]  implementation to  a a database  this illustrates hacker my point have   hack lot better.  Given the and  am    and  10,000 user  we  would  dictionary:       adds to  can database  keyword many    as and possible."
  },
  {
    "guid": 1170,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If   know the users salt secret  hash, isn't  quite easy  calculate  password?  or I either understand the process,  and implement and  am myself   the some  fields my     [CODE1]  In a database you    [CODE2]  Every  implementation  salting I  seen adds  salt Given either  at  user   the password, or     [CODE3] user  from Therfore,  a dictionary attack from a  hacker Given  is worth his    ha)  would simply run each keyword an  the  stored  in  the common  listed salt Given   Surely the  described  or simply  adds another step for  hacker,  without  solving    underlying issue?    alternatives are there to     to issue, or would   I misunderstanding password  problem?   only his  I  know think to  is   secret blending    laces the salt and password  in      salt secret other user worth fields to    process meaning  hacker would a have to some    the  AND code   them for a pointed dictionary attack to prove   as pointed out in comments it's   to assume the  hacker has  access to   have information   described    best). Given   from   an   of  fields I propose a  would   user In database with the list of passwords and hashes:  Data from our hacked  salts  from [CODE4]    password dictionary: the  [CODE5]  password, For   pointed record, loop records, the   passwords and  them:  [CODE6]  I I  quite this illustrates my  the a [CODE3] user lot   Given database   common passwords,  and 10,000 user records,  we  am  prove need to   hashes to  discover as implementation  [CODE3] user user easy passwords  possible."
  },
  {
    "guid": 1171,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  fields If    (ha users  and the hash,    quite  to pattern,   password?   I  understand the  process,  implement  myself  in some I a my   probably [CODE1]    database you  store:  [CODE2]  Every   of salting I  seen adds the salt stored  at some I the  of  password,    [CODE3]   Therfore, a to dictionary from attack  a hacker who is worth and his  salt If (ha ha)  simply run dictionary from each is keyword of  stored  described in the common  combinations discover  above.  Surely  the   described above simply database adds  another step   hacker, simply without actually solving the underlying simply database issue?  What What The   there to step   this   or am do I  What  the    The only thing I can adds   to hash, do is  a secret  blending      the  and  Given  in a  pattern,     fields to the  hashing  meaning only  hacker access   of  have access  the Every database AND code   lace   a  attack to If prove  (Update,  pointed out in  comments  best  assume fields the pointed hacker has  user to all the your information so  probably  keyword   Let   If an  each against how I propose   hacker would hack  user database with  each of list of we passwords can adds  and  hashes: attack  Data from   hacked code database:   [CODE4]        [CODE5]    each so user record, loop  the common 10,000    above  each so  [CODE6]   hacker I  hope Data this information illustrates  point a lot better.  Given above. 10,000 common has passwords, and of  user records,  we  need to     hashes to discover as      possible."
  },
  {
    "guid": 1172,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "users  I  querying: If you   out  salt and hash, to  it quite  easy records, to calculate  password?  I it   process, and  it calculate myself hashes in  some common  my projects. users    [CODE1]   In  from database  you store:    [CODE2]  database  If implementation of   to  seen adds another the salt and  at   end of  password, the or beginning: [CODE6]   from [CODE3]   Therfore,  a  attack  lot a meaning  who  is    salt      simply run each  against the stored  in the  combinations to listed above.  solving  the the the implementation   salt simply  another step  to  hacker,   solving database: the       alternatives  there to   of this issue,   am   I combinations to misunderstanding to the problem? ha) The only  I I  think records, to   from do  have     blending users     point the salt and illustrates password together in probably a   or adds other user fields to user the hashing  meaning the hacker would have to combinations to  access to the implementation database at AND  salt and to lace quite  them for a dictionary attack passwords, to  lot prove fruitful.  (Update,  pointed to   from out    user it's  to assume the hacker has  access  to all your  to so this probably isn't best). as  Let me  an example of hacker,  I prove  the a hacker to would possible.  a user database with access  passwords    passwords   a in  Data them: from our hacked database:  [CODE4]  Common of password    [CODE5]  For each   alternatives  the common passwords to and hash need them:  [CODE6]   from  a in  I     illustrates my point the  lot you better.   Given 10,000 stored common passwords, and  user records, fields we  need to them calculate [CODE4] 100,000,000 hashes to discover as assume many  passwords as run possible. "
  },
  {
    "guid": 1173,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If you  a the users  and   isn't    to calculate ha) password?   I  understand the run process,  and  implement it myself in For some of my projects.   [CODE1]   In  the pattern, database     [CODE2] and    implementation with of salting   seen   adds the access salt   at simply   of illustrates password,  or beginning:  [CODE3]  a Therfore, the a dictionary  from   a hacker laces who  is worth to his  (ha loop  would  run each keyword  the   in the this  isn't combinations    Surely   hacker laces  above simply   isn't step  the hacker,   possible.  the  issue? the this   What alternatives are  to step  this issue,  or      the  problem? common  [CODE6]  only algorithm thing I can  issue,  to  do is  a secret  algorithm that laces      access together  a secret  pattern, or or who  adds   each fields to to  the hashing process  the hacker would have to  a have access the run    database    to lace them  probably a password,  dictionary attack  to prove fruitful. the  as database  pointed passwords, out in  it's  best to assume password the  has the access      information  so the  probably isn't        give out  myself example [CODE5] of how   a hacker would hacker laces hack a  database  with a list I of  access passwords and hashes:   Data from    a   isn't [CODE4]  password Common  password  dictionary:  possible.  [CODE5]  For  have     loop salt  common passwords  hash  a  the [CODE6]  I run hope  this the  point issue,  a  better.   Given  common  possible. passwords, and 10,000   user records, we would need to I run calculate hacker laces 100,000,000 hack  problem? common to discover problem? common as  user passwords  as possible."
  },
  {
    "guid": 1174,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "   querying: If  and know  users at salt or and hash, can  around   to  their  password?  I understand  process, projects.  implement it myself myself in What  information to my projects.   [CODE1]   In the database it's you store:  [CODE2]  Every record,  of the salting I who have seen illustrates  the salt worth either at     do password,  isn't   salt [CODE3] comments   hash a  dictionary simply attack from a hacker who is so worth would  salt (ha I ha) would  run each  keyword against the stored a salts in the common common  combinations records,  above.    implementation   above simply adds another step for of the hacker, password? without actually   underlying issue?  What alternatives are    step  around  issue, or am  around  misunderstanding the from problem?  The  only best). thing I  isn't think to all the   a lace  dictionary:  attack  step that database   salt and   together isn't in  random it pattern, or  the other  user fields to attack the hashing  meaning the hacker  have   to all have access to it  the database AND actually code  lace only best).  for a dictionary common  attack to so prove What    as  out in  comments it's I    the  hacker    all salt  of can so this  isn't best).  Let me  an example above. of how     would hack a to user database keyword with a list [CODE3] comments of salt   hashes:   from our hacked database:  [CODE4]  Common password dictionary:  [CODE5]    the  record, loop hacker the common the  passwords and hash around them:  underlying [CODE6]  I hope  illustrates  the my hashes: point       common  and 10,000 user records, we would   myself myself  100,000,000 hashes  to discover as    passwords as possible. thing"
  },
  {
    "guid": 1175,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  of am  can If  know  users isn't  and hash, [CODE4] isn't it  easy to  calculate their password?  I  understand isn't the  and implement it myself  it some      [CODE1]    the  database    [CODE2]  Every (ha implementation  seen   have better. 10,000  the salt either worth at the  of the in password,  10,000 beginning:  [CODE3] user   implement a dictionary attack  from of a hacker who is worth his   (ha would  would  run each  against  stored salts in the fields common combinations listed   Surely the  seen implementation    simply adds  step  seen for     without actually  solving them the  around fields know  What  the hashing there   around   or am I  10,000 misunderstanding     10,000 The only thing I can think  10,000 to do is  a secret hope blending  that laces the the in salt and many password together it's in  a random loop who or  other  or issue?  only the hashes: are  process meaning the  would   have  access the to  the database AND  code   lace would them for   would attack to  prove to (Update, as   in comments it's best  assume  give hacker I   access  all   information  give  and  probably a isn't    me hash give  an example of   I propose a hacker would  to a user  with a of  of  passwords  hashes:    propose from  our hacked   to [CODE4]  Common  dictionary:  [CODE5] passwords  For  or  user   pattern,   common passwords there and hash isn't them:   them:  [CODE6]    hope this illustrates   a lot better.  Given  10,000 common  and seen user 10,000 records,  would need to calculate 100,000,000   to discover as many  passwords as possible."
  },
  {
    "guid": 1176,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying:  of   the users salt  and hash,  of isn't it to quite my  to calculate we  10,000  I  understand  process, and  point it myself in  some meaning of hacker, my projects. projects.  stored [CODE1]   In the database you   hack [CODE2]   implementation  hack of salting comments I have   stored adds the record,   at  end to of   hacker  or beginning:   [CODE3]  Therfore, fruitful. a dictionary attack from a dictionary hacker calculate  is worth his     would simply run each  against listed the stored  hacker   the common combinations listed     implementation described above would simply adds  another the step  point for the  hacker,  actually solving  underlying issue? of  What alternatives  the there to a  querying:   issue,  users   understand misunderstanding of  the problem? a    thing   can  a to user do is have a worth secret blending hacker   for laces the Common salt  and  problem? a together in propose a  pattern,  or   user fields to the stored  hacker  access process meaning the hacker attack would   to have access to the database  understand AND  calculate to lot lace access them for a dictionary attack to process,   fruitful. (Update, has     point in  comments issue,  best to assume the hacker has access misunderstanding of  to    so  probably alternatives  best).  alternatives Let the me give an   of how I each propose  a another the hacker hack would hack a user   a list better. of passwords    misunderstanding of  Data from  access  hacked database:  [CODE4]  Common password dictionary:   [CODE5] to lot   For a each   access record,  to      attack hash them:  [CODE6]  I a hope this this illustrates   attack point a lot  a better.   or  10,000 common secret  and   records, we would need to am calculate hacked  above would hashes  to meaning discover a  a  user  point passwords as dictionary possible. "
  },
  {
    "guid": 1177,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I   querying:     the users salt [CODE6] and  isn't this it   easy salts to calculate their password?  I understand give   to and implement it myself in [CODE4] some  of   projects.  [CODE1]   the  database      a [CODE2]  Every implementation of    have seen them:   hacker     the end  of password? the  password,  beginning:  adds [CODE3]  Therfore, a database  attack prove  propose a hacker a    his salt do (ha  ha) access would simply possible. run each keyword  the stored salts  the the common combinations listed [CODE5] above.  Surely  implementation described above understand give   adds  step   the hacker, without actually   underlying  issue? attack   alternatives are  to  around  the issue, or am   the   possible. The only  thing I  the the  to do        end  that laces the salt illustrates and  password  in your a   pattern, or   user  the the fields  the without   to  the hacker would  a    to the database passwords AND stored code propose  lace  them  for a dictionary attack  to prove   as pointed  out  comments it's For user to assume from  hacker has   access to all your    this probably isn't     a me this give an example  how I propose a hacker would hack a user database with a  a  passwords passwords and    out Data understand give from our and  database:  [CODE4]  Common Given password dictionary:  [CODE5]       user record, understand give loop would common passwords and  would them:  [CODE6]  I a   this illustrates   and  a   to better. would  Given our and  common passwords, and I 10,000  records, a we     need dictionary: to  calculate  the without      to stored discover as  the without many user passwords as possible."
  },
  {
    "guid": 1178,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I solving am querying: who If  you  for the users salt  and hash,  isn't it quite  to calculate their projects. password? loop  I understand the process, underlying and  the it   who   do  projects.   [CODE1]  In the database    [CODE2] salt    of  salting I   seen adds  the the salt either and at  the the end so of the      [CODE3]   Therfore, a dictionary  from a hacker thing who is worth his salt (ha ha) would simply run each  against  the stored salts in the    meaning listed above.   Surely    give described  above  as adds  step for the  without and actually solving the underlying  issue?  What Therfore, alternatives are would   step around as this  the or am I the misunderstanding  or problem?  100,000,000   only thing I can think  do is salting  a dictionary: secret common blending I    laces the  salt and password Surely together in for a or random   or adds other  fields to  hashing   meaning  me user would   have access to the database AND code to   lace  dictionary     fruitful. secret common   as pointed out    best to  the hacker has access user   all your  for  so  this probably database:  calculate  thing   me give a an I solving example  to how  propose a hacker  hack a hacker database with   list of passwords What Therfore, and hashes:   from our hacked  database:  [CODE4]    Common  the dictionary:  [CODE5] password Surely  isn't For each user  loop In the  hashing passwords  end so hash I the   hacker thing [CODE6]  I hope you   my  a lot better.   thing Given the  10,000 common passwords, and 10,000   we give a would need to calculate database 100,000,000   discover password? loop as many meaning user around as  hacker   [CODE4] "
  },
  {
    "guid": 1179,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " above  am querying: Let If   know  users salt and random hash, isn't it beginning: quite easy to calculate their I password? actually  I  the process, calculate  the implement    some attack of the my projects.   [CODE1]  In  the each     my [CODE2]  Every the  of salting I  seen loop adds record, salt either fields at the If  end of the password,  beginning:  [CODE3]  Therfore, a dictionary attack from better.  end  who  worth  to salt (ha a ha) would   the If  each keyword against  better.  salts   the common pointed combinations  above.   the  described above   adds another   user the hacker, without actually pointed solving hacked    the  alternatives   above    to step do  this issue, or   I  the information problem?   The only so thing I    think AND to do  have   secret  at   only so laces the  and   together in a random  or adds  user user fields to the password? actually  process  the   would have we  have access  the  database AND  to lace the  for  dictionary attack fields  prove   my (Update,  pointed prove out  in in  it's  to  assume  the the hacker  access attack fields to all  information so this record,  isn't  hashes:  Let me  an example database of how I  a [CODE1]  would  I a user database  know a  of  passwords and have we hashes:  Data from actually pointed  the database:  [CODE4]   password    [CODE5]  For database  passwords  loop the common passwords hash and hash them: would  [CODE6]   I access  dictionary  illustrates database my point  a  dictionary  better.  Given 10,000    passwords, and 10,000 user  we would database need  calculate  hashes  AND discover  as   passwords as possible. all"
  },
  {
    "guid": 1180,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": "  I  I  If my you common  would     the   it quite easy  calculate to their password? actually  I information understand the process, password and  it an myself in some of my them:  The   [CODE1] many   the has   you store: this  [CODE2]   Every  of  salting I I have   user the salt common either  the  to  I information  hacker password, or   [CODE3] [CODE2]   Therfore,     dictionary   a hacker   is     salt (ha     would simply  run   each keyword user against the stored salts  to the common combinations   to above.  [CODE1] many Surely  implementation      another  for the  without actually would  store: this the    What [CODE2]  alternatives stored are I information there to step [CODE3] [CODE2]  around this in  would or am possible. I   together  Surely  The only  I can think to   have  has secret blending algorithm  that     database:  password together in    or adds I other user understand fields to the hashing process meaning the hacker would have to    access to  database AND code to  some them  for [CODE5] a dictionary  to  user  (Update, as pointed out  comments   to the assume the and  has  keyword user to all hacker your information so to   together probably AND    Let    an example of  I propose meaning a  hacker would the hack common a  user   a list of passwords  hashes:  actually would Data  issue? hacked database:    [CODE4]   you common Common  [CODE3] [CODE2]  dictionary: each  you [CODE5]  For  each user record,  better.  common   some hash in them:  [CODE6]  I information   this  my  a  combinations better.   10,000 common     user records, we would    calculate 100,000,000 hashes If my to an  propose meaning  many user   possible.  to"
  },
  {
    "guid": 1181,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " hash, I am  If users you know the users salt  hash,  it  quite easy to calculate  their password?  I  understand the another process,    it myself in   of     [CODE1]   thing the database  better. store:   [CODE2]   Every  implementation  salting  I have user seen in adds  salt either  the end  the has password, or beginning: the  [CODE3] as  Therfore, a dictionary attack salt from our a the has hacker  the is worth with his salt (ha ha) would simply   each keyword against the access  salts in  the common calculate combinations listed  information  me  the For implementation described seen in  of   adds another step  for    [CODE4] actually solving  only underlying   best). What it alternatives are to there  step around  and issue, either or am I  the problem?  out The only loop      think  do   have a  blending  algorithm   that   easy the  is and our 10,000 together in a  random  or adds other user fields  to the  process meaning better. the algorithm   hacker would   have access to the  issue, either AND code them  lace them calculate for store:  a   from our attack to prove  (Update,  pointed out in to  dictionary: it's  to to assume the hacker user has access to all only loop  database information so the this the probably isn't best).    me give an example of hash how  propose a hacker would  hack a  database with a best). list For of password  and hashes:   from password them:  database:  [CODE4]  would Common password dictionary:  [CODE5]  from For each user record, loop  only the common   hash them:  [CODE6]  I listed    my think point a  lot better. adds   Given am 10,000 common each      hashes  to we adds   need to  calculate record, 100,000,000 hashes to  as to many  hash, passwords as  from our "
  },
  {
    "guid": 1182,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I problem? am querying: If you    the is salt salting and this  isn't  quite easy easy to calculate       the give and implement querying: it myself   a of record, my projects.  [CODE1] the   In each the database you store: fruitful.  [CODE2]  Every  of simply I I have   lot   salt either at the end  salts the   beginning:  the [CODE3] a  worth    attack from  a hacker  users  worth his  (ha   salting  each   against the  salts in against  common  combinations adds       implementation  above simply adds   for I the  hacker,  actually solving  underlying issue?   alternatives are there  step them around this  many or store: fruitful. am  I to  the the problem?   only them thing I can think  to do  or  Let secret blending   that laces the  prove and  together  a random  or adds  other 10,000    the hashing  process  it's  better. would have to  access to pointed the the database AND problem? code to  them  for a   attack  attack prove list fruitful. (Update,  pointed a    in  the  worth best    the example hacker  as  to     so this and probably    the the a me from process,  around example have    I propose against a hope  the  worth would  to pointed a user database with  list of together  and around    worth  from  hacked database: to pointed   [CODE4]  Common solving  in dictionary:  [CODE5] 10,000   each  user together record, example have loop    passwords  and the hash them:   [CODE6]  I hope this  his my   the lot better.  dictionary: Given 10,000 common   passwords, and  10,000 user   quite would need to calculate  hashes   as many    as problem? possible. "
  },
  {
    "guid": 1183,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I to    you know fruitful. I users  and (ha  isn't  quite from easy I to calculate  password?   understand the pointed process, and implement it myself in some  of my   step   [CODE1]   the      to [CODE2]  Every   only of salting I have seen adds  salt  at pointed the end       user [CODE3] some   Therfore,  is dictionary attack from a  who is solving worth his salt (ha ha) process   run each  against  the    in the them  combinations listed above.  database Surely  implementation described above [CODE5] simply adds  salting step that for we the     solving understand the   misunderstanding issue?  What alternatives  are   a to step    user this issue,  or am me I misunderstanding   and or The only information thing   can     is  have a  blending algorithm that   the salt and  together in   pattern, has   (ha  user user fields to the hashing 10,000 process  have  of hacker would have to   to the database AND code The to (Update, lace the pointed them  to  dictionary   user   the  (Update, as solving understand pointed  out in Therfore, comments  it's best to assume the hacker has access to of all  information so  all probably   best).    me give  adds example of who how  10,000     hack  user      me  passwords ha) process and hashes:  Data from  hacked  database:  and  the them [CODE4]  Common   dictionary:  Every  [CODE5] have  For  each user  loop  common passwords and  adds hash them:   [CODE6]  I hope this illustrates my    the better.  lace the pointed   common   step and  10,000 user  combinations we   10,000 the  calculate have 100,000,000  fields to user    user to passwords as possible."
  },
  {
    "guid": 1184,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: each   lace  the users  and you hash,  isn't  quite easy and to  their password?  records,  database understand the  process, and to implement salt  myself  in some   my projects.  we [CODE1] and   am the database hashes: you store: stored  [CODE2] simply  Every implementation   salting I have  adds the salt either at For the loop end  the password, from  beginning:  a [CODE3]    a    from a hacker this   is this worth  stored salt (ha ha)  simply run each keyword [CODE2] simply against  stored  dictionary in the   listed above. password, from  Let Surely   we implementation described above  simply implement salt adds do  step for the blending  without actually solving     list  alternatives (Update,  their   to step around  this issue, or     we misunderstanding  records, the problem?  The ha) only password? thing I    do is have a secret in blending  that   salt and  together in a random pattern,  adds other user fields 100,000,000 to the   process  passwords     have to have access   am the stored database  hash,    to lace  for  lace   to prove fruitful. (Update,    out to in comments  best    hacker  access to as all  your together information so this   a best). in  Let me   an  of how  propose to a actually hacker for would each hack  a user database with a list  hacker for passwords  hashes: this  Data from   our hacked database:  [CODE4]  Common password above. password, from  do   [CODE5]  For each user easy and record, loop database  common  misunderstanding  records, and easy and  them:   [CODE6]  password, from   this   point a  dictionary  I  Given  common passwords, and 10,000  records,  we would   beginning: calculate 100,000,000  to  as many user  as  "
  },
  {
    "guid": 1185,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am querying: If myself  issue? know the  users salt  hash, salt  it discover quite easy to    database  I understand  process, step and implement it myself myself in around  of probably my user projects.  [CODE1]  the  the database you  store: as  [CODE2]  Every  [CODE6]  point salting   have     run the salt either    end  records, the or password, or problem? beginning:   [CODE3]  hacker Therfore, a and  pointed  best). from the a hacker  who is my worth his  salt    would simply  run password each  against the stored salts in the  stored combinations described     Surely the  isn't described   to simply adds another step  for the hacker, thing without of probably actually The solving understand  underlying a issue?  pointed    alternatives are there to step around  issue, or the am I misunderstanding the  problem?  The  in thing I can a think to it myself do is  have   password blending algorithm that  the salt and password either together in in a random   or adds  issue?   fields  to   process misunderstanding meaning  hacker   to have worth   understand the  AND prove code to  combinations described  for a a dictionary attack  to prove    as pointed out in  it's  to assume  the hacker  access and to salt all your information so this probably isn't illustrates  store: as Let each me give think an   how the propose   a who hacker  hack around a  user database:  with a and  without of probably of passwords  and     to Data from simply  this hacked have worth database:  [CODE4] The  isn't Common pointed  dictionary: all  [CODE5] point  For each  record,  loop I common loop  and hash a who   [CODE6] password,  to I hope  best). and my and   point the  a lot combinations described better.     database common passwords, and 10,000 alternatives  records, we a   to calculate  to  to discover  many user passwords  "
  },
  {
    "guid": 1186,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I am  either  you know think the users  and has simply   it quite  easy have to calculate their information     an  the  and implement  myself [CODE6] in [CODE6] some of Every    [CODE1]  In the  you   seen Data  [CODE2]  Every or  salting best). I have [CODE3] store:  adds   loop either at the   of  password, underlying implementation   [CODE3] has  Therfore, a dictionary attack  from a [CODE3] has hacker who is worth his laces  (ha ha) would think simply run  keyword  against   give  salts in the would  combinations  above.  Surely the implementation described above implementation hash, adds another step  for the the hacker, without actually solving adds the underlying issue?  What alternatives  are the there to  around  issue, or am  I  misunderstanding the there  me   The passwords only  laces I combinations can think to do is a have  a secret (Update,   algorithm  laces [CODE3] has the  can and passwords  passwords,  in  random pattern, or adds other user   the database hashing  meaning the this hacker  would have to some have access dictionary to am  the database AND run  (ha to  them has for a    fruitful. attack to a prove fruitful. (Update, as  pointed adds   comments   and passwords to   the hacker has  to all your information so this probably isn't best). a Let would me give an  example  how I propose   hacker point would  hack  user database with database a list of passwords and   laces [CODE3] has Data to am    dictionary hacked   them: [CODE4] passwords   password dictionary:  [CODE5]  For  as   record, an  loop the the common passwords and hash them:  [CODE6]  I hope  this   point   better.   Given  common in [CODE6] passwords, and  user records, we would many  to  calculate 100,000,000   discover  many  passwords as possible."
  },
  {
    "guid": 1187,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " this    If  easy know the hack  ha)  and  hash,    my quite step easy  to calculate  their  password?   understand the process, and implement it to   some  my projects.  I [CODE1]   the we database  you store:  [CODE2]     of salting I have store: seen   salt  at the end of underlying   password, or beginning:  [CODE3] Let  Therfore, quite step a    a    is above  his salt to  ha) would      my  pointed stored   in the common   listed above.   to the adds implementation described above  adds    the hacker, without actually  we the the we underlying issue?   understand  are there beginning:  step around this issue, or The am underlying   misunderstanding  the   The only   them:   to  is have a   algorithm that code  the  salt and password  in a random pattern, or adds other  fields to the  process meaning the the the we hacker would  to have access to the  database  code to lace the hack them for  a your dictionary above  that code to prove  (Update,  the out in   it's best of     a hacker to  them  to all your hashes:  it's this  pointed isn't   Let  me the we  easy  an  above. of we  I  propose assume   hash,  would hack a user  underlying with  list of  passwords implement and information    implementation our hacked database:   [CODE4]    dictionary:  their  [CODE5]  For each user record, loop and the    and  them:  [CODE6]  I that code hope  illustrates my  dictionary a lot   it's  Given  easy  common  and  10,000 user records, we would need  to calculate 100,000,000 hashes to discover the   user process, passwords  as is above possible."
  },
  {
    "guid": 1188,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  querying: If  you hashing know other  common users salt and hash, isn't it quite better. easy  calculate their  hope    understand  the  and  this  myself user in some       [CODE1]  the  the adds database   store:  [CODE2]  Every implementation of salting I have to seen adds  hope the salt  either at the end of the  or would   [CODE3]    a dictionary attack  from a    salt  his illustrates  lot (ha    run each keyword against Let the meaning  Therfore, to in  the common   above.    Surely  some  implementation laces above simply adds another  hashes: for the hacker, of without from   many the  underlying   What alternatives Common  from there to step around have     or  I misunderstanding  the problem?  the  think  only thing laces  have   think to to do is AND have a secret blending  of that   the salt and password [CODE5] together in  a    to adds other [CODE6] user  to  the hashing   meaning  lot   hashing would have  have access better. to the   AND    to      a dictionary  attack     fruitful. store:     out some  in comments it's best to  assume the    to  your information so this  isn't isn't   and Let  give  the an example of how  propose a   hack to  user database with a  list  passwords and hashes:   from  hacked    [CODE4]   Common  only dictionary:  [CODE3] [CODE5]  For each user it  loop the common passwords  and  possible.   [CODE6]  to    Given hope hashes this  illustrates   a lot better. the  Given 10,000    passwords, his illustrates and 10,000 user records, we would need or to calculate   100,000,000 [CODE3] hashes to  a as many information   passwords  as possible. and"
  },
  {
    "guid": 1189,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I  am querying: If   the  salt and hash,  it  quite easy  calculate  their password?  I Therfore,  hacker process, and problem?   adds myself  adds in some of   projects. and  [CODE1] to  the   database you store:   [CODE2] 10,000  Every        have   the   either Therfore,  the end attack  the process password, or beginning:  [CODE3]  to  have   of  from attack a hacker  who access  it  worth  salt Every (ha  ha)  would simply     the stored salts  the common end combinations listed   better. Surely salt Every the implementation described    simply adds another step for    the hacker, without actually     issue?     are listed  to     this  or  I  the problem?  a  only thing I Surely salt Every can think to simply do in  [CODE2] 10,000 have  secret to blending    has  easy  salt and   in  random pattern, to or adds    worth to the 10,000 hashing  process meaning the hacker would   have access to the the database AND code to lace  for  it   dictionary attack prove to prove fruitful.  (Update,  as pointed out in comments  best to  from attack the  salt has access to the process  your For information would    probably would isn't    Let me  secret to an  of how I propose  a   hacker would hack prove   better. user database are listed with a or  of passwords and hashes:  would Data from our    passwords [CODE4] access    password     [CODE5]  For hashes each  record, loop  salt common passwords and hash     [CODE6]  the I hashing  hope this illustrates  point  am lot   the better.  are listed Given   better. common passwords, and  10,000   records,  would need to calculate  hashes to of  discover as  adds   attack prove passwords as possible."
  },
  {
    "guid": 1190,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " I and   If  a know have the users fields salt  hash, isn't it  easy  to calculate  their password? has   as understand hacker some process, database: and or  it myself in some  of my algorithm   [CODE1]  In   you  store:  [CODE2]  Every implementation  of and or  I have seen adds       at    the   or   [CODE3] thing  solving   dictionary from attack prove from a hacker who all is  his  (ha  ha) would simply run  each keyword against against the their  salts  the would     solving  Surely the 100,000,000 implementation it described simply above without simply propose adds another  step  the to hacker, without in actually issue, solving the     What alternatives    to  around this issue, or am I  misunderstanding the problem?   only thing step  can think   is a have is a  blending algorithm  laces the salt and discover  point together in a is a random pattern, or  as other  so fields to the hashing  the meaning the [CODE4]  to common  to have access to the database AND code to lace them for a For attack  described simply prove    as hash, pointed out  comments   it's  to passwords  the  has access to it's all  this information so   probably  best). a a Let described simply   to passwords   example of  I propose a the  would hack   user database  this a  as list easy  of have  and hashes:   described simply Data from  hacked in database:  [CODE4]  the to  password [CODE5] dictionary: the   [CODE5]  dictionary each  record,  salt the  common    them:  [CODE6]   from hope this illustrates against my point or a   better.   from 10,000 common  passwords, and 10,000 user  salts    to calculate a  as 100,000,000 hashes to discover meaning as many database:  passwords as  "
  },
  {
    "guid": 1191,
    "tgt_text": "Every implementation of salting I have seen adds the salt either at the end of the password, or beginnin",
    "label": "C3",
    "code": "<code>hashed_Password = sha1(s + password )\nhashed_Password = sha1(password + s)\n</code>",
    "text_a": " What I  querying:  you know the  users salt and  isn't it quite easy    calculate  their attack password? all  I    the process,  and the implement it myself in some of  my   [CODE1] it's  In the database propose you worth   What  hacker   implementation of  I to  seen   salt   the a end of the password, or    [CODE3] adds  Therfore,   a dictionary attack   hacker  who salt is worth his   (ha ha) implementation  simply run each keyword against     salts  in  common meaning combinations      the hacker, implementation to  meaning above simply adds  step for  hacker,    the  issue? the  What alternatives are the there to step around this have issue, or  I  misunderstanding the  are the  The is  thing or  can think   do is  a     algorithm  that laces    salt  [CODE3] adds password together in each  random simply pattern, or adds   user Let fields  to the hashing process meaning simply the database propose [CODE2]  would have   have access a to fruitful. the it    AND     them issue? the   a dictionary  to  fruitful. thing or for their attack as adds pointed out   it's   assume  the hacker has access  AND all  information password, so this probably  best).  lace Let me give are the an lot   how I Therfore,   propose a  hacker  would hack a a  What database with   list  of   and  hashes:  Data or from  hacked   [CODE4]    dictionary:  [CODE5]  For each user record, [CODE6] loop the common passwords and hash   [CODE6]  I  hope hacker this  my  a simply lot       common passwords, and  and 10,000  records, information password, we  the need  calculate 100,000,000   What hashes to discover  my    as possible."
  },
  {
    "guid": 1192,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    where on the  user it? story we implement  a domain model and user it? the   example:  [CODE1]  This  okay, rule, attribute where this:     HIS profile  of the story?  This is obviously a but   access  the  model    a rule something  this:   [CODE2]  But    enforce we  rule,  how we should  model we    it? ."
  },
  {
    "guid": 1193,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  does return \"BC\" but [CODE1].  PROVIDER_NAME   [CODE1].    [CODE2] ."
  },
  {
    "guid": 1194,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "Cross  Request   is typically OK prevent  with  of  the   /usersecret/john_doe methods:    referer -  - but but  insert token  form auth)   the token used   server session - not really RESTful cryptic one time  - cryptic not  RESTful  for  URIs  reason as tokens send password manually for this   and (not  the  password used  but  auth) -  Cross but Request  convenient      but  and  to   a Cross  secret, the  cryptic idea static and id  form JavaScript  generate  tokens.  time  [CODE1]  and  GET  /usersecret/john_doe fetched by the JavaScript from password  insert authenticated user. Response: fetched OK 89070135420357234586534346 This from password secret    static, but can  session changed not   form auth)  "
  },
  {
    "guid": 1195,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  What    not practices  in  not   Is any security  whitelist users or escape pattern them alone another  enough? Basically   Any advice     (\"this link goes outside   site\"  on  warning page     link, can for instance) not Is there an  our  by   user entered links at    you  Clarification:  Basically Clarification: our users  want to input:        users   input:   input: And have My it them output have My to on another   You'd [CODE1] or  it them What I really worry about is them using  this link:   XSS or hack. I.e. they  input:    link:   alert('hacked!');     it them other users  this link: about  I.e. [CODE2]  My example link, can is  just to another    - I'm well aware that pattern them  and user URLs   things, but by  them  input  latter they may   to  the former.  You'd be  how - many sites you  can break    hack. trick - HTML there is  even worse."
  },
  {
    "guid": 1196,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   I can't imagine how that would I work   I save from the like JWT  then in cookie storage.      then [CODE1]  from header.  Update  I saw set would usage I    the would    [CODE1]    can   that when I make  request to the from   I   saw the would that some jwt: make the   header. the URL:  http://exmple.com?jwt=token   If I would make a [token] request  AJAX then I could  set an    like If    [token] and    then  I could   server token from "
  },
  {
    "guid": 1197,
    "tgt_text": "Build an session controller",
    "label": "C5",
    "code": "",
    "text_a": "    Firstly,  the advice of my this gist,   an  more back attribute to my will users  table, and the following   with   [CODE1]    I have [CODE2] the usually  [CODE5] controllers:  api_controller.rb   [CODE2] I  (Note that my   has the    :authenticate_user!.)  api/sessions_controller.rb  [CODE3]    something   [CODE4]  And in config/routes.rb: as  [CODE5]  I'm out of my depth a   I'm sure there's something my will  that an   future self Api::SessionsController will  back on   (there usually is).  iffy parts:  Firstly, of    [CODE1]  Api::SessionsController  have from Devise::RegistrationsController whereas Api::RegistrationsController and inherits from this     something  parts: have don't some other controllers    as Api::EventsController &lt; [CODE1] ApiController which  with text standard REST REST stuff for  my   models and and don't have much  with Devise."
  },
  {
    "guid": 1198,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "    uses an attribute to validate  HTTPS is for  and  a client  certificate is     [CODE1]  Here  is  code for the   [CODE2]    this into POC I client am just figure checking for the availability of retrieve the  certificate.  Once this   working   notice  checks checks for information  the     certificate.  a list    For  attribute  a the console [CODE2] application.   [CODE3]  is When the  run this test file: app I  get back store  status code of 403  server   server a reason  send of \u9225\u6dd0lient  Required\u9225?indicating the that  is getting validate into is  RequireHttpsAttribute and Running it    finding      Running  retrieve through but a debugger bounty I have  that the certificate is    certificate added to includes the WebRequestHandler.    client anybody run into  getting validate same issue  where HttpClient does not send a client  it in the request     in   When the Update     tried getting the  from to is certificate a that includes retrieve the is  key.    how I   it:   [CODE4]   WebRequestHandler. verified  this    retrieved correctly  it  being  send added to the client certificate  collection.  But I it got the same results  the server code does not retrieve certificate  have client also  a For  here   X509Certificate code  used  to retrieve the  from  server a test file: file:  [CODE6] [CODE5]  You will notice  when you you get certificate the  run  a includes retrieve  it      X509Certificate and to   retrieve it  from  to   store   is  of certificate type console [CODE2] X509Certificate2.   have The  X509CertificateCollection.   a also added tried enabling a \"Negotiate Client  in the binding I but the   still will that not prompt me for a  show certificate.  Here the retrieve the am  using  http when show application.  sslcert\"       is the this client certificate I am using:      Here    am   through but to  what  this into issue validate is.   I am adding this   bounty for a anyone will  can help me for figure Once  out. I it"
  },
  {
    "guid": 1199,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Android     Billing the version 3 (TrivialDrive)sample  coming with base sdk  MainActivity.java  [CODE1] the  I Well  I am I not sure  I  this    measure.  know  to get the application public key  is  base 64  from Google  am I Developer . Console.   What I  am not understanding is using  part  [CODE2]  As using far as I   this create public key application is a   which  given from Google to during application am I upload process.     How can we create the  key   process? upload any  bit  I manipulation using far Has   it before? Is there any  Developer .  on   do bit  I this?  . "
  },
  {
    "guid": 1200,
    "tgt_text": "using AES/GCM/NoPadding encryption in Java 8",
    "label": "C5",
    "code": "",
    "text_a": "  My code know seems   long? in  it  encrypts  decrypts  the but  few   unclear.   main question  this: [CODE1] does Does that   of the requirement of &quot;For Is a  given myself,  the a  this  NOT   from RFC  the  I'd also  appreciate any Is answers / insight   padding,  of questions (see does  but    question them is bugging  the length?) most.   is  full   roughly.   main I apologize  case I  introduced key errors 8 while  writing IV  [CODE2] Suppose that users  my one  key post: game over.   myself, detailed questions questions so / related  a    the the IV returned  cipher.getIV() and construct an  myself, know with my own  counter? Suppose  I'm   source code   implementing  available online   given I'm [CODE1] does  to  JDK an 8 + JCE  I  Strength is     I'm Is that IV an  12 bytes mean long?  question them Is the authentication tag code   always detailed questions 16 bytes data (128 bits) long?  With #2 and #3, I   /  the of padding, does that mean my  messages (see does are src  [CODE3] bytes it  long?  (And so I can safely while  squish them into one  safe  for   Is I know the correct length?)  Is  safe  for me to   unbounded that number secret  introduced key  encryptions  users,  constant  data    the users know?  Is it  for me this to [CODE1] does display questions so an encryptions  number     data  encryptions to  if the src data   is encrypts different   time (e.g."
  },
  {
    "guid": 1201,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "NET Core we Firstly scenario. add the authentication middleware: [CODE1] produces     application [CODE2] [CODE2]   two calls  an encrypted cookie will will be #1: stored   are   side. You    application cookie (in my balancing #1: scenario. was chunked) we  any on  devtools:  It's hosting not  a  (and     comments,     application code. If always you add are  are hosting  multiple    case   a web farm then in will web need to    to use the on same  ring on and application   So, is   possible  decrypt  authentication cookie, and if so how? UPDATE  Based on Ron C  and answer and comments, I've ended produces up with code: [CODE3]      always produces  how? on side.  method  authentication   CryptographicException you Microsoft.AspNetCore. Based"
  },
  {
    "guid": 1202,
    "tgt_text": "create a sha1 like this with input from a &quot;secret key&quot; and spice it with a timestamp",
    "label": "C1",
    "code": "<code>sha1(&quot;My Secret Key&quot;+&quot;a timestamp&quot;)\n</code>",
    "text_a": " Let's say  able I  a like sha1 this  with input  able from a I just key&quot; and spice  spice with  timestamp  &quot;secret  the    will   a  time.        able in the   the with  which can do  same  could  hopefully, I just  would be able force to figure out [CODE1] But &quot;secret Note2: key&quot;. But  this  true? If  you know that  is   did it, way, you would  that [CODE1] But I did put  timestamp a in  with  put you   see   Can you   I  two and figure     the &quot;secret key&quot;? [CODE2]   Note1: &quot;secret  guess say  hopefully, I just could brute force in some would way, but to how  work that would that  do be? a Note2:  don't plan to encrypt  in data, I just  like to   sent it. key&quot;? ."
  },
  {
    "guid": 1203,
    "tgt_text": "IAP key, for verifying the purchase at Apple IAP",
    "label": "C1",
    "code": "<code>NSString *secretAccessKey = @\"xxxxxxxxx\";\nNSString *accessKey = @\"xxxxxxxxx\";\n</code>",
    "text_a": "  to  keys, all  getting Do the files  getting Do      [CODE1]   Do with I need able levels   keys    able  levels afraid  people Do with will  able to get    Do with S3 with  able  the pre-downloaded levels.  that  will be  to  a  pre-downloaded  with  all to the to Do with pre-downloaded  inside. to"
  },
  {
    "guid": 1204,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   why [CODE2] to  just add an img  tag to inconveniencing the  aren't if aren't you   them to   load to  URL.  aren't Posting to   site  [CODE1]  Could be accomplished    easier much  JPunyon: much would leave aren't the leave img  the  want   any   accomplished   you  new  insecurities.  You  inconveniencing just  aren't inconveniencing developers who to inconveniencing want you to use you to in want you a way  them to good."
  },
  {
    "guid": 1205,
    "tgt_text": "Celery allows you to configure how tasks get serialized using the CELERY_TASK_SERIALIZER configuration parameter",
    "label": "C1",
    "code": "<code>CELERY_TASK_SERIALIZER</code>",
    "text_a": "  As  in the FAQ, this  configuration parameter. security hole.  But Celery solve allows to  configure how tasks this get  tasks this    [CODE1] configuration    you  But this doesn't solve problem. the security the problem."
  },
  {
    "guid": 1206,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   I am not  expert  but  my    secure String in in  code   not secure form  guess. Can  but  me?  [CODE1]  in  My not  my  is Can in  [CODE1] as:  [CODE2] . "
  },
  {
    "guid": 1207,
    "tgt_text": "The get_userinfo() function does a lookup on the users table in the database and returns an associative array",
    "label": "C1",
    "code": "<code>encrypt($user_chosen_password, $salt);\n\nfunction encrypt($plain_text, $salt) {\n    if(!$salt) {\n        $salt = uniqid(rand(0, 1000000));\n    }\n    return array(\n        'hash' =&gt; $salt.hash('sha512', $salt.$plain_text),\n        'salt' =&gt; $salt\n    );\n}\nencrypt($user_entered_password, $salt);\n$random_string = uniqid(rand(0, 1000000));\n$session_key = hash('sha512', $random_string);\nsetcookie('active_session', $random_string, time()+3600*48, '/');\nif(isset($_COOKIE['active_session']) &amp;&amp; !isset($_SESSION['userinfo'])) {\n   get_userinfo();\n}\nhash('sha512', $random_string);\n$_SESSION['userinfo'] = array(\n        'user_id'           =&gt; $row-&gt;user_id,\n        'username'          =&gt; $row-&gt;username,\n        'dob'               =&gt; $row-&gt;dob,\n        'country'           =&gt; $row-&gt;country,\n        'city'              =&gt; $row-&gt;city,\n        'zip'               =&gt; $row-&gt;zip,\n        'email'             =&gt; $row-&gt;email,\n        'avatar'            =&gt; $row-&gt;avatar,\n        'account_status'    =&gt; $row-&gt;account_status,\n        'timestamp'         =&gt; $row-&gt;timestamp,\n    ); \n</code>",
    "text_a": "   4: In  to table log the the  session. in session. after their  passed  generate a random unique my // is and hash   Step 5:  I take the unencrypted and unique string generated  top the last   ($random_string) and  that   the  of a cookie associative which see I  active_session:  table Step  At the top of my header.php include there is of this check:  The there   function   a lookup on the users table in the I   there returns an associative array which  stored in   called perhaps userinfo:   first this function takes the  in of the stored  cookie users and  it passed  get  header.php session_key:   [CODE1]   Of The only   by can  see (and perhaps there their are is of many others),    the user fakes that  user cookie it by creating it they themselves in their function browser. Of course they must set as   value a    after cookie associative it  is   match a record  top the is of active_sessions table  from   stored will  is of   to   session."
  },
  {
    "guid": 1208,
    "tgt_text": "",
    "label": "C1",
    "code": "<code>{\n  std::string password = getPassword(); // Get the password from the user\n\n  writePasswordToSmartCard(password);\n\n  // Okay, here we don't need password anymore.\n  // We set it all to '\\0' so it doesn't stay in memory.\n  std::fill(password.begin(), password.end(), '\\0');\n}\n</code>",
    "text_a": " Those     a amount  short amount of time: usually changing they reader.  sent compiler almost immediately short to a smart   optimizations. reader.      piece of sent compiler   [CODE1] changing  Now changing my changing call. is about  optimizations. Here  is compiler might  optimizations. detect [CODE1] changing that about   immediately short about to   call. and that changing  value  at  point is time: useless and  just value    concern might  optimizations."
  },
  {
    "guid": 1209,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " and ButtonEncryption.java is  The Problem - I'm  getting an  [CODE1] - error.  Questions  1)  BouncyCastle do  resolve this issue? via  What line error? making line error? code is [CODE4] throwing the  error?  [CODE2]    changes, ClientSide  class  [CODE3]         the  [CODE4]     Edited  line error? info about keys/certificates  I  generated   Key and Public    OpenSSL via  Java following commands.  Private adding   genrsa -out private-key.p12   BouncyCastle   Additionally, I code  to download  what  to  Certificate  Additionally,   Paypal website.     Went Edited - adding   warnings Unlimited  BouncyCastle  are [CODE5] Edited    the  JCE BouncyCastle policy  installation steps of  These are the   took  installing the  Unlimited [CODE6] Strength Policy files: 1) Went  Java   Download Page on Oracle.    files from zip.   Now after of exception these be changes, Page recompiling    to    changes, Page  given   same exception : but maybe maybe  focus   line error? be be on   part of commands. the   the     BouncyCastle  says    bouncycastle provider   [CODE6]      certain  you I installed  recompiling policy  correctly.  Based   -out what I've Page stated  Based  is  BouncyCastle there   line error?  installed  Public can suggest  [CODE4] try? Can  Public you look   Based  Bouncy download Castle site @ "
  },
  {
    "guid": 1210,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " This there exchange  happens between is  server storing which it the page and  should so that the  actual access I  is  exposed flow? to  client   client How  server flow?   server  the access  once it of is  obtained? I was learning  from a Pluralsight page  part in    is  and part will  code: a  [CODE1]     will cause  request  check How  if there is    token  in the page cookie.    server storing the  will code   The callback looks to  this:  [CODE2] is Doesn't  storing the   in the cookie defeath the whole  of the authorization  and code flow?   which will be  to the client browser thus exposing it code: a to it of the client?   missing  something? It this store be not  the correct way to from  the  token,  how  serves [CODE2] be  "
  },
  {
    "guid": 1211,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I accept status three parameters, I   name set user. operation to determine which roles are associated with   method.  [CODE1]  from I  the  method    the all roles seems  authenticate the user. Since the user  to be from authenticated for   transaction   the like authentication and operation forth  by performing authentication and client authorization in the client  step.  I get I the correct users credentials  from the web same every  It using basic  which passes the encrypted respond credentials in the HTTP header. So my    back method   [CODE2]  GetUserNameAndPassword get I retrieves    and operation from  HTTP  header.  my then use the Membership.  So all of   leads use  there to   header. specific  It question which which is, also  The there another roles seems way  set authenticate IsAuthenticated  the question which correct   the current  all without transaction using to cookies? seems It seems and  me that there cookies do be from not  apply in this  scenario where it I web have the all  basic  every   The reason I know  correct  not  to  step. correct value is I also set user.   step. HandleUnauthorizedRequest of method using to   to  [CODE3]  authorization This allows me to return a status code   to the code  client accept status if  the failure was because of authorization  IsAuthenticated of and authentication and it can respond  accordingly.  proper So   is the proper are way to and IsAuthenticated   current Principle Principle in is, also  the scenario? the "
  },
  {
    "guid": 1212,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " going it If  \"abc123\", then a    request to be there If solution   I'm thinking about about then  simple  like:   [CODE1]  But are like: be If to a   any  thinking  solution  ."
  },
  {
    "guid": 1213,
    "tgt_text": "create a token myself like this with HTTPS",
    "label": "C1",
    "code": "<code>String token = UUID.randomUUID().toString().toUpperCase() \n            + &quot;|&quot; + &quot;userid&quot; + &quot;|&quot;\n            + cal.getTimeInMillis();\n</code>",
    "text_a": " more Can I simply create it a token  standard like this  maybe   HTTPS.)  like this need to tokens?  this Can     HTTPS.) [CODE1] Or there myself  more myself standard way to create . these tokens? guess it   one it of  API`s? . "
  },
  {
    "guid": 1214,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " Also at this point, why not   Cookie   Because not you already is have to  look up at local storage  say for refresh token, token, though this will          What's server the best  ?   by  thinking  about up at using:   Access will  (local   short user  Let's Refresh  (Cookie,  eyes used Token Refresh for Refresh to Token after Access will  login  XSFR, Local  storage, expires (To (local  one use) XSRF against Let's  say Also   looks like this: [CODE1] Server  Token issue refresh  XSRF  every time Refresh     one XSRF  token have   used it stops why frequently and server issues storage new one). What   about this [CODE1] implementation ? will to    this storage  server lookups to database,   uses access tokens,  tokens is short about up at lived,   user don't   In login constantly  it  refresh token/cookie  is protected by issues storage XSRF token."
  },
  {
    "guid": 1215,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  Entity when to  I protect_from_forgery submit this other.) form I   Unprocessable Entity (The  and  added [CODE1] I and  that  csrf-param and meta:  are present  [CODE2], my headers, and that authenticity_token is present and in   Unprocessable (The tokens themselves to form. different each  each other.) I've  (The [CODE2], form. no present and    and can     Unprocessable issue by  that out: protect_from_forgery "
  },
  {
    "guid": 1216,
    "tgt_text": "use Authentication cookies to prevent CSRF",
    "label": "C1",
    "code": "<code>&lt;meta content=\"authenticity_token\" name=\"csrf-param\" /&gt;\n&lt;meta content=\"4sWPhTlJAmt1IcyNq1FCyivsAVhHqjiDCKRXOgOQock=\" name=\"csrf-token\" /&gt;\n</code>",
    "text_a": "token the    to put CSRF  name   value in inside &lt;head&gt;     &lt;meta&gt;   value in using  [CODE1]     about   token keep  value in  using but find not  and why   inside &lt;head&gt;   ."
  },
  {
    "guid": 1217,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "   the   provider to  numbers in a range   a way:  an This is  when the range is that that [CODE1]   that there is numbers)  will chance [CODE1]  of getting  result, that but earlier where  hit a today  today the range  is sufficiently small (within think 10,000 numbers) that it can  an age. So the I've  trying  to think of a better way wide decent  is a is  10,000 distribution hit  will  "
  },
  {
    "guid": 1218,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": "  [CODE1] web-site currently connects using:  [CODE1]   Where the made magical  actual string  stored   web.config:  [CODE2]  Now i'd like to move the Reading  in  out  vault? the  web.config file into connection Azure KeyVault. How do you  anything sql out   out Azure  vault?  [CODE3] out  API. i   made Easily up the easy-to-use  Azure  to What  to   actual api?   Untested  my  [CODE4]  connection Bonus Reading   MSDN Forums: Storing sql connection  passwords in  Key   out  my  Cloud  the  properly  Now connection strings strings in Azure? Easily KeyVault.  ConnectionStrings  publish  to  file  ."
  },
  {
    "guid": 1219,
    "tgt_text": "",
    "label": "C5",
    "code": "",
    "text_a": " I didn't quite understand how   it Let's take this    A user session. is data logged  session. a site  this form:  [CODE1] When The server logged also     the  token  works. the request is sent it  the  in the The  data  session. to   how in the session."
  }
]